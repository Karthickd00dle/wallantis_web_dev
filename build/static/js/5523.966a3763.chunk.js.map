{"version":3,"file":"static/js/5523.966a3763.chunk.js","mappings":"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","sources":["action/CartAct.js","component/Home/CartSummary/OrderSummary/index.jsx","component/Home/CartSummary/CartItems/index.jsx","component/Home/CartSummary/index.jsx","component/common/InstallerDataTime/index.jsx"],"sourcesContent":["import { addQuery } from \"service/helperFunctions\";\r\nimport { cartApi } from \"../service/apiVariables\";\r\n\r\nexport const createCartApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...cartApi.createCart,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const getCartListing =\r\n  () =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...cartApi.cartList,\r\n      }).then((data) => {\r\n        resolve(data);\r\n      });\r\n    });\r\n  };\r\n\r\nexport const deleteCart =\r\n  (query) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      addQuery(query, cartApi.deleteCart);\r\n      apiCall({\r\n        ...cartApi.deleteCart,\r\n      }).then((data) => {\r\n        resolve(data);\r\n      });\r\n    });\r\n  };\r\n\r\nexport const updateCart =\r\n  (query, body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      addQuery(query, cartApi.updateCart);\r\n      apiCall({\r\n        ...cartApi.updateCart,\r\n        body,\r\n      }).then((data) => {\r\n        resolve(data);\r\n      });\r\n    });\r\n  };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { CustomDialog, NormalInput } from \"component/common\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCartListing, updateCart } from \"action/CartAct\";\r\nimport {\r\n  conditionalLoad,\r\n  customMomentFormat,\r\n  ternaryCondition,\r\n} from \"service/helperFunctions\";\r\n\r\nimport InstallerDateTime from \"component/common/InstallerDataTime\";\r\n\r\nexport const OrderSummaryMain = ({\r\n  cartData,\r\n  activeCartItem,\r\n  getCartListingAPI,\r\n  updateCartCallBack,\r\n  updateCartAPI,\r\n}) => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const [cartSummaryInfo, setCartSummaryInfo] = useState([]);\r\n\r\n  // const [openinstallerDateTime, setOpeninstallerDateTime] = useState(false);\r\n\r\n  const getCartListing = () => {\r\n    getCartListingAPI()\r\n      .then(({ response }) => {\r\n        setCartSummaryInfo(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  // const [installerDate, setInstallerDate] = useState(\r\n  //   ternaryCondition(\r\n  //     activeCartItem,\r\n  //     activeCartItem?.installerDate,\r\n  //     cartSummaryInfo[0]?.installerDate\r\n  //   )\r\n  // );\r\n\r\n  // const [installerTime, setInstallerTime] = useState(\r\n  //   ternaryCondition(\r\n  //     activeCartItem,\r\n  //     activeCartItem?.installerTime,\r\n  //     cartSummaryInfo[0]?.installerTime\r\n  //   )\r\n  // );\r\n  // const updateCart = () => {\r\n  //   let query = {\r\n  //     url_id: ternaryCondition(\r\n  //       activeCartItem,\r\n  //       activeCartItem?.id,\r\n  //       cartSummaryInfo[0]?._id\r\n  //     ),\r\n  //   };\r\n  //   let body = {\r\n  //     quantity: ternaryCondition(\r\n  //       activeCartItem,\r\n  //       activeCartItem?.quantity,\r\n  //       cartSummaryInfo[0]?.quantity\r\n  //     ),\r\n  //     color: ternaryCondition(\r\n  //       activeCartItem,\r\n  //       activeCartItem?.color,\r\n  //       cartSummaryInfo[0]?.color\r\n  //     ),\r\n  //     installer: ternaryCondition(\r\n  //       activeCartItem,\r\n  //       activeCartItem?.installer,\r\n  //       cartSummaryInfo[0]?.installer\r\n  //     ),\r\n  //   };\r\n\r\n  //   const getBody = (installer) => {\r\n  //     if (installer) {\r\n  //       return {\r\n  //         ...body,\r\n  //         installerDate: installerDate,\r\n  //         installerTime: installerTime,\r\n  //       };\r\n  //     } else {\r\n  //       return { ...body };\r\n  //     }\r\n  //   };\r\n\r\n  //   updateCartAPI(\r\n  //     query,\r\n  //     getBody(\r\n  //       ternaryCondition(\r\n  //         activeCartItem,\r\n  //         activeCartItem?.installer,\r\n  //         cartSummaryInfo[0]?.installer\r\n  //       )\r\n  //     )\r\n  //   )\r\n  //     .then(() => {\r\n  //       getCartListing();\r\n  //     })\r\n  //     .then((res) => {\r\n  //       setCartSummaryInfo(res.response.product);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    getCartListing();\r\n  }, [updateCartCallBack]);\r\n\r\n  // const handleConfirmDateTime = () => {\r\n  //   updateCart();\r\n  //   setOpeninstallerDateTime(false);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"order-summary\">\r\n        <label className=\"text-title pb-3\">Order Summary</label>\r\n        {/* <div\r\n          className=\"d-flex align-items-center\r\n      \"\r\n        >\r\n          <img\r\n            height=\"130px\"\r\n            width=\"130px\"\r\n            src={CustomRecipeWallpaper}\r\n            alt=\"product icon\"\r\n          />\r\n          <div className=\"ps-3\">\r\n            <p className=\"item-label\">\r\n              {ternaryCondition(\r\n                activeCartItem,\r\n                activeCartItem?.title,\r\n                cartSummaryInfo[0]?.productId?.title\r\n              )}\r\n            </p>\r\n            <div className=\"d-flex justify-content-between order-count-container\">\r\n              <div className=\"me-1 order-count cursor-pointer\">-</div>\r\n              <NormalInput\r\n                max=\"2\"\r\n                name=\"add\"\r\n                type=\"number\"\r\n                className=\"mx-1 order-count-input\"\r\n                value={ternaryCondition(\r\n                  activeCartItem,\r\n                  activeCartItem?.quantity,\r\n                  cartSummaryInfo[0]?.quantity\r\n                )}\r\n                register={register}\r\n                errors={errors}\r\n              />\r\n              <div className=\"order-count ms-1 cursor-pointer\">+</div>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n\r\n        {/* {conditionalLoad(\r\n          ternaryCondition(\r\n            activeCartItem,\r\n            activeCartItem?.installer,\r\n            cartSummaryInfo[0]?.installer\r\n          ),\r\n          <div className=\"order-installation-date\">\r\n            <label className=\"order-installation-text\">\r\n              Installation on{\" \"}\r\n              {customMomentFormat(\r\n                ternaryCondition(\r\n                  activeCartItem,\r\n                  activeCartItem?.installerDate,\r\n                  cartSummaryInfo[0]?.installerDate\r\n                ),\r\n                \"ddd DD, MMM\"\r\n              )}\r\n              -{\" \"}\r\n              {ternaryCondition(\r\n                activeCartItem,\r\n                activeCartItem?.installerTime,\r\n                cartSummaryInfo[0]?.installerTime\r\n              )}\r\n            </label>\r\n            <p\r\n              className=\"me-3 cursor-pointer edit-installation\"\r\n              onClick={() => setOpeninstallerDateTime(true)}\r\n            >\r\n              Edit\r\n            </p>\r\n          </div>\r\n        )} */}\r\n        <div className=\"coupon-container py-4\">\r\n          <label className=\"coupon-text\">Coupon</label>\r\n          <TextField\r\n            className=\"coupon-code-textbox mt-2\"\r\n            id=\"filled-start-adornment\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <label className=\"apply-coupon-text cursor-pointer\">\r\n                  APPLY\r\n                </label>\r\n              ),\r\n            }}\r\n            variant=\"outlined\"\r\n          />\r\n        </div>\r\n        <div className=\"price-breakup-container py-3\">\r\n          <label className=\"price-breakup-text\">Price Breakup Details</label>\r\n          <div>\r\n            <div\r\n              className=\"d-flex justify-content-between\r\n          \"\r\n            >\r\n              <div className=\"d-flex flex-column justify-content-between\">\r\n                <label\r\n                  className=\"price-content-title\r\n          \"\r\n                >\r\n                  Price ({cartSummaryInfo.totalQuantity} items)\r\n                </label>\r\n                <label\r\n                  className=\" price-content-title\r\n          \"\r\n                >\r\n                  Delivery Charges\r\n                </label>\r\n                <label\r\n                  className=\"price-content-title\r\n          \"\r\n                >\r\n                  Packaging Charges\r\n                </label>\r\n                {/* <label\r\n                  className=\"price-content-title\r\n          \"\r\n                >\r\n                  Installation Charges\r\n                </label> */}\r\n                <label\r\n                  className=\"price-content-title\r\n          \"\r\n                >\r\n                  GST Charges\r\n                </label>\r\n              </div>\r\n              <div className=\"d-flex flex-column justify-content-between\">\r\n                <label\r\n                  className=\"price-content-item\r\n          \"\r\n                >\r\n                  ₹ {cartSummaryInfo.totalPrice}\r\n                </label>\r\n                <label\r\n                  className=\"text-green-15 price-content-title\r\n          \"\r\n                >\r\n                  {`₹ ${cartSummaryInfo.deliveryCharge}`}\r\n                </label>\r\n                <label\r\n                  className=\"price-content-item\r\n          \"\r\n                >\r\n                  {`₹ ${cartSummaryInfo.packingCharge}`}\r\n                </label>\r\n                {/* <label\r\n                  className=\"price-content-item\r\n          \"\r\n                >\r\n                  ₹ 499\r\n                </label> */}\r\n                <label\r\n                  className=\"price-content-item\r\n          \"\r\n                >\r\n                  ₹ {cartSummaryInfo.gstPrice}\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"sub-total-coupon-container py-1 my-1 d-flex justify-content-between\">\r\n              <div className=\"d-flex flex-column\">\r\n                <label\r\n                  className=\"price-content-title\r\n          \"\r\n                >\r\n                  Sub Total Price\r\n                </label>\r\n                <label\r\n                  className=\"price-content-title\r\n          \"\r\n                >\r\n                  Coupon Discount\r\n                </label>\r\n              </div>\r\n              <div className=\"d-flex flex-column\">\r\n                <label\r\n                  className=\"price-content-item\r\n          \"\r\n                >\r\n                  ₹ {cartSummaryInfo.totalAmount}\r\n                </label>\r\n                <label\r\n                  className=\"price-content-item\r\n          \"\r\n                >\r\n                  ₹ {cartSummaryInfo.discountPrice}\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <label\r\n                className=\"price-content-title\r\n          \"\r\n              >\r\n                Total Amount to be paid\r\n              </label>\r\n              <label\r\n                className=\"text-light_bg fw-700 fs-24 price-content-item \r\n          \"\r\n              >\r\n                ₹ {cartSummaryInfo.totalPaidAmount}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <CustomDialog\r\n        isOpen={openinstallerDateTime}\r\n        handleClose={() => setOpeninstallerDateTime(false)}\r\n      >\r\n        <InstallerDateTime\r\n          installerDate={installerDate}\r\n          setInstallerDate={setInstallerDate}\r\n          installerTime={installerTime}\r\n          setInstallerTime={setInstallerTime}\r\n          handleConfirm={handleConfirmDateTime}\r\n        />\r\n      </CustomDialog> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getCartListingAPI: getCartListing,\r\n      updateCartAPI: updateCart,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const OrderSummary = connect(null, mapDispatchToProps)(OrderSummaryMain);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.scss\";\r\nimport { CustomButton, NormalInput } from \"component/common\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  conditionalLoad,\r\n  ternaryCondition,\r\n  customMomentFormat,\r\n} from \"service/helperFunctions\";\r\nimport { history } from \"service/helpers\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { deleteCart, getCartListing, updateCart } from \"action/CartAct\";\r\n\r\nconst ItemsRow = ({\r\n  deleteCartApi,\r\n  updateCartCallBack,\r\n  setActiveCartItem,\r\n  itemData: {\r\n    _id,\r\n    productId,\r\n    productTitle,\r\n    productImages,\r\n    colorName,\r\n    status,\r\n    quantity,\r\n    daliveryDate,\r\n    delivery_price,\r\n    installer,\r\n    installerDate,\r\n    installerTime,\r\n    price,\r\n  },\r\n}) => {\r\n  const { register } = useForm();\r\n  const [formData, setFormData] = useState({ quantity: quantity });\r\n  const handleProductCount = ({ target: { name, value } }) => {\r\n    setFormData({ ...formData, [name]: Number(value) });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateCartCallBack({\r\n      id: _id,\r\n      cartBody: { quantity: formData.quantity, color: colorName },\r\n    });\r\n  }, [formData]);\r\n\r\n  return (\r\n    <div key={_id} className=\"item-row-container\">\r\n      <div className=\"d-flex justify-content-between\">\r\n        <div className=\"d-flex\">\r\n          <img\r\n            src={productImages ? productImages[0] : \"\"}\r\n            height=\"200px\"\r\n            width=\"200px\"\r\n            alt=\"product\"\r\n          />\r\n          <div className=\"d-flex ps-5 flex-column\">\r\n            <label\r\n              className=\"pb-2 item-title cursor-pointer\"\r\n              onClick={() =>\r\n                setActiveCartItem({\r\n                  id: _id,\r\n                  title: productTitle,\r\n                  quantity: formData.quantity,\r\n                  color: colorName,\r\n                  installer: installer,\r\n                  installerDate: installerDate,\r\n                  installerTime: installerTime,\r\n                })\r\n              }\r\n            >\r\n              {productTitle}\r\n            </label>\r\n            <label className=\"py-2 item-color\">{`Color - ${colorName}`}</label>\r\n            <label className=\"py-2 item-status\">\r\n              {ternaryCondition(status, \"In Stock\", \"Out of Stock\")}\r\n            </label>\r\n            <label className=\"py-2 item-delivery-info\">\r\n              {`Delivery by ${customMomentFormat(\r\n                daliveryDate,\r\n                \"ddd MMM YY\"\r\n              )} | ${delivery_price ? delivery_price : \"Free\"}`}\r\n            </label>\r\n            <label className=\"pt-2 item-delivery-info\">\r\n              {conditionalLoad(\r\n                installer,\r\n                `Installation on ${customMomentFormat(\r\n                  installerDate,\r\n                  \"ddd MMM YY\"\r\n                )} ${installerTime}`\r\n              )}\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <label className=\"pt-3 item-price\">{`₹${price}`}</label>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between align-items-center w-75 py-4\">\r\n        <div className=\"d-flex justify-content-between order-count-container\">\r\n          <div\r\n            onClick={conditionalLoad(formData.quantity > 0, () =>\r\n              setFormData({\r\n                quantity: formData.quantity - 1,\r\n              })\r\n            )}\r\n            className=\"me-1 order-count cursor-pointer\"\r\n          >\r\n            -\r\n          </div>\r\n          <NormalInput\r\n            name=\"quantity\"\r\n            type=\"number\"\r\n            value={formData.quantity}\r\n            onChange={handleProductCount}\r\n            max=\"2\"\r\n            className=\"mx-1 text-center order-count-input\"\r\n            register={register}\r\n          />\r\n          <div\r\n            onClick={() =>\r\n              setFormData({\r\n                quantity: formData.quantity + 1,\r\n              })\r\n            }\r\n            className=\"order-count ms-1 cursor-pointer\"\r\n          >\r\n            +\r\n          </div>\r\n        </div>\r\n        <label className=\"save-for-later-text\">SAVE FOR LATER</label>\r\n        <label className=\"remove-text\" onClick={() => deleteCartApi(_id)}>\r\n          REMOVE\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CartItemsMain = ({\r\n  cartData,\r\n  deleteCartApi,\r\n  updateCartCallBack,\r\n  setActiveCartItem,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"cart-items-container\">\r\n        {ternaryCondition(\r\n          cartData?.products?.length > 0,\r\n          <div className=\"cart-items-inner-container\">\r\n            {cartData?.products?.map((itemData) => (\r\n              <div className=\"item-container-main\" key={itemData._id}>\r\n                <ItemsRow\r\n                  setActiveCartItem={setActiveCartItem}\r\n                  itemData={itemData}\r\n                  deleteCartApi={deleteCartApi}\r\n                  updateCartCallBack={updateCartCallBack}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>,\r\n          <div className=\"cart-empty-container\">\r\n            <label>Cart is Empty</label>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {conditionalLoad(\r\n        cartData?.products?.length > 0,\r\n        <CustomButton\r\n          className=\"mt-5\"\r\n          style={{ width: \"245px\", height: \"50px\", backgroundColor: \"#A26220\" }}\r\n          variant=\"contained\"\r\n          onClick={() => history.push(\"/home/payment-page\")}\r\n        >\r\n          Proceed to Checkout\r\n        </CustomButton>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getCartListingAPI: getCartListing,\r\n      deleteCartAPI: deleteCart,\r\n      updateCartAPI: updateCart,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const CartItems = connect(null, mapDispatchToProps)(CartItemsMain);\r\n","import { OrderSummary } from \"./OrderSummary\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CartItems } from \"./CartItems\";\r\nimport \"./style.scss\";\r\n\r\nimport { bindActionCreators } from \"redux\";\r\nimport { deleteCart, getCartListing, updateCart } from \"action/CartAct\";\r\nimport { NormalNavigate } from \"component/common\";\r\nimport { conditionalLoad } from \"service/helperFunctions\";\r\n\r\nconst CartSummaryMain = ({\r\n  getCartListingAPI,\r\n  deleteCartAPI,\r\n  updateCartAPI,\r\n}) => {\r\n  const [cartData, setCartData] = useState([]);\r\n  const [activeCartItem, setActiveCartItem] = useState();\r\n\r\n  const getCartListing = () => {\r\n    getCartListingAPI()\r\n      .then((res) => {\r\n        setCartData(res.response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deleteCartApi = (id) => {\r\n    let query = {\r\n      url_id: id,\r\n    };\r\n    deleteCartAPI(query)\r\n      .then(() => {\r\n        getCartListing();\r\n      })\r\n      .then((res) => {\r\n        setCartData(res.response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const updateCartApi = (id, cartBody) => {\r\n    let query = {\r\n      url_id: id,\r\n    };\r\n    let body = {\r\n      quantity: cartBody.quantity,\r\n      color: cartBody.color,\r\n    };\r\n    updateCartAPI(query, body)\r\n      .then(() => {\r\n        getCartListing();\r\n      })\r\n      .then((res) => {\r\n        setCartData(res.response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  console.log(cartData, \"cart data\");\r\n  const updateCartCallBack = ({ id, cartBody }) => {\r\n    updateCartApi(id, cartBody);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCartListing();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NormalNavigate\r\n        arrowStyle=\"arrow-style\"\r\n        linkStyle=\"link-style\"\r\n        navigationStyle=\"navigation-style\"\r\n      />\r\n      <div className=\"order-summary-container d-flex justify-content-between\">\r\n        <CartItems\r\n          cartData={cartData}\r\n          deleteCartApi={deleteCartApi}\r\n          updateCartCallBack={updateCartCallBack}\r\n          setActiveCartItem={setActiveCartItem}\r\n        />\r\n        {conditionalLoad(\r\n          cartData?.products?.length > 0,\r\n          <OrderSummary\r\n            activeCartItem={activeCartItem}\r\n            updateCartCallBack={updateCartCallBack}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getCartListingAPI: getCartListing,\r\n      deleteCartAPI: deleteCart,\r\n      updateCartAPI: updateCart,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst CartSummary = connect(null, mapDispatchToProps)(CartSummaryMain);\r\nexport default CartSummary;\r\n","import React, { useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport { conditionalLoad } from \"service/helperFunctions\";\r\nimport { CustomButton } from \"..\";\r\n\r\nconst installerDateData = [\r\n  {\r\n    id: 1,\r\n    day: \"Fri\",\r\n    date: 25,\r\n    value: \"2023-04-25\",\r\n  },\r\n  {\r\n    id: 2,\r\n    day: \"Sat\",\r\n    date: 26,\r\n    value: \"2023-04-26\",\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    day: \"Sun\",\r\n    date: 27,\r\n    value: \"2023-04-27\",\r\n  },\r\n  {\r\n    id: 4,\r\n    day: \"Mon\",\r\n    date: 28,\r\n    value: \"2023-04-28\",\r\n  },\r\n];\r\n\r\nconst installerTimeData = [\r\n  {\r\n    id: 1,\r\n    label: \"09:00 AM - 11:00 AM\",\r\n    value: \"09:00 AM - 11:00 AM\",\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"11:00 AM - 01:00 PM\",\r\n    value: \"11:00 AM - 01:00 PM\",\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    label: \"01:00 PM - 03:00 PM\",\r\n    value: \"01:00 PM - 03:00 PM\",\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"03:00 PM - 05:00 PM\",\r\n    value: \"03:00 PM - 05:00 PM\",\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"05:00 PM - 07:00 PM\",\r\n    value: \"05:00 PM - 07:00 PM\",\r\n  },\r\n  {\r\n    id: 6,\r\n    label: \"07:00 PM - 09:00 PM\",\r\n    value: \"07:00 PM - 09:00 PM\",\r\n  },\r\n];\r\n\r\nconst InstallerDateTime = ({\r\n  installerDate,\r\n  setInstallerDate,\r\n  installerTime,\r\n  setInstallerTime,\r\n  handleConfirm,\r\n}) => {\r\n  return (\r\n    <div className=\"select-date-time-container\">\r\n      {console.log(installerDate, installerTime, \"date and time\")}\r\n      <label className=\"title-label\">\r\n        When should the professional arrive ?\r\n      </label>\r\n      <div className=\"date-container\">\r\n        <label className=\"select-date-label\">Select Date</label>\r\n        <div className=\"date-selection-container d-flex justify-content-between mt-3\">\r\n          {installerDateData.map(({ id, day, date, value }) => (\r\n            <div\r\n              className={`cursor-pointer date-selection ${conditionalLoad(\r\n                installerDate === value,\r\n                \"active\"\r\n              )}`}\r\n              key={id}\r\n              onClick={() => setInstallerDate(value)}\r\n            >\r\n              <label className=\"day-label cursor-pointer\">{day}</label>\r\n              <label className=\"date-label cursor-pointer\">{date}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"date-container mt-4\">\r\n        <label className=\"select-date-label\">Select time slot</label>\r\n        <div className=\"time-selection-container d-flex justify-content-between mt-3\">\r\n          {installerTimeData.map(({ id, label, value }) => (\r\n            <div\r\n              className={`cursor-pointer time-selection ${conditionalLoad(\r\n                installerTime === value,\r\n                \"active\"\r\n              )}`}\r\n              key={id}\r\n              onClick={() => setInstallerTime(value)}\r\n            >\r\n              <label className=\"time-label cursor-pointer\">{label}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <CustomButton\r\n          className=\"confirm-date-time-button mt-5 py-3 px-5\"\r\n          onClick={handleConfirm}\r\n        >\r\n          Confirm Date & Time\r\n        </CustomButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstallerDateTime"],"names":["createCartApi","body","dispatch","getState","_ref","apiCall","Toast","Promise","resolve","reject","cartApi","createCart","then","data","catch","_ref2","message","type","getCartListing","_ref3","cartList","deleteCart","query","_ref4","addQuery","updateCart","_ref5","OrderSummary","connect","bindActionCreators","getCartListingAPI","updateCartAPI","cartData","activeCartItem","updateCartCallBack","register","formState","errors","useForm","cartSummaryInfo","setCartSummaryInfo","useState","useEffect","response","err","console","log","_jsx","children","_jsxs","className","TextField","id","InputProps","endAdornment","variant","totalQuantity","totalPrice","deliveryCharge","packingCharge","gstPrice","totalAmount","discountPrice","totalPaidAmount","ItemsRow","deleteCartApi","setActiveCartItem","itemData","_id","productId","productTitle","productImages","colorName","status","quantity","daliveryDate","delivery_price","installer","installerDate","installerTime","price","formData","setFormData","cartBody","color","src","height","width","alt","onClick","title","ternaryCondition","customMomentFormat","conditionalLoad","NormalInput","name","value","onChange","target","Number","max","CartItems","deleteCartAPI","_cartData$products","_cartData$products2","_cartData$products3","products","length","map","CustomButton","style","backgroundColor","history","push","setCartData","res","updateCartApi","url_id","_Fragment","NormalNavigate","arrowStyle","linkStyle","navigationStyle","installerDateData","day","date","installerTimeData","label","setInstallerDate","setInstallerTime","handleConfirm"],"sourceRoot":""}