{"version":3,"file":"static/js/3074.74618c64.chunk.js","mappings":"qKAEO,MAAMA,EACVC,GACD,CAACC,EAAUC,EAAQC,KAA0B,IAAxB,QAAEC,EAAO,MAAEC,GAAOF,EACrC,OAAO,IAAIG,SAAQ,CAACC,EAASC,KAC3BJ,EAAQ,IACHK,EAAAA,GAAQV,eACXC,SAECU,MAAMC,IACLJ,EAAQI,EAAK,IAEdC,OAAMC,IAAkB,IAAjB,QAAEC,GAASD,EACjBL,EAAOH,EAAM,CAAEU,KAAM,QAASD,YAAW,GACzC,GACJ,EAGOE,EACVhB,GACD,CAACC,EAAUC,EAAQe,KAA0B,IAAxB,QAAEb,EAAO,MAAEC,GAAOY,EACrC,OAAO,IAAIX,SAAQ,CAACC,EAASC,KAC3BJ,EAAQ,IACHK,EAAAA,GAAQO,SACXhB,SAECU,MAAKQ,IAAmB,IAAlB,SAAEC,GAAUD,EACjBE,eAAeC,QAAQ,YAAaF,EAASG,cAC7Cf,EAAQY,EAAS,IAElBP,OAAMW,IAAkB,IAAjB,QAAET,GAASS,EACjBf,EAAOH,EAAM,CAAEU,KAAM,QAASD,YAAW,GACzC,GACJ,EAGOU,EACVxB,GACD,CAACC,EAAUC,EAAQuB,KAA0B,IAAxB,QAAErB,EAAO,MAAEC,GAAOoB,EACrC,OAAO,IAAInB,SAAQ,CAACC,EAASC,KAC3BJ,EAAQ,IACHK,EAAAA,GAAQiB,UACX1B,SAECU,MAAMC,IACLJ,EAAQI,GACRN,EAAM,CAAEU,KAAM,UAAWD,QAASH,EAAKG,SAAU,IAElDF,OAAMe,IAAkB,IAAjB,QAAEb,GAASa,EACjBnB,EAAOH,EAAM,CAAEU,KAAM,QAASD,YAAW,GACzC,GACJ,EAGOc,EACV5B,GACD,CAACC,EAAUC,EAAQ2B,KAA0B,IAAxB,QAAEzB,EAAO,MAAEC,GAAOwB,EACrC,OAAO,IAAIvB,SAAQ,CAACC,EAASC,KAC3BJ,EAAQ,IACHK,EAAAA,GAAQqB,UACX9B,SAECU,MAAMC,IACLJ,EAAQI,GACRN,EAAM,CAAEU,KAAM,UAAWD,QAASH,EAAKG,SAAU,IAElDF,OAAMmB,IAAkB,IAAjB,QAAEjB,GAASiB,EACjBvB,EAAOH,EAAM,CAAEU,KAAM,QAASD,YAAW,GACzC,GACJ,C,mMC6FN,MAiBA,GAFckB,EAAAA,EAAAA,KAfUC,CAACC,EAAOC,KACvB,CACLA,SAAUA,MAIclC,IACnBmC,EAAAA,EAAAA,IACL,CACEC,aAAcrB,EAAAA,IAEhBf,IAIU+B,EApKd,SAA2B7B,GAA8B,IAA7B,aAAEkC,EAAY,SAAEF,GAAUhC,EACpD,MAAMmC,GAAWC,EAAAA,EAAAA,MAAcC,SAASC,MAAM,KAAKC,OAAO,GAAG,IACvD,SACJC,EAAQ,aACRC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MACEC,GAAUC,EAAAA,EAAAA,OAETC,EAAcC,IAAmBC,EAAAA,EAAAA,YAExC,SAASC,EAAUlC,GACjB,MAAMmC,EAAoB,OAARnC,QAAQ,IAARA,OAAQ,EAARA,EAAUG,aACxBgC,EACFlC,eAAeC,QAAQ,YAAaiC,GAEpCC,QAAQC,IAAI,8CAEdC,EAAAA,EAAAA,IACe,iBAAbnB,EACIH,EAASuB,cAAc,GACvBV,EAAQW,KAAK,UAErB,CAkBA,OACEC,EAAAA,EAAAA,KAAA,QAAMC,SAAUjB,GAjBAjC,IAChB0B,EAAa,CACXyB,SAAUnD,EAAKoD,OACfC,SAAUrD,EAAKqD,SACfC,UAAW,IACVvD,MAAKG,IAAA,IAAC,SAAEM,GAAUN,EAAA,OAAKwC,EAAUlC,EAAS,GAAC,IAYP+C,UACrCC,EAAAA,EAAAA,MAAA,OAAKC,UAAY,iBAAgBjC,EAASkB,sBAAsBa,SAAA,EAC9DC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBF,SAAA,EACjCN,EAAAA,EAAAA,KAACS,EAAAA,GAAW,CACVC,YAAY,4BACZC,QAAQ,WACRC,KAAK,SACLJ,UAAU,gCACVzB,SAAUA,EACVG,OAAQA,EACR2B,SAAWC,GAAMvB,EAAgBuB,EAAEC,OAAOC,UAE5ChB,EAAAA,EAAAA,KAACS,EAAAA,GAAW,CACVC,YAAY,iBACZC,QAAQ,WACRH,UAAU,4BACVrD,KAAK,WACL8D,IAAK,EACLC,IAAK,GACLN,KAAK,WACL7B,SAAUA,EACVG,OAAQA,EACRiC,cACU,OAAR5C,QAAQ,IAARA,OAAQ,EAARA,EAAU6C,aACRpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAc,CAACC,SAAS,MAAKhB,UAC5BN,EAAAA,EAAAA,KAAA,SACEuB,QAASA,KACPnC,EAAQW,KAAK,uBAAwB,EAAE,EAEzCS,UAAU,wCAAuCF,SAClD,2BAQC,OAAR/B,QAAQ,IAARA,GAAAA,EAAU6C,aACVpB,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,6BAA4BF,UACzCN,EAAAA,EAAAA,KAAA,SACEuB,QAASA,KACPnC,EAAQW,KAAK,wBAAyBT,EAAa,EAErDkB,UAAU,6CAA4CF,SACvD,2BAMPN,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,cAAaF,UAC1BC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,0CACiCN,EAAAA,EAAAA,KAAA,KAAGwB,KAAK,GAAElB,SAAC,iBAAiB,IAAI,QAClEN,EAAAA,EAAAA,KAAA,KAAGwB,KAAK,GAAElB,SAAC,yBAGnBN,EAAAA,EAAAA,KAACyB,EAAAA,GAAY,CACXC,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,WAC5CpB,UAAU,eACVrD,KAAK,SAAQmD,SACd,WAGDN,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,oBAAmBF,UAChCN,EAAAA,EAAAA,KAAC6B,EAAAA,GAAW,CACVC,UAAYC,IA3EAC,KACpB,MAAMC,GAAUC,EAAAA,EAAAA,GAAWF,EAASG,YACpC1D,EAAa,CACXyB,SAAU+B,EAAQG,IAClB/B,UAAW,IACVvD,MAAKO,IAAA,IAAC,SAAEE,GAAUF,EAAA,OAAKoC,EAAUlC,EAAS,GAAC,EAuEpC8E,CAAaN,EAAI,EAEnBO,QAASA,KACP3C,QAAQC,IAAI,eAAe,OAIxB,OAARrB,QAAQ,IAARA,OAAQ,EAARA,EAAU6C,aACTb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBF,SAAA,CAAC,8BAEnCN,EAAAA,EAAAA,KAAA,KACEQ,UAAU,sBACVe,QAASA,KACPnC,EAAQW,KAAK,iBAAiB,EAC9BO,SACH,0BAKK,OAAR/B,QAAQ,IAARA,GAAAA,EAAU6C,aACVb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BN,EAAAA,EAAAA,KAAA,SAAOQ,UAAU,yBAAwBF,SAAC,iCAG1CN,EAAAA,EAAAA,KAAA,SACEQ,UAAU,wCACVe,QAASA,KACPnC,EAAQW,KAAK,iBAAiB,EAC9BO,SACH,wBAQb,G","sources":["action/AuthAct.js","component/Auth/Login/index.jsx"],"sourcesContent":["import { authApi } from \"../service/apiVariables\";\n\nexport const registationApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.registationApi,\n        body,\n      })\n        .then((data) => {\n          resolve(data);\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n\nexport const loginApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.loginApi,\n        body,\n      })\n        .then(({ response }) => {\n          sessionStorage.setItem(\"authToken\", response.access_token);\n          resolve(response);\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n\nexport const verifyOTPApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.verifyOTP,\n        body,\n      })\n        .then((data) => {\n          resolve(data);\n          Toast({ type: \"success\", message: data.message });\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n\nexport const resendOTPApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.resendOTP,\n        body,\n      })\n        .then((data) => {\n          resolve(data);\n          Toast({ type: \"success\", message: data.message });\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n\nexport const resendOTPVerifyApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.resendOTPVerify,\n        body,\n      })\n        .then((data) => {\n          resolve(data);\n          Toast({ type: \"success\", message: data.message });\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n","import React, { useState } from \"react\";\nimport \"./style.scss\";\nimport jwt_decode from \"jwt-decode\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { loginApi } from \"action/AuthAct\";\nimport { CustomButton } from \"component/common\";\nimport { CustomInput } from \"component/common/NormalInput\";\nimport { InputAdornment } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { ternaryCondition } from \"service/helperFunctions\";\nimport { GoogleLogin } from \"@react-oauth/google\";\n\nfunction LoginComponentMain({ loginApiCall, ownProps }) {\n  const location = useLocation().pathname.split(\"/\").slice(-1)[0];\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const history = useHistory();\n\n  const [currentEmail, setCurrentEmail] = useState();\n\n  function postLogin(response) {\n    const authToken = response?.access_token;\n    if (authToken) {\n      sessionStorage.setItem(\"authToken\", authToken);\n    } else {\n      console.log(\"Access token is generated from credential\");\n    }\n    ternaryCondition(\n      location === \"payment-page\"\n        ? ownProps.setActiveStep(1)\n        : history.push(\"/home/\")\n    );\n  }\n\n  const onSubmit = (data) => {\n    loginApiCall({\n      username: data.mailId,\n      password: data.password,\n      loginType: 3,\n    }).then(({ response }) => postLogin(response));\n  };\n\n  const googleSignIn = (OAuthRes) => {\n    const decoded = jwt_decode(OAuthRes.credential);\n    loginApiCall({\n      username: decoded.sub,\n      loginType: 2,\n    }).then(({ response }) => postLogin(response));\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className={`login-entries ${ownProps.postLogin}post-login`}>\n        <div className=\"d-flex flex-column\">\n          <CustomInput\n            placeholder=\"Enter Email/Mobile number\"\n            variant=\"standard\"\n            name=\"mailId\"\n            className=\"email-mobile-input-field mt-4\"\n            register={register}\n            errors={errors}\n            onChange={(e) => setCurrentEmail(e.target.value)}\n          />\n          <CustomInput\n            placeholder=\"Enter Password\"\n            variant=\"standard\"\n            className=\"password-input-field mt-4\"\n            type=\"password\"\n            min={8}\n            max={20}\n            name=\"password\"\n            register={register}\n            errors={errors}\n            endAdornment={\n              ownProps?.postlogin && (\n                <InputAdornment position=\"end\">\n                  <label\n                    onClick={() => {\n                      history.push(\"/auth/forgotpassword\", 1);\n                    }}\n                    className=\"forget-text-inputfield cursor-pointer\"\n                  >\n                    Forget Password?\n                  </label>\n                </InputAdornment>\n              )\n            }\n          />\n\n          {!ownProps?.postlogin && (\n            <div className=\"d-flex justify-content-end\">\n              <label\n                onClick={() => {\n                  history.push(\"/auth/forgot-password\", currentEmail);\n                }}\n                className=\"forget-text-inputfield cursor-pointer pt-3\"\n              >\n                Forgot Password?\n              </label>\n            </div>\n          )}\n        </div>\n        <div className=\"login-terms\">\n          <label>\n            By continuing, you agree to Paperwall <a href=\"\">Terms of use</a>{\" \"}\n            and <a href=\"\">Privacy policy</a>\n          </label>\n        </div>\n        <CustomButton\n          style={{ backgroundColor: \"#A26220\", color: \"#FFFFFF\" }}\n          className=\"login-button\"\n          type=\"submit\"\n        >\n          Login\n        </CustomButton>\n        <div className=\"mt-4 login-google\">\n          <GoogleLogin\n            onSuccess={(res) => {\n              googleSignIn(res);\n            }}\n            onError={() => {\n              console.log(\"Login Failed\");\n            }}\n          />\n        </div>\n        {ownProps?.postlogin && (\n          <div className=\"login-register-post\">\n            Don’t have an account\n            <a\n              className=\"ps-2 cursor-pointer\"\n              onClick={() => {\n                history.push(\"/auth/register\");\n              }}\n            >\n              Create a account\n            </a>\n          </div>\n        )}\n        {!ownProps?.postlogin && (\n          <div className=\"login-register\">\n            <label className=\"dont-have-account-text\">\n              Don’t have an account?\n            </label>\n            <label\n              className=\"register-now-text ps-2 cursor-pointer\"\n              onClick={() => {\n                history.push(\"/auth/register\");\n              }}\n            >\n              Register Now\n            </label>\n          </div>\n        )}\n      </div>\n    </form>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ownProps: ownProps,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      loginApiCall: loginApi,\n    },\n    dispatch\n  );\n};\n\nconst Login = connect(mapStateToProps, mapDispatchToProps)(LoginComponentMain);\n\nexport default Login;\n"],"names":["registationApi","body","dispatch","getState","_ref","apiCall","Toast","Promise","resolve","reject","authApi","then","data","catch","_ref2","message","type","loginApi","_ref3","_ref4","response","sessionStorage","setItem","access_token","_ref5","verifyOTPApi","_ref6","verifyOTP","_ref7","resendOTPApi","_ref8","resendOTP","_ref9","connect","mapStateToProps","state","ownProps","bindActionCreators","loginApiCall","location","useLocation","pathname","split","slice","register","handleSubmit","formState","errors","useForm","history","useHistory","currentEmail","setCurrentEmail","useState","postLogin","authToken","console","log","ternaryCondition","setActiveStep","push","_jsx","onSubmit","username","mailId","password","loginType","children","_jsxs","className","CustomInput","placeholder","variant","name","onChange","e","target","value","min","max","endAdornment","postlogin","InputAdornment","position","onClick","href","CustomButton","style","backgroundColor","color","GoogleLogin","onSuccess","res","OAuthRes","decoded","jwt_decode","credential","sub","googleSignIn","onError"],"sourceRoot":""}