{"version":3,"file":"static/js/4607.309e7c8f.chunk.js","mappings":"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","sources":["component/common/CustomCheckBox/index.js","assets/svg/RadioButton/StaticRadio.js","component/Profile/AddNewAddress/GoogleMaps.jsx","component/Profile/AddNewAddress/index.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nexport const CustomCheckBox = React.forwardRef(\r\n  (\r\n    { name, value, className, onChange, checked, icon, checkedIcon, color },\r\n    ref\r\n  ) => (\r\n    <Checkbox\r\n      name={name}\r\n      value={value}\r\n      ref={ref}\r\n      checked={checked}\r\n      onChange={onChange}\r\n      className={className}\r\n      color={color}\r\n      checkedIcon={checkedIcon}\r\n      icon={icon}\r\n    />\r\n  )\r\n);\r\n","import * as React from \"react\";\r\n\r\nexport const StaticRadio = (props) => (\r\n  <svg width={24} height={24} fill=\"none\" {...props}>\r\n    <path\r\n      fill=\"#19AA60\"\r\n      fillRule=\"evenodd\"\r\n      d=\"M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12Zm0-4a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n  width: \"800px\",\r\n  height: \"600px\",\r\n};\r\n\r\nexport const GoogleMaps = () => {\r\n  const [map, setMap] = useState(null);\r\n  const [currentLocation, setCurrentLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setCurrentLocation({ lat: latitude, lng: longitude });\r\n        },\r\n        (error) => {\r\n          console.error(\"Error getting user's location:\", error.message);\r\n        }\r\n      );\r\n    } else {\r\n      console.error(\"Geolocation is not supported by your browser\");\r\n    }\r\n  }, []); // Run once when component mounts\r\n\r\n  const center = currentLocation || { lat: -34.397, lng: 150.644 }; // Default center if currentLocation is not available\r\n\r\n  const onMapLoad = (map) => {\r\n    setMap(map);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyCCfkOqB3TTsRb4RaARSnAVwsox83s0eRA\">\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={15} // Adjust the zoom level for better visibility\r\n        onLoad={onMapLoad}\r\n      >\r\n        {currentLocation && <Marker position={currentLocation} />}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default GoogleMaps;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CustomButton, CustomDialog, CustomSelect } from \"component/common\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  CheckboxChecked,\r\n  RadioChecked,\r\n  RadioUnchecked,\r\n} from \"assets/svg/Profile\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\r\nimport \"./style.scss\";\r\nimport { CustomCheckBox } from \"component/common/CustomCheckBox\";\r\nimport { CustomTextField } from \"component/common/NormalInput\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { createAddress, getAddress, updateAddress } from \"action/ProfileAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { ternaryCondition } from \"service/helperFunctions\";\r\nimport { Toast } from \"service/toast\";\r\nimport { StateList } from \"config\";\r\nimport { history } from \"service/helpers\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { StaticRadio } from \"assets/svg/RadioButton/StaticRadio\";\r\nimport { GoogleMaps } from \"./GoogleMaps\";\r\n\r\nconst AddressSchema = yup.object().shape({\r\n  fullName: yup\r\n    .string()\r\n    .required(\"Name is required\")\r\n    .min(2, \"Name must be atleast 2 characters\")\r\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\r\n  mobileNumber: yup\r\n    .string()\r\n    .min(10, \"Mobile Number must be atleast 10 digits\")\r\n    .max(16, \"Mobile Number must be less than 16 digits\")\r\n    .required(\"Mobile Number is required\"),\r\n  pincode: yup\r\n    .string()\r\n    .typeError(\"Pincode is required\")\r\n    .required(\"Pincode is required\")\r\n    .test(\"len\", \"Pincode must be 6 digits\", (val) => {\r\n      if (val) return val.toString().length === 6;\r\n    }),\r\n  installer: yup.string().required(\"Installer is required\"),\r\n  flatNo: yup.string().max(18).required(\"Flat No/House No is required\"),\r\n  area: yup.string().max(28).required(\"Area is required\"),\r\n  landmark: yup.string().max(16).required(\"Landmark is required\"),\r\n  city: yup\r\n    .string()\r\n    .required(\"City is required\")\r\n    .max(10)\r\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\r\n  state: yup\r\n    .string()\r\n    .required(\"State is required\")\r\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\r\n  selectAddressType: yup.string().required(\"Address Type is required\"),\r\n  isDefaultAddress: yup.boolean(),\r\n});\r\n\r\nconst AddNewAddressFC = ({\r\n  getAddressAPICall,\r\n  createAddressAPI,\r\n  updateAddressAPI,\r\n}) => {\r\n  let location = useLocation();\r\n  const { id } = useParams();\r\n\r\n  const { state } = useLocation();\r\n\r\n  const locationLabel = location?.pathname\r\n    .split(\"/\")\r\n    .slice(-2)[0]\r\n    .replace(/-/g, \" \");\r\n\r\n  const [loader, setLoader] = useState(true);\r\n  const [addressData, setAddressData] = useState();\r\n  const [googleMap, setGoogleMap] = useState();\r\n\r\n  const getAddress = () => {\r\n    let query = {\r\n      url_id: id,\r\n    };\r\n    getAddressAPICall({ ...query })\r\n      .then((res) => {\r\n        setAddressData(res?.response);\r\n      })\r\n      .then(() => {\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const createAddress = (data) => {\r\n    createAddressAPI(data)\r\n      .then((res) => {\r\n        setAddressData(res.response);\r\n        Toast({ type: \"success\", message: res.message });\r\n        history.push(\"/profile/profile-page\", 4);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const updateAddress = (data) => {\r\n    let query = {\r\n      url_id: id,\r\n    };\r\n    updateAddressAPI({ ...query }, data)\r\n      .then((res) => {\r\n        Toast({ type: \"success\", message: res.response });\r\n        history.push(\"/profile/profile-page\", 4);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getAddress();\r\n    }\r\n    setLoader(false);\r\n  }, []);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(AddressSchema),\r\n    defaultValues: {\r\n      fullName: state?.fullName,\r\n      mobileNumber: state?.mobileNumber,\r\n      pincode: state?.pincode,\r\n      installer: state?.installer,\r\n      flatNo: state?.flatNo,\r\n      area: state?.area,\r\n      landmark: state?.landmark,\r\n      city: state?.city,\r\n      state: state?.state,\r\n      country: state?.country,\r\n      selectAddressType: state?.selectAddressType,\r\n      isDefaultAddress: state?.isDefaultAddress,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"new-address-form-container\">\r\n        {ternaryCondition(\r\n          loader,\r\n          <div>Loading...</div>,\r\n          <form>\r\n            <div className=\"address-form\">\r\n              <label className=\"add-new-address-label\">\r\n                {ternaryCondition(id, locationLabel, \"Add New Address\")}\r\n              </label>\r\n\r\n              <div className=\"input-container mt-3\">\r\n                <input\r\n                  name=\"location\"\r\n                  value={addressData?.location}\r\n                  className={\"text-input mt-3\"}\r\n                  placeholder=\"Select from Map\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"pt-3 use-location-container d-flex align-items-center\">\r\n                <StaticRadio onClick={() => setGoogleMap(true)} />\r\n                <label className=\"ps-1 use-location-label\">\r\n                  Use Current Location\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"input-container mt-4\">\r\n                <label className=\"input-label\">Full Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"fullName\"\r\n                  className={\"text-input full-name mt-3\"}\r\n                  placeholder=\"Name\"\r\n                  {...register(\"fullName\")}\r\n                />\r\n\r\n                {errors.fullName && (\r\n                  <span className=\"error-text\">{errors.fullName.message}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"input-container mt-4\">\r\n                <label className=\"input-label\">Mobile Number</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"mobileNumber\"\r\n                  max=\"10\"\r\n                  className={\"text-input mt-3\"}\r\n                  placeholder=\"Mobile Number\"\r\n                  {...register(\"mobileNumber\")}\r\n                />\r\n\r\n                {errors.mobileNumber && (\r\n                  <span className=\"error-text\">\r\n                    {errors.mobileNumber.message}\r\n                  </span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"d-flex\">\r\n                <div className=\"input-container mt-4\">\r\n                  <label className=\"input-label\">Pincode</label>\r\n                  <input\r\n                    name=\"pincode\"\r\n                    type=\"text\"\r\n                    {...register(\"pincode\")}\r\n                    className={\"text-input w-100 mt-3\"}\r\n                    placeholder=\"Pincode\"\r\n                  />\r\n                  {errors.pincode && (\r\n                    <span className=\"error-text\">{errors.pincode.message}</span>\r\n                  )}\r\n                </div>\r\n                <div className=\"input-container ms-5 mt-4\">\r\n                  <label className=\"input-label\">Installer</label>\r\n                  <CustomSelect\r\n                    name=\"installer\"\r\n                    {...register(\"installer\")}\r\n                    placeholder=\"Installer\"\r\n                    inputStyle=\"mt-3 select-input\"\r\n                    menuItemList={[\r\n                      { label: \"Rahul, Rs. 150\", value: \"Rahul, Rs. 150\" },\r\n                    ]}\r\n                  />\r\n\r\n                  {errors.country && (\r\n                    <span className=\"error-text\">{errors.country.message}</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"input-container mt-4\">\r\n                <label className=\"input-label\">\r\n                  Flat No/House No/Building/Apartment\r\n                </label>\r\n                <input\r\n                  name=\"flatNo\"\r\n                  {...register(\"flatNo\")}\r\n                  className={\"text-input mt-3\"}\r\n                  placeholder=\"Flat No/House No/Building/Apartment\"\r\n                />\r\n\r\n                {errors.flatNo && (\r\n                  <span className=\"error-text\">{errors.flatNo.message}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"input-container mt-4\">\r\n                <label className=\"input-label\">Area/State/Street/Village</label>\r\n                <input\r\n                  name=\"area\"\r\n                  {...register(\"area\")}\r\n                  className={\"text-input mt-3\"}\r\n                  placeholder=\"Area/State/Street/Village\"\r\n                />\r\n\r\n                {errors.area && (\r\n                  <span className=\"error-text\">{errors.area.message}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"input-container mt-4\">\r\n                <label className=\"input-label\">Landmark</label>\r\n                <input\r\n                  name=\"landmark\"\r\n                  {...register(\"landmark\")}\r\n                  className={\"text-input mt-3\"}\r\n                  placeholder=\"Landmark\"\r\n                />\r\n\r\n                {errors.landmark && (\r\n                  <span className=\"error-text\">{errors.landmark.message}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"input-container mt-4\">\r\n                <label className=\"input-label\">Town/City</label>\r\n                <input\r\n                  name=\"city\"\r\n                  {...register(\"city\")}\r\n                  className={\"text-input mt-3\"}\r\n                  placeholder=\"Town/City\"\r\n                />\r\n\r\n                {errors.city && (\r\n                  <span className=\"error-text\">{errors.city.message}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"d-flex\">\r\n                <div className=\"input-container mt-4\">\r\n                  <label className=\"input-label\">State</label>\r\n                  <CustomSelect\r\n                    name=\"state\"\r\n                    {...register(\"state\")}\r\n                    placeholder=\"State\"\r\n                    inputStyle=\"mt-3 select-input\"\r\n                    menuItemList={StateList}\r\n                  />\r\n\r\n                  {errors.state && (\r\n                    <span className=\"error-text\">{errors.state.message}</span>\r\n                  )}\r\n                </div>\r\n                <div className=\"input-container ms-5 mt-4\">\r\n                  <label className=\"input-label\">Country</label>\r\n                  <CustomSelect\r\n                    name=\"country\"\r\n                    {...register(\"country\")}\r\n                    placeholder=\"Country\"\r\n                    inputStyle=\"mt-3 select-input\"\r\n                    menuItemList={[{ label: \"India\", value: \"India\" }]}\r\n                  />\r\n\r\n                  {errors.country && (\r\n                    <span className=\"error-text\">{errors.country.message}</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"input-container w-50 mt-4\">\r\n                <label className=\"input-label\">Select Address Type</label>\r\n                <div className=\"pt-3\">\r\n                  <RadioGroup\r\n                    name=\"selectAddressType\"\r\n                    {...register(\"selectAddressType\")}\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    row\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"home\"\r\n                      control={\r\n                        <Radio\r\n                          disableRipple\r\n                          color=\"default\"\r\n                          checkedIcon={<RadioChecked />}\r\n                          icon={<RadioUnchecked />}\r\n                        />\r\n                      }\r\n                      label=\"Home\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"office\"\r\n                      className=\"ps-5 ms-5\"\r\n                      control={\r\n                        <Radio\r\n                          disableRipple\r\n                          color=\"default\"\r\n                          checkedIcon={<RadioChecked />}\r\n                          icon={<RadioUnchecked />}\r\n                        />\r\n                      }\r\n                      label=\"Office\"\r\n                    />\r\n                  </RadioGroup>\r\n\r\n                  {errors.selectAddressType && (\r\n                    <span className=\"error-text\">\r\n                      {errors.selectAddressType.message}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"checkbox-container mt-4\">\r\n                <CustomCheckBox\r\n                  type=\"checkbox\"\r\n                  name=\"isDefaultAddress\"\r\n                  {...register(\"isDefaultAddress\")}\r\n                  icon={<div className=\"checkbox-outer\" />}\r\n                  checkedIcon={<CheckboxChecked />}\r\n                />\r\n                <label className=\"input-label\">\r\n                  Make this my default address\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"mt-5 mb-4\">\r\n                {ternaryCondition(\r\n                  id,\r\n                  <CustomButton\r\n                    type=\"submit\"\r\n                    onClick={handleSubmit(updateAddress)}\r\n                    className=\"add-address-button\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Save Address\r\n                  </CustomButton>,\r\n                  <CustomButton\r\n                    type=\"submit\"\r\n                    onClick={handleSubmit(createAddress)}\r\n                    className=\"add-address-button\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Add Address\r\n                  </CustomButton>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n      <CustomDialog isOpen={googleMap} handleClose={() => setGoogleMap(false)}>\r\n        <GoogleMaps />\r\n      </CustomDialog>\r\n    </>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getAddressAPICall: getAddress,\r\n      createAddressAPI: createAddress,\r\n      updateAddressAPI: updateAddress,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst AddNewAddress = connect(null, mapDispatchToProps)(AddNewAddressFC);\r\nexport default AddNewAddress;\r\n"],"names":["CustomCheckBox","React","_ref","ref","name","value","className","onChange","checked","icon","checkedIcon","color","_jsx","Checkbox","StaticRadio","props","width","height","fill","children","fillRule","d","clipRule","containerStyle","GoogleMaps","map","setMap","useState","currentLocation","setCurrentLocation","useEffect","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","error","console","message","center","LoadScript","googleMapsApiKey","GoogleMap","mapContainerStyle","zoom","onLoad","Marker","AddressSchema","yup","shape","fullName","required","min","matches","mobileNumber","max","pincode","typeError","test","val","toString","length","installer","flatNo","area","landmark","city","state","selectAddressType","isDefaultAddress","connect","dispatch","bindActionCreators","getAddressAPICall","getAddress","createAddressAPI","createAddress","updateAddressAPI","updateAddress","location","useLocation","id","useParams","locationLabel","pathname","split","slice","replace","loader","setLoader","addressData","setAddressData","googleMap","setGoogleMap","url_id","then","res","response","catch","err","log","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","defaultValues","country","_jsxs","_Fragment","ternaryCondition","placeholder","onClick","type","CustomSelect","inputStyle","menuItemList","label","StateList","RadioGroup","row","FormControlLabel","control","Radio","disableRipple","RadioChecked","RadioUnchecked","CheckboxChecked","CustomButton","data","Toast","history","push","variant","CustomDialog","isOpen","handleClose"],"sourceRoot":""}