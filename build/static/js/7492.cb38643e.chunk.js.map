{"version":3,"file":"static/js/7492.cb38643e.chunk.js","mappings":"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","sources":["action/AuthAct.js","hooks/useTimer.js","component/Auth/ForgotPassword/index.jsx"],"sourcesContent":["import { authApi } from \"../service/apiVariables\";\r\n\r\nexport const registationApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.registationApi,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const loginApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.loginApi,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          localStorage.setItem(\"authToken\", data);\r\n          resolve(data);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const verifyOTPApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.verifyOTP,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n          Toast({ type: \"success\", message: data.message });\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const resendOTPApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.resendOTP,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n          Toast({ type: \"success\", message: data.message });\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const resendOTPVerifyApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.resendOTPVerify,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n          Toast({ type: \"success\", message: data.message });\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n","import { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst getDefaultTime = (start, end, direction) => {\r\n  const suppliedProps = typeof (start && end) !== undefined;\r\n  if (suppliedProps && start >= end) {\r\n    return [start, end];\r\n  } else if (suppliedProps && start < end) {\r\n    return [start, start];\r\n  }\r\n  return [start || 60, end || 0];\r\n};\r\n\r\nconst handleTime = (time, start, end, multiplier) => {\r\n  multiplier =\r\n    end + ((start - end) % multiplier) === time\r\n      ? (start - end) % multiplier\r\n      : multiplier;\r\n  return time - multiplier;\r\n};\r\n\r\nconst toMMSS = (secs) => {\r\n  const sec_num = parseInt(secs, 10);\r\n  const minutes = Math.floor(sec_num / 60) % 60;\r\n  const seconds = sec_num % 60;\r\n\r\n  return [minutes, seconds].map((v) => v.toString().padStart(2, \"0\")).join(\":\");\r\n};\r\n\r\nconst useTimer = ({\r\n  startTime,\r\n  endTime,\r\n  multiplier = 1,\r\n  timeOut = 1000,\r\n} = {}) => {\r\n  const [start, end] = getDefaultTime(startTime, endTime);\r\n  const [time, setTime] = useState(start);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (time > end) {\r\n        setTime((prevTime) => {\r\n          const updatedTime = prevTime - 1;\r\n          return updatedTime < end ? end : updatedTime;\r\n        });\r\n      }\r\n    }, timeOut);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [time, end, timeOut]);\r\n\r\n  const formattedTime = toMMSS(time);\r\n\r\n  return [formattedTime, setTime];\r\n};\r\n\r\nuseTimer.propTypes = {\r\n  startTime: PropTypes.number,\r\n  endTime: PropTypes.number,\r\n  multiplier: PropTypes.number,\r\n  timeOut: PropTypes.number,\r\n};\r\n\r\nuseTimer.defaultProps = {\r\n  startTime: PropTypes.number,\r\n  endTime: PropTypes.number,\r\n  multiplier: 1,\r\n  timeOut: 1000,\r\n};\r\n\r\nexport { useTimer };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport { CustomInput } from \"component/common/NormalInput\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { CustomButton } from \"component/common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { resendOTPApi, verifyOTPApi } from \"action/AuthAct\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useTimer } from \"hooks/useTimer\";\r\nimport { Toast } from \"service/toast\";\r\n\r\nfunction ForgotPasswordFC({ ownProps, verifyOTPApiCall, resendOTPApi }) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  let location = useLocation();\r\n\r\n  const [changeMob, setChangeMob] = useState(\"disabled\");\r\n  const [resendTime, setResendTime] = useTimer({\r\n    multiplier: 1,\r\n    startTime: 120,\r\n  });\r\n  const handleChangeMob = () => {\r\n    setChangeMob(!changeMob);\r\n  };\r\n\r\n  const resendOTPApiCall = (data) => {\r\n    setResendTime(120);\r\n    let body = { emailId: data };\r\n    resendOTPApi(body);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location.state != \"\") {\r\n      resendOTPApiCall(location.state);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(resendOTPApiCall)}>\r\n      <div className=\"forgot-password-container\">\r\n        <CustomInput\r\n          variant=\"standard\"\r\n          className=\"input-phonenumber mb-3\"\r\n          disabled={changeMob}\r\n          name=\"mailId\"\r\n          register={register}\r\n          errors={errors}\r\n          defaultValue={location.state}\r\n          endAdornment={\r\n            <label\r\n              onClick={handleChangeMob}\r\n              className=\"label-change cursor-pointer\"\r\n            >\r\n              Change ?\r\n            </label>\r\n          }\r\n        />\r\n\r\n        <div className=\"otp-resend-container d-flex justify-content-between my-4\">\r\n          {resendTime !== \"00:00\" && <label>{resendTime}</label>}\r\n          <label\r\n            className={`label-resend pe-1 cursor-pointer ${\r\n              resendTime !== \"00:00\" ? \"resend-hidden\" : \"\"\r\n            }`}\r\n            onClick={() => resendOTPApiCall()}\r\n            disabled={resendTime !== \"00:00\"}\r\n          >\r\n            Resend?\r\n          </label>\r\n        </div>\r\n        <CustomInput\r\n          type=\"number\"\r\n          placeholder=\"Enter OTP\"\r\n          name=\"otp\"\r\n          className=\"input-otp my-3\"\r\n          register={register}\r\n          errors={errors}\r\n        />\r\n        <CustomInput\r\n          type=\"password\"\r\n          placeholder=\"Set Password\"\r\n          className=\"input-password my-3\"\r\n          name=\"password\"\r\n          register={register}\r\n          errors={errors}\r\n        />\r\n        <CustomButton\r\n          style={{ backgroundColor: \"#A26220\", color: \"#FFFFFF\" }}\r\n          className=\"mt-5 py-2\"\r\n        >\r\n          Login\r\n        </CustomButton>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    ownProps: ownProps,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      verifyOTPApiCall: verifyOTPApi,\r\n      resendOTPApi: resendOTPApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst Login = connect(mapStateToProps, mapDispatchToProps)(ForgotPasswordFC);\r\n\r\nexport default Login;\r\n"],"names":["registationApi","body","dispatch","getState","_ref","apiCall","Toast","Promise","resolve","reject","authApi","then","data","catch","_ref2","message","type","loginApi","_ref3","localStorage","setItem","_ref4","verifyOTPApi","_ref5","verifyOTP","_ref6","resendOTPApi","_ref7","resendOTP","_ref8","useTimer","startTime","endTime","multiplier","timeOut","arguments","length","undefined","start","end","getDefaultTime","direction","suppliedProps","time","setTime","useState","useEffect","interval","setInterval","prevTime","updatedTime","clearInterval","secs","sec_num","parseInt","Math","floor","map","v","toString","padStart","join","toMMSS","propTypes","PropTypes","defaultProps","connect","mapStateToProps","state","ownProps","bindActionCreators","verifyOTPApiCall","register","handleSubmit","formState","errors","useForm","location","useLocation","changeMob","setChangeMob","resendTime","setResendTime","resendOTPApiCall","emailId","_jsx","onSubmit","children","_jsxs","className","CustomInput","variant","disabled","name","defaultValue","endAdornment","onClick","handleChangeMob","concat","placeholder","CustomButton","style","backgroundColor","color"],"sourceRoot":""}