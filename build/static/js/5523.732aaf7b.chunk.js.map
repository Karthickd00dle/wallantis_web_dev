{"version":3,"file":"static/js/5523.732aaf7b.chunk.js","mappings":"gLAGO,MAAMA,EACVC,GACD,CAACC,EAAUC,EAAQC,KAA0B,IAAxB,QAAEC,EAAO,MAAEC,GAAOF,EACrC,OAAO,IAAIG,SAAQ,CAACC,EAASC,KAC3BJ,EAAQ,IACHK,EAAAA,GAAQC,WACXV,SAECW,MAAMC,IACLL,EAAQK,EAAK,IAEdC,OAAMC,IAAkB,IAAjB,QAAEC,GAASD,EACjBN,EAAOH,EAAM,CAAEW,KAAM,QAASD,YAAW,GACzC,GACJ,EAGOE,EACXA,IACA,CAAChB,EAAUC,EAAQgB,KAA0B,IAAxB,QAAEd,EAAO,MAAEC,GAAOa,EACrC,OAAO,IAAIZ,SAAQ,CAACC,EAASC,KAC3BJ,EAAQ,IACHK,EAAAA,GAAQU,WACVR,MAAMC,IACPL,EAAQK,EAAK,GACb,GACF,EAGOQ,EACVC,GACD,CAACpB,EAAUC,EAAQoB,KAA0B,IAAxB,QAAElB,EAAO,MAAEC,GAAOiB,EACrC,OAAO,IAAIhB,SAAQ,CAACC,EAASC,MAC3Be,EAAAA,EAAAA,IAASF,EAAOZ,EAAAA,GAAQW,YACxBhB,EAAQ,IACHK,EAAAA,GAAQW,aACVT,MAAMC,IACPL,EAAQK,EAAK,GACb,GACF,EAGOY,EACXA,CAACH,EAAOrB,IACR,CAACC,EAAUC,EAAQuB,KAA0B,IAAxB,QAAErB,EAAO,MAAEC,GAAOoB,EACrC,OAAO,IAAInB,SAAQ,CAACC,EAASC,MAC3Be,EAAAA,EAAAA,IAASF,EAAOZ,EAAAA,GAAQe,YACxBpB,EAAQ,IACHK,EAAAA,GAAQe,WACXxB,SACCW,MAAMC,IACPL,EAAQK,EAAK,GACb,GACF,C,kJCxCC,MAsVMc,GAAeC,EAAAA,EAAAA,IAAQ,MAVR1B,IACnB2B,EAAAA,EAAAA,IACL,CACEC,kBAAmBZ,EAAAA,GACnBa,cAAeN,EAAAA,IAEjBvB,IAIwB0B,EAtVIxB,IAMzB,IAN0B,SAC/B4B,EAAQ,eACRC,EAAc,kBACdH,EAAiB,mBACjBI,EAAkB,cAClBH,GACD3B,EACC,MAAM,SACJ+B,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,OAEGC,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,IAgGvD,OATAC,EAAAA,EAAAA,YAAU,KAlFRZ,IACGlB,MAAKG,IAAmB,IAAlB,SAAE4B,GAAU5B,EACjByB,EAAmBG,EAAS,IAE7B7B,OAAO8B,IACNC,QAAQC,IAAIF,EAAI,GA8EJ,GACf,CAACV,KAQFa,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,kBAAiBF,SAAC,mBAuEnCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBF,SAAA,EACpCD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,cAAaF,SAAC,YAC/BD,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRD,UAAU,2BACVE,GAAG,yBACHC,WAAY,CACVC,cACEP,EAAAA,EAAAA,KAAA,SAAOG,UAAU,mCAAkCF,SAAC,WAKxDO,QAAQ,iBAGZN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BF,SAAA,EAC3CD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,qBAAoBF,SAAC,2BACtCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OACEC,UAAU,kCACbF,SAAA,EAEGC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CF,SAAA,EACzDC,EAAAA,EAAAA,MAAA,SACEC,UAAU,uBACjBF,SAAA,CACM,UACST,EAAgBiB,cAAc,cAExCT,EAAAA,EAAAA,KAAA,SACEG,UAAU,wBACjBF,SACM,sBAGDD,EAAAA,EAAAA,KAAA,SACEG,UAAU,uBACjBF,SACM,uBASDD,EAAAA,EAAAA,KAAA,SACEG,UAAU,uBACjBF,SACM,oBAIHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CF,SAAA,EACzDC,EAAAA,EAAAA,MAAA,SACEC,UAAU,sBACjBF,SAAA,CACM,UACIT,EAAgBkB,eAErBV,EAAAA,EAAAA,KAAA,SACEG,UAAU,qCACjBF,SAES,UAAIT,EAAgBmB,oBAExBX,EAAAA,EAAAA,KAAA,SACEG,UAAU,sBACjBF,SAES,UAAIT,EAAgBoB,mBAQxBV,EAAAA,EAAAA,MAAA,SACEC,UAAU,sBACjBF,SAAA,CACM,UACIT,EAAgBqB,mBAIzBX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sEAAqEF,SAAA,EAClFC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBF,SAAA,EACjCD,EAAAA,EAAAA,KAAA,SACEG,UAAU,uBACjBF,SACM,qBAGDD,EAAAA,EAAAA,KAAA,SACEG,UAAU,uBACjBF,SACM,wBAIHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBF,SAAA,EACjCC,EAAAA,EAAAA,MAAA,SACEC,UAAU,sBACjBF,SAAA,CACM,UACIT,EAAgBsB,gBAErBZ,EAAAA,EAAAA,MAAA,SACEC,UAAU,sBACjBF,SAAA,CACM,UACIT,EAAgBuB,wBAIzBb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC7CD,EAAAA,EAAAA,KAAA,SACEG,UAAU,uBACfF,SACI,6BAGDC,EAAAA,EAAAA,MAAA,SACEC,UAAU,kDACfF,SAAA,CACI,UACIT,EAAgBwB,gCAkBzB,G,iKC1UV,MAAMC,EAAW5D,IAmBV,IAnBW,cAChB6D,EAAa,mBACb/B,EAAkB,kBAClBgC,EACAC,UAAU,IACRC,EAAG,UACHC,EAAS,aACTC,EAAY,cACZC,EAAa,UACbC,EAAS,OACTC,EAAM,SACNC,EAAQ,aACRC,EAAY,eACZC,EAAc,UACdC,EAAS,cACTC,EAAa,cACbC,EAAa,MACbC,IAEH5E,EACC,MAAM,SAAE+B,IAAaG,EAAAA,EAAAA,OACd2C,EAAUC,IAAezC,EAAAA,EAAAA,UAAS,CAAEiC,SAAUA,IAYrD,OAPAhC,EAAAA,EAAAA,YAAU,KACRR,EAAmB,CACjBkB,GAAIgB,EACJe,SAAU,CAAET,SAAUO,EAASP,SAAUU,MAAOZ,IAChD,GACD,CAACS,KAGFhC,EAAAA,EAAAA,MAAA,OAAeC,UAAU,qBAAoBF,SAAA,EAC3CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC7CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQF,SAAA,EACrBD,EAAAA,EAAAA,KAAA,OACEsC,IAAKd,EAAgBA,EAAc,GAAK,GACxCe,OAAO,QACPC,MAAM,QACNC,IAAI,aAENvC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCD,EAAAA,EAAAA,KAAA,SACEG,UAAU,iCACVuC,QAASA,IACPvB,EAAkB,CAChBd,GAAIgB,EACJsB,MAAOpB,EACPI,SAAUO,EAASP,SACnBU,MAAOZ,EACPK,UAAWA,EACXC,cAAeA,EACfC,cAAeA,IAElB/B,SAEAsB,KAEHvB,EAAAA,EAAAA,KAAA,SAAOG,UAAU,kBAAiBF,SAAG,WAAUwB,OAC/CzB,EAAAA,EAAAA,KAAA,SAAOG,UAAU,mBAAkBF,UAChC2C,EAAAA,EAAAA,IAAiBlB,EAAQ,WAAY,mBAExC1B,EAAAA,EAAAA,KAAA,SAAOG,UAAU,0BAAyBF,SACtC,gBAAc4C,EAAAA,EAAAA,IACdjB,EACA,mBACKC,GAAkC,YAE3C7B,EAAAA,EAAAA,KAAA,SAAOG,UAAU,0BAAyBF,UACvC6C,EAAAA,EAAAA,IACChB,EACC,oBAAkBe,EAAAA,EAAAA,IACjBd,EACA,iBACGC,cAKbhC,EAAAA,EAAAA,KAAA,SAAOG,UAAU,kBAAiBF,SAAG,SAAGgC,UAE1C/B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8DAA6DF,SAAA,EAC1EC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uDAAsDF,SAAA,EACnED,EAAAA,EAAAA,KAAA,OACE0C,SAASI,EAAAA,EAAAA,IAAgBZ,EAASP,SAAW,GAAG,IAC9CQ,EAAY,CACVR,SAAUO,EAASP,SAAW,MAGlCxB,UAAU,kCAAiCF,SAC5C,OAGDD,EAAAA,EAAAA,KAAC+C,EAAAA,GAAW,CACVC,KAAK,WACL9E,KAAK,SACL+E,MAAOf,EAASP,SAChBuB,SA7EiBlF,IAAkC,IAA/BmF,QAAQ,KAAEH,EAAI,MAAEC,IAASjF,EACrDmE,EAAY,IAAKD,EAAU,CAACc,GAAOI,OAAOH,IAAS,EA6E3CI,IAAI,IACJlD,UAAU,qCACVf,SAAUA,KAEZY,EAAAA,EAAAA,KAAA,OACE0C,QAASA,IACPP,EAAY,CACVR,SAAUO,EAASP,SAAW,IAGlCxB,UAAU,kCAAiCF,SAC5C,UAIHD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,sBAAqBF,SAAC,oBACvCD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,cAAcuC,QAASA,IAAMxB,EAAcG,GAAKpB,SAAC,gBAlF5DoB,EAsFJ,EA0DGiC,GAAYzE,EAAAA,EAAAA,IAAQ,MAXL1B,IACnB2B,EAAAA,EAAAA,IACL,CACEC,kBAAmBZ,EAAAA,GACnBoF,cAAejF,EAAAA,GACfU,cAAeN,EAAAA,IAEjBvB,IAIqB0B,EAtDHT,IAKf,IAADoF,EAAAC,EAAAC,EAAA,IALiB,SACrBzE,EAAQ,cACRiC,EAAa,mBACb/B,EAAkB,kBAClBgC,GACD/C,EACC,OACE8B,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBF,UAClC2C,EAAAA,EAAAA,KACS,OAAR3D,QAAQ,IAARA,GAAkB,QAAVuE,EAARvE,EAAU0E,gBAAQ,IAAAH,OAAV,EAARA,EAAoBI,QAAS,GAC7B5D,EAAAA,EAAAA,KAAA,OAAKG,UAAU,6BAA4BF,SAChC,OAARhB,QAAQ,IAARA,GAAkB,QAAVwE,EAARxE,EAAU0E,gBAAQ,IAAAF,OAAV,EAARA,EAAoBI,KAAKzC,IACxBpB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sBAAqBF,UAClCD,EAAAA,EAAAA,KAACiB,EAAQ,CACPE,kBAAmBA,EACnBC,SAAUA,EACVF,cAAeA,EACf/B,mBAAoBA,KALkBiC,EAASC,UAUvDrB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBF,UACnCD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,wBAIZ6C,EAAAA,EAAAA,KACS,OAAR7D,QAAQ,IAARA,GAAkB,QAAVyE,EAARzE,EAAU0E,gBAAQ,IAAAD,OAAV,EAARA,EAAoBE,QAAS,GAC7B5D,EAAAA,EAAAA,KAAC8D,EAAAA,GAAY,CACX3D,UAAU,OACV4D,MAAO,CAAEvB,MAAO,QAASD,OAAQ,OAAQyB,gBAAiB,WAC1DxD,QAAQ,YACRkC,QAASA,IAAMuB,EAAAA,EAAQC,KAAK,sBAAsBjE,SACnD,2BAIC,ICjEV,GADoBpB,EAAAA,EAAAA,IAAQ,MAXA1B,IACnB2B,EAAAA,EAAAA,IACL,CACEC,kBAAmBZ,EAAAA,GACnBoF,cAAejF,EAAAA,GACfU,cAAeN,EAAAA,IAEjBvB,IAIgB0B,EApGIxB,IAIjB,IAADmG,EAAA,IAJmB,kBACvBzE,EAAiB,cACjBwE,EAAa,cACbvE,GACD3B,EACC,MAAO4B,EAAUkF,IAAezE,EAAAA,EAAAA,UAAS,KAClCR,EAAgBiC,IAAqBzB,EAAAA,EAAAA,YAEtCvB,EAAiBA,KACrBY,IACGlB,MAAMuG,IACLD,EAAYC,EAAIxE,SAAS,IAE1B7B,OAAO8B,IACNC,QAAQC,IAAIF,EAAI,GAChB,EAuCNC,QAAQC,IAAId,EAAU,aACtB,MAAME,EAAqBnB,IAAuB,IAAtB,GAAEqC,EAAE,SAAE+B,GAAUpE,EArBtBqG,EAAChE,EAAI+B,KACzB,IAAI7D,EAAQ,CACV+F,OAAQjE,GAENnD,EAAO,CACTyE,SAAUS,EAAST,SACnBU,MAAOD,EAASC,OAElBrD,EAAcT,EAAOrB,GAClBW,MAAK,KACJM,GAAgB,IAEjBN,MAAMuG,IACLD,EAAYC,EAAIxE,SAAS,IAE1B7B,OAAO8B,IACNC,QAAQC,IAAIF,EAAI,GAChB,EAKJwE,CAAchE,EAAI+B,EAAS,EAO7B,OAJAzC,EAAAA,EAAAA,YAAU,KACRxB,GAAgB,GACf,KAGD+B,EAAAA,EAAAA,MAAAqE,EAAAA,SAAA,CAAAtE,SAAA,EACED,EAAAA,EAAAA,KAACwE,EAAAA,GAAc,CACbC,WAAW,cACXC,UAAU,aACVC,gBAAgB,sBAElBzE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDF,SAAA,EACrED,EAAAA,EAAAA,KAACsD,EAAS,CACRrE,SAAUA,EACViC,cAvDeb,IAIrBkD,EAHY,CACVe,OAAQjE,IAGPxC,MAAK,KACJM,GAAgB,IAEjBN,MAAMuG,IACLD,EAAYC,EAAIxE,SAAS,IAE1B7B,OAAO8B,IACNC,QAAQC,IAAIF,EAAI,GAChB,EA2CEV,mBAAoBA,EACpBgC,kBAAmBA,KAEpB2B,EAAAA,EAAAA,KACS,OAAR7D,QAAQ,IAARA,GAAkB,QAAVuE,EAARvE,EAAU0E,gBAAQ,IAAAH,OAAV,EAARA,EAAoBI,QAAS,GAC7B5D,EAAAA,EAAAA,KAACpB,EAAAA,EAAY,CACXM,eAAgBA,EAChBC,mBAAoBA,UAIzB,G,iFC3FP,MAAMyF,EAAoB,CACxB,CACEvE,GAAI,EACJwE,IAAK,MACLC,KAAM,GACN7B,MAAO,cAET,CACE5C,GAAI,EACJwE,IAAK,MACLC,KAAM,GACN7B,MAAO,cAGT,CACE5C,GAAI,EACJwE,IAAK,MACLC,KAAM,GACN7B,MAAO,cAET,CACE5C,GAAI,EACJwE,IAAK,MACLC,KAAM,GACN7B,MAAO,eAIL8B,EAAoB,CACxB,CACE1E,GAAI,EACJ2E,MAAO,sBACP/B,MAAO,uBAET,CACE5C,GAAI,EACJ2E,MAAO,sBACP/B,MAAO,uBAGT,CACE5C,GAAI,EACJ2E,MAAO,sBACP/B,MAAO,uBAET,CACE5C,GAAI,EACJ2E,MAAO,sBACP/B,MAAO,uBAET,CACE5C,GAAI,EACJ2E,MAAO,sBACP/B,MAAO,uBAET,CACE5C,GAAI,EACJ2E,MAAO,sBACP/B,MAAO,wBAgEX,EA5D0B5F,IAMnB,IANoB,cACzB0E,EAAa,iBACbkD,EAAgB,cAChBjD,EAAa,iBACbkD,EAAgB,cAChBC,GACD9H,EACC,OACE6C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BF,SAAA,CACxCH,QAAQC,IAAIgC,EAAeC,EAAe,kBAC3ChC,EAAAA,EAAAA,KAAA,SAAOG,UAAU,cAAaF,SAAC,2CAG/BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,oBAAmBF,SAAC,iBACrCD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+DAA8DF,SAC1E2E,EAAkBf,KAAI7F,IAAA,IAAC,GAAEqC,EAAE,IAAEwE,EAAG,KAAEC,EAAI,MAAE7B,GAAOjF,EAAA,OAC9CkC,EAAAA,EAAAA,MAAA,OACEC,UAAY,kCAAgC2C,EAAAA,EAAAA,IAC1Cf,IAAkBkB,EAClB,YAGFP,QAASA,IAAMuC,EAAiBhC,GAAOhD,SAAA,EAEvCD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,2BAA0BF,SAAE4E,KAC7C7E,EAAAA,EAAAA,KAAA,SAAOG,UAAU,4BAA2BF,SAAE6E,MAJzCzE,EAKD,UAIZH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBF,SAAA,EAClCD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,oBAAmBF,SAAC,sBACrCD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+DAA8DF,SAC1E8E,EAAkBlB,KAAIzF,IAAA,IAAC,GAAEiC,EAAE,MAAE2E,EAAK,MAAE/B,GAAO7E,EAAA,OAC1C4B,EAAAA,EAAAA,KAAA,OACEG,UAAY,kCAAgC2C,EAAAA,EAAAA,IAC1Cd,IAAkBiB,EAClB,YAGFP,QAASA,IAAMwC,EAAiBjC,GAAOhD,UAEvCD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,4BAA2BF,SAAE+E,KAHzC3E,EAID,UAIZL,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gCAA+BF,UAC5CD,EAAAA,EAAAA,KAAC8D,EAAAA,GAAY,CACX3D,UAAU,0CACVuC,QAASyC,EAAclF,SACxB,4BAIC,C","sources":["action/CartAct.js","component/Home/CartSummary/OrderSummary/index.jsx","component/Home/CartSummary/CartItems/index.jsx","component/Home/CartSummary/index.jsx","component/common/InstallerDataTime/index.jsx"],"sourcesContent":["import { addQuery } from \"service/helperFunctions\";\nimport { cartApi } from \"../service/apiVariables\";\n\nexport const createCartApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...cartApi.createCart,\n        body,\n      })\n        .then((data) => {\n          resolve(data);\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n\nexport const getCartListing =\n  () =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...cartApi.cartList,\n      }).then((data) => {\n        resolve(data);\n      });\n    });\n  };\n\nexport const deleteCart =\n  (query) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      addQuery(query, cartApi.deleteCart);\n      apiCall({\n        ...cartApi.deleteCart,\n      }).then((data) => {\n        resolve(data);\n      });\n    });\n  };\n\nexport const updateCart =\n  (query, body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      addQuery(query, cartApi.updateCart);\n      apiCall({\n        ...cartApi.updateCart,\n        body,\n      }).then((data) => {\n        resolve(data);\n      });\n    });\n  };\n","import React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { CustomDialog, NormalInput } from \"component/common\";\nimport { TextField } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { bindActionCreators } from \"redux\";\nimport { getCartListing, updateCart } from \"action/CartAct\";\nimport {\n  conditionalLoad,\n  customMomentFormat,\n  ternaryCondition,\n} from \"service/helperFunctions\";\n\nimport InstallerDateTime from \"component/common/InstallerDataTime\";\n\nexport const OrderSummaryMain = ({\n  cartData,\n  activeCartItem,\n  getCartListingAPI,\n  updateCartCallBack,\n  updateCartAPI,\n}) => {\n  const {\n    register,\n    formState: { errors },\n  } = useForm();\n\n  const [cartSummaryInfo, setCartSummaryInfo] = useState([]);\n\n  // const [openinstallerDateTime, setOpeninstallerDateTime] = useState(false);\n\n  const getCartListing = () => {\n    getCartListingAPI()\n      .then(({ response }) => {\n        setCartSummaryInfo(response);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  // const [installerDate, setInstallerDate] = useState(\n  //   ternaryCondition(\n  //     activeCartItem,\n  //     activeCartItem?.installerDate,\n  //     cartSummaryInfo[0]?.installerDate\n  //   )\n  // );\n\n  // const [installerTime, setInstallerTime] = useState(\n  //   ternaryCondition(\n  //     activeCartItem,\n  //     activeCartItem?.installerTime,\n  //     cartSummaryInfo[0]?.installerTime\n  //   )\n  // );\n  // const updateCart = () => {\n  //   let query = {\n  //     url_id: ternaryCondition(\n  //       activeCartItem,\n  //       activeCartItem?.id,\n  //       cartSummaryInfo[0]?._id\n  //     ),\n  //   };\n  //   let body = {\n  //     quantity: ternaryCondition(\n  //       activeCartItem,\n  //       activeCartItem?.quantity,\n  //       cartSummaryInfo[0]?.quantity\n  //     ),\n  //     color: ternaryCondition(\n  //       activeCartItem,\n  //       activeCartItem?.color,\n  //       cartSummaryInfo[0]?.color\n  //     ),\n  //     installer: ternaryCondition(\n  //       activeCartItem,\n  //       activeCartItem?.installer,\n  //       cartSummaryInfo[0]?.installer\n  //     ),\n  //   };\n\n  //   const getBody = (installer) => {\n  //     if (installer) {\n  //       return {\n  //         ...body,\n  //         installerDate: installerDate,\n  //         installerTime: installerTime,\n  //       };\n  //     } else {\n  //       return { ...body };\n  //     }\n  //   };\n\n  //   updateCartAPI(\n  //     query,\n  //     getBody(\n  //       ternaryCondition(\n  //         activeCartItem,\n  //         activeCartItem?.installer,\n  //         cartSummaryInfo[0]?.installer\n  //       )\n  //     )\n  //   )\n  //     .then(() => {\n  //       getCartListing();\n  //     })\n  //     .then((res) => {\n  //       setCartSummaryInfo(res.response.product);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  useEffect(() => {\n    getCartListing();\n  }, [updateCartCallBack]);\n\n  // const handleConfirmDateTime = () => {\n  //   updateCart();\n  //   setOpeninstallerDateTime(false);\n  // };\n\n  return (\n    <div>\n      <div className=\"order-summary\">\n        <label className=\"text-title pb-3\">Order Summary</label>\n        {/* <div\n          className=\"d-flex align-items-center\n      \"\n        >\n          <img\n            height=\"130px\"\n            width=\"130px\"\n            src={CustomRecipeWallpaper}\n            alt=\"product icon\"\n          />\n          <div className=\"ps-3\">\n            <p className=\"item-label\">\n              {ternaryCondition(\n                activeCartItem,\n                activeCartItem?.title,\n                cartSummaryInfo[0]?.productId?.title\n              )}\n            </p>\n            <div className=\"d-flex justify-content-between order-count-container\">\n              <div className=\"me-1 order-count cursor-pointer\">-</div>\n              <NormalInput\n                max=\"2\"\n                name=\"add\"\n                type=\"number\"\n                className=\"mx-1 order-count-input\"\n                value={ternaryCondition(\n                  activeCartItem,\n                  activeCartItem?.quantity,\n                  cartSummaryInfo[0]?.quantity\n                )}\n                register={register}\n                errors={errors}\n              />\n              <div className=\"order-count ms-1 cursor-pointer\">+</div>\n            </div>\n          </div>\n        </div> */}\n\n        {/* {conditionalLoad(\n          ternaryCondition(\n            activeCartItem,\n            activeCartItem?.installer,\n            cartSummaryInfo[0]?.installer\n          ),\n          <div className=\"order-installation-date\">\n            <label className=\"order-installation-text\">\n              Installation on{\" \"}\n              {customMomentFormat(\n                ternaryCondition(\n                  activeCartItem,\n                  activeCartItem?.installerDate,\n                  cartSummaryInfo[0]?.installerDate\n                ),\n                \"ddd DD, MMM\"\n              )}\n              -{\" \"}\n              {ternaryCondition(\n                activeCartItem,\n                activeCartItem?.installerTime,\n                cartSummaryInfo[0]?.installerTime\n              )}\n            </label>\n            <p\n              className=\"me-3 cursor-pointer edit-installation\"\n              onClick={() => setOpeninstallerDateTime(true)}\n            >\n              Edit\n            </p>\n          </div>\n        )} */}\n        <div className=\"coupon-container py-4\">\n          <label className=\"coupon-text\">Coupon</label>\n          <TextField\n            className=\"coupon-code-textbox mt-2\"\n            id=\"filled-start-adornment\"\n            InputProps={{\n              endAdornment: (\n                <label className=\"apply-coupon-text cursor-pointer\">\n                  APPLY\n                </label>\n              ),\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n        <div className=\"price-breakup-container py-3\">\n          <label className=\"price-breakup-text\">Price Breakup Details</label>\n          <div>\n            <div\n              className=\"d-flex justify-content-between\n          \"\n            >\n              <div className=\"d-flex flex-column justify-content-between\">\n                <label\n                  className=\"price-content-title\n          \"\n                >\n                  Price ({cartSummaryInfo.totalQuantity} items)\n                </label>\n                <label\n                  className=\" price-content-title\n          \"\n                >\n                  Delivery Charges\n                </label>\n                <label\n                  className=\"price-content-title\n          \"\n                >\n                  Packaging Charges\n                </label>\n                {/* <label\n                  className=\"price-content-title\n          \"\n                >\n                  Installation Charges\n                </label> */}\n                <label\n                  className=\"price-content-title\n          \"\n                >\n                  GST Charges\n                </label>\n              </div>\n              <div className=\"d-flex flex-column justify-content-between\">\n                <label\n                  className=\"price-content-item\n          \"\n                >\n                  ₹ {cartSummaryInfo.totalPrice}\n                </label>\n                <label\n                  className=\"text-green-15 price-content-title\n          \"\n                >\n                  {`₹ ${cartSummaryInfo.deliveryCharge}`}\n                </label>\n                <label\n                  className=\"price-content-item\n          \"\n                >\n                  {`₹ ${cartSummaryInfo.packingCharge}`}\n                </label>\n                {/* <label\n                  className=\"price-content-item\n          \"\n                >\n                  ₹ 499\n                </label> */}\n                <label\n                  className=\"price-content-item\n          \"\n                >\n                  ₹ {cartSummaryInfo.gstPrice}\n                </label>\n              </div>\n            </div>\n            <div className=\"sub-total-coupon-container py-1 my-1 d-flex justify-content-between\">\n              <div className=\"d-flex flex-column\">\n                <label\n                  className=\"price-content-title\n          \"\n                >\n                  Sub Total Price\n                </label>\n                <label\n                  className=\"price-content-title\n          \"\n                >\n                  Coupon Discount\n                </label>\n              </div>\n              <div className=\"d-flex flex-column\">\n                <label\n                  className=\"price-content-item\n          \"\n                >\n                  ₹ {cartSummaryInfo.totalAmount}\n                </label>\n                <label\n                  className=\"price-content-item\n          \"\n                >\n                  ₹ {cartSummaryInfo.discountPrice}\n                </label>\n              </div>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <label\n                className=\"price-content-title\n          \"\n              >\n                Total Amount to be paid\n              </label>\n              <label\n                className=\"text-light_bg fw-700 fs-24 price-content-item \n          \"\n              >\n                ₹ {cartSummaryInfo.totalPaidAmount}\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <CustomDialog\n        isOpen={openinstallerDateTime}\n        handleClose={() => setOpeninstallerDateTime(false)}\n      >\n        <InstallerDateTime\n          installerDate={installerDate}\n          setInstallerDate={setInstallerDate}\n          installerTime={installerTime}\n          setInstallerTime={setInstallerTime}\n          handleConfirm={handleConfirmDateTime}\n        />\n      </CustomDialog> */}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      getCartListingAPI: getCartListing,\n      updateCartAPI: updateCart,\n    },\n    dispatch\n  );\n};\n\nexport const OrderSummary = connect(null, mapDispatchToProps)(OrderSummaryMain);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { CustomButton, NormalInput } from \"component/common\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  conditionalLoad,\n  ternaryCondition,\n  customMomentFormat,\n} from \"service/helperFunctions\";\nimport { history } from \"service/helpers\";\nimport { bindActionCreators } from \"redux\";\nimport { deleteCart, getCartListing, updateCart } from \"action/CartAct\";\n\nconst ItemsRow = ({\n  deleteCartApi,\n  updateCartCallBack,\n  setActiveCartItem,\n  itemData: {\n    _id,\n    productId,\n    productTitle,\n    productImages,\n    colorName,\n    status,\n    quantity,\n    daliveryDate,\n    delivery_price,\n    installer,\n    installerDate,\n    installerTime,\n    price,\n  },\n}) => {\n  const { register } = useForm();\n  const [formData, setFormData] = useState({ quantity: quantity });\n  const handleProductCount = ({ target: { name, value } }) => {\n    setFormData({ ...formData, [name]: Number(value) });\n  };\n\n  useEffect(() => {\n    updateCartCallBack({\n      id: _id,\n      cartBody: { quantity: formData.quantity, color: colorName },\n    });\n  }, [formData]);\n\n  return (\n    <div key={_id} className=\"item-row-container\">\n      <div className=\"d-flex justify-content-between\">\n        <div className=\"d-flex\">\n          <img\n            src={productImages ? productImages[0] : \"\"}\n            height=\"200px\"\n            width=\"200px\"\n            alt=\"product\"\n          />\n          <div className=\"d-flex ps-5 flex-column\">\n            <label\n              className=\"pb-2 item-title cursor-pointer\"\n              onClick={() =>\n                setActiveCartItem({\n                  id: _id,\n                  title: productTitle,\n                  quantity: formData.quantity,\n                  color: colorName,\n                  installer: installer,\n                  installerDate: installerDate,\n                  installerTime: installerTime,\n                })\n              }\n            >\n              {productTitle}\n            </label>\n            <label className=\"py-2 item-color\">{`Color - ${colorName}`}</label>\n            <label className=\"py-2 item-status\">\n              {ternaryCondition(status, \"In Stock\", \"Out of Stock\")}\n            </label>\n            <label className=\"py-2 item-delivery-info\">\n              {`Delivery by ${customMomentFormat(\n                daliveryDate,\n                \"ddd MMM YY\"\n              )} | ${delivery_price ? delivery_price : \"Free\"}`}\n            </label>\n            <label className=\"pt-2 item-delivery-info\">\n              {conditionalLoad(\n                installer,\n                `Installation on ${customMomentFormat(\n                  installerDate,\n                  \"ddd MMM YY\"\n                )} ${installerTime}`\n              )}\n            </label>\n          </div>\n        </div>\n        <label className=\"pt-3 item-price\">{`₹${price}`}</label>\n      </div>\n      <div className=\"d-flex justify-content-between align-items-center w-75 py-4\">\n        <div className=\"d-flex justify-content-between order-count-container\">\n          <div\n            onClick={conditionalLoad(formData.quantity > 0, () =>\n              setFormData({\n                quantity: formData.quantity - 1,\n              })\n            )}\n            className=\"me-1 order-count cursor-pointer\"\n          >\n            -\n          </div>\n          <NormalInput\n            name=\"quantity\"\n            type=\"number\"\n            value={formData.quantity}\n            onChange={handleProductCount}\n            max=\"2\"\n            className=\"mx-1 text-center order-count-input\"\n            register={register}\n          />\n          <div\n            onClick={() =>\n              setFormData({\n                quantity: formData.quantity + 1,\n              })\n            }\n            className=\"order-count ms-1 cursor-pointer\"\n          >\n            +\n          </div>\n        </div>\n        <label className=\"save-for-later-text\">SAVE FOR LATER</label>\n        <label className=\"remove-text\" onClick={() => deleteCartApi(_id)}>\n          REMOVE\n        </label>\n      </div>\n    </div>\n  );\n};\n\nconst CartItemsMain = ({\n  cartData,\n  deleteCartApi,\n  updateCartCallBack,\n  setActiveCartItem,\n}) => {\n  return (\n    <div>\n      <div className=\"cart-items-container\">\n        {ternaryCondition(\n          cartData?.products?.length > 0,\n          <div className=\"cart-items-inner-container\">\n            {cartData?.products?.map((itemData) => (\n              <div className=\"item-container-main\" key={itemData._id}>\n                <ItemsRow\n                  setActiveCartItem={setActiveCartItem}\n                  itemData={itemData}\n                  deleteCartApi={deleteCartApi}\n                  updateCartCallBack={updateCartCallBack}\n                />\n              </div>\n            ))}\n          </div>,\n          <div className=\"cart-empty-container\">\n            <label>Cart is Empty</label>\n          </div>\n        )}\n      </div>\n      {conditionalLoad(\n        cartData?.products?.length > 0,\n        <CustomButton\n          className=\"mt-5\"\n          style={{ width: \"245px\", height: \"50px\", backgroundColor: \"#A26220\" }}\n          variant=\"contained\"\n          onClick={() => history.push(\"/home/payment-page\")}\n        >\n          Proceed to Checkout\n        </CustomButton>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      getCartListingAPI: getCartListing,\n      deleteCartAPI: deleteCart,\n      updateCartAPI: updateCart,\n    },\n    dispatch\n  );\n};\n\nexport const CartItems = connect(null, mapDispatchToProps)(CartItemsMain);\n","import { OrderSummary } from \"./OrderSummary\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CartItems } from \"./CartItems\";\nimport \"./style.scss\";\n\nimport { bindActionCreators } from \"redux\";\nimport { deleteCart, getCartListing, updateCart } from \"action/CartAct\";\nimport { NormalNavigate } from \"component/common\";\nimport { conditionalLoad } from \"service/helperFunctions\";\n\nconst CartSummaryMain = ({\n  getCartListingAPI,\n  deleteCartAPI,\n  updateCartAPI,\n}) => {\n  const [cartData, setCartData] = useState([]);\n  const [activeCartItem, setActiveCartItem] = useState();\n\n  const getCartListing = () => {\n    getCartListingAPI()\n      .then((res) => {\n        setCartData(res.response);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const deleteCartApi = (id) => {\n    let query = {\n      url_id: id,\n    };\n    deleteCartAPI(query)\n      .then(() => {\n        getCartListing();\n      })\n      .then((res) => {\n        setCartData(res.response);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const updateCartApi = (id, cartBody) => {\n    let query = {\n      url_id: id,\n    };\n    let body = {\n      quantity: cartBody.quantity,\n      color: cartBody.color,\n    };\n    updateCartAPI(query, body)\n      .then(() => {\n        getCartListing();\n      })\n      .then((res) => {\n        setCartData(res.response);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  console.log(cartData, \"cart data\");\n  const updateCartCallBack = ({ id, cartBody }) => {\n    updateCartApi(id, cartBody);\n  };\n\n  useEffect(() => {\n    getCartListing();\n  }, []);\n\n  return (\n    <>\n      <NormalNavigate\n        arrowStyle=\"arrow-style\"\n        linkStyle=\"link-style\"\n        navigationStyle=\"navigation-style\"\n      />\n      <div className=\"order-summary-container d-flex justify-content-between\">\n        <CartItems\n          cartData={cartData}\n          deleteCartApi={deleteCartApi}\n          updateCartCallBack={updateCartCallBack}\n          setActiveCartItem={setActiveCartItem}\n        />\n        {conditionalLoad(\n          cartData?.products?.length > 0,\n          <OrderSummary\n            activeCartItem={activeCartItem}\n            updateCartCallBack={updateCartCallBack}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      getCartListingAPI: getCartListing,\n      deleteCartAPI: deleteCart,\n      updateCartAPI: updateCart,\n    },\n    dispatch\n  );\n};\n\nconst CartSummary = connect(null, mapDispatchToProps)(CartSummaryMain);\nexport default CartSummary;\n","import React, { useState } from \"react\";\nimport \"./style.scss\";\nimport { conditionalLoad } from \"service/helperFunctions\";\nimport { CustomButton } from \"..\";\n\nconst installerDateData = [\n  {\n    id: 1,\n    day: \"Fri\",\n    date: 25,\n    value: \"2023-04-25\",\n  },\n  {\n    id: 2,\n    day: \"Sat\",\n    date: 26,\n    value: \"2023-04-26\",\n  },\n\n  {\n    id: 3,\n    day: \"Sun\",\n    date: 27,\n    value: \"2023-04-27\",\n  },\n  {\n    id: 4,\n    day: \"Mon\",\n    date: 28,\n    value: \"2023-04-28\",\n  },\n];\n\nconst installerTimeData = [\n  {\n    id: 1,\n    label: \"09:00 AM - 11:00 AM\",\n    value: \"09:00 AM - 11:00 AM\",\n  },\n  {\n    id: 2,\n    label: \"11:00 AM - 01:00 PM\",\n    value: \"11:00 AM - 01:00 PM\",\n  },\n\n  {\n    id: 3,\n    label: \"01:00 PM - 03:00 PM\",\n    value: \"01:00 PM - 03:00 PM\",\n  },\n  {\n    id: 4,\n    label: \"03:00 PM - 05:00 PM\",\n    value: \"03:00 PM - 05:00 PM\",\n  },\n  {\n    id: 5,\n    label: \"05:00 PM - 07:00 PM\",\n    value: \"05:00 PM - 07:00 PM\",\n  },\n  {\n    id: 6,\n    label: \"07:00 PM - 09:00 PM\",\n    value: \"07:00 PM - 09:00 PM\",\n  },\n];\n\nconst InstallerDateTime = ({\n  installerDate,\n  setInstallerDate,\n  installerTime,\n  setInstallerTime,\n  handleConfirm,\n}) => {\n  return (\n    <div className=\"select-date-time-container\">\n      {console.log(installerDate, installerTime, \"date and time\")}\n      <label className=\"title-label\">\n        When should the professional arrive ?\n      </label>\n      <div className=\"date-container\">\n        <label className=\"select-date-label\">Select Date</label>\n        <div className=\"date-selection-container d-flex justify-content-between mt-3\">\n          {installerDateData.map(({ id, day, date, value }) => (\n            <div\n              className={`cursor-pointer date-selection ${conditionalLoad(\n                installerDate === value,\n                \"active\"\n              )}`}\n              key={id}\n              onClick={() => setInstallerDate(value)}\n            >\n              <label className=\"day-label cursor-pointer\">{day}</label>\n              <label className=\"date-label cursor-pointer\">{date}</label>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"date-container mt-4\">\n        <label className=\"select-date-label\">Select time slot</label>\n        <div className=\"time-selection-container d-flex justify-content-between mt-3\">\n          {installerTimeData.map(({ id, label, value }) => (\n            <div\n              className={`cursor-pointer time-selection ${conditionalLoad(\n                installerTime === value,\n                \"active\"\n              )}`}\n              key={id}\n              onClick={() => setInstallerTime(value)}\n            >\n              <label className=\"time-label cursor-pointer\">{label}</label>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        <CustomButton\n          className=\"confirm-date-time-button mt-5 py-3 px-5\"\n          onClick={handleConfirm}\n        >\n          Confirm Date & Time\n        </CustomButton>\n      </div>\n    </div>\n  );\n};\n\nexport default InstallerDateTime"],"names":["createCartApi","body","dispatch","getState","_ref","apiCall","Toast","Promise","resolve","reject","cartApi","createCart","then","data","catch","_ref2","message","type","getCartListing","_ref3","cartList","deleteCart","query","_ref4","addQuery","updateCart","_ref5","OrderSummary","connect","bindActionCreators","getCartListingAPI","updateCartAPI","cartData","activeCartItem","updateCartCallBack","register","formState","errors","useForm","cartSummaryInfo","setCartSummaryInfo","useState","useEffect","response","err","console","log","_jsx","children","_jsxs","className","TextField","id","InputProps","endAdornment","variant","totalQuantity","totalPrice","deliveryCharge","packingCharge","gstPrice","totalAmount","discountPrice","totalPaidAmount","ItemsRow","deleteCartApi","setActiveCartItem","itemData","_id","productId","productTitle","productImages","colorName","status","quantity","daliveryDate","delivery_price","installer","installerDate","installerTime","price","formData","setFormData","cartBody","color","src","height","width","alt","onClick","title","ternaryCondition","customMomentFormat","conditionalLoad","NormalInput","name","value","onChange","target","Number","max","CartItems","deleteCartAPI","_cartData$products","_cartData$products2","_cartData$products3","products","length","map","CustomButton","style","backgroundColor","history","push","setCartData","res","updateCartApi","url_id","_Fragment","NormalNavigate","arrowStyle","linkStyle","navigationStyle","installerDateData","day","date","installerTimeData","label","setInstallerDate","setInstallerTime","handleConfirm"],"sourceRoot":""}