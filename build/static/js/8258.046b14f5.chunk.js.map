{"version":3,"file":"static/js/8258.046b14f5.chunk.js","mappings":"wNAEaA,EACX,SAACC,GAAI,OACL,SAACC,EAAUC,EAAS,GAAyB,IAAtBC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAC9B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BJ,GAAQ,kBACHK,EAAAA,GAAAA,gBAAsB,IACzBR,KAAAA,KAECS,MAAK,SAACC,GACLJ,EAAQI,EACV,IACCC,OAAM,YAAkB,IAAfC,EAAO,EAAPA,QACRL,EAAOH,EAAM,CAAES,KAAM,QAASD,QAAAA,IAChC,GACJ,GACF,CAAE,EAESE,EACX,SAACd,GAAI,OACL,SAACC,EAAUC,EAAS,GAAyB,IAAtBC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAC9B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BJ,GAAQ,kBACHK,EAAAA,GAAAA,UAAgB,IACnBR,KAAAA,KAECS,MAAK,SAACC,GACLK,aAAaC,QAAQ,YAAaN,GAClCJ,EAAQI,EACV,IACCC,OAAM,YAAkB,IAAfC,EAAO,EAAPA,QACRL,EAAOH,EAAM,CAAES,KAAM,QAASD,QAAAA,IAChC,GACJ,GACF,CAAE,EAESK,EACX,SAACjB,GAAI,OACL,SAACC,EAAUC,EAAS,GAAyB,IAAtBC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAC9B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BJ,GAAQ,kBACHK,EAAAA,GAAAA,WAAiB,IACpBR,KAAAA,KAECS,MAAK,SAACC,GACLJ,EAAQI,GACRN,EAAM,CAAES,KAAM,QAASD,QAASF,EAAKE,SACvC,IACCD,OAAM,YAAkB,IAAfC,EAAO,EAAPA,QACRL,EAAOH,EAAM,CAAES,KAAM,QAASD,QAAAA,IAChC,GACJ,GACF,CAAE,C,2MCsBJ,IAoBA,GALqBM,EAAAA,EAAAA,KAfG,SAACC,EAAOC,GAC9B,MAAO,CACLA,SAAUA,EAEd,IAE2B,SAACnB,GAC1B,OAAOoB,EAAAA,EAAAA,IACL,CACEC,iBAAkBL,EAAAA,IAEpBhB,EAEJ,GAEqBiB,EA/ErB,SAAmC,GAAqC,IAAnCI,EAAgB,EAAhBA,iBAAkBC,EAAY,EAAZA,aACrD,GAIIC,EAAAA,EAAAA,MAHFC,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACaC,EAAM,EAAnBC,UAAaD,OAaf,OACE,iBAAME,SAAUH,GAXA,SAAChB,GACjB,IAAIoB,EAAU,CACZC,QAASR,EACTS,IAAKtB,EAAKsB,IACVC,SAAUvB,EAAKuB,UAEjBX,EAAiBQ,GAASrB,MAAK,WAC7ByB,EAAAA,EAAAA,KAAa,cACf,GACF,IAE0C,UACtC,iBAAKC,UAAU,0BAAyB,WACtC,iBAAKA,UAAU,2DAA0D,WACvE,kBAAOA,UAAU,iBAAgB,SAAC,yBAClC,kBAAOA,UAAU,oBAAmB,SAAC,iBAEvC,SAAC,IAAW,CACVtB,KAAK,SACLuB,YAAY,YACZC,KAAK,MACLF,UAAU,iBACVV,SAAUA,EACVE,OAAQA,KAEV,SAAC,IAAW,CACVd,KAAK,WACLuB,YAAY,eACZD,UAAU,sBACVE,KAAK,WACLZ,SAAUA,EACVE,OAAQA,KAEV,iBAAKQ,UAAU,qBAAoB,WACjC,SAAC,KAAY,CACXG,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,YAC5CL,UAAU,YAAW,SACtB,gBAGD,SAAC,KAAY,CACXG,MAAO,CACLE,MAAO,UACPC,aAAc,MACdC,UAAW,oCAEbP,UAAU,YACVQ,QAAS,kBAAMT,EAAAA,EAAAA,KAAa,cAAc,EAAC,SAC5C,iCAOX,ICiCA,GALiBhB,EAAAA,EAAAA,KAhBO,SAACC,EAAOC,GAC9B,MAAO,CACLA,SAAUA,EAEd,IAE2B,SAACnB,GAC1B,OAAOoB,EAAAA,EAAAA,IACL,CACEuB,mBAAoB7C,EAAAA,GACpBuB,iBAAkBL,EAAAA,IAEpBhB,EAEJ,GAEiBiB,EAzFa,SAAH,GAAgC,IAA1B0B,EAAkB,EAAlBA,mBACzBV,GAAUW,EAAAA,EAAAA,MAChB,GAAgDC,EAAAA,EAAAA,YAAU,eAAnDC,EAAgB,KAAEC,EAAmB,KAC5C,GAAwCF,EAAAA,EAAAA,UAAS,IAAG,eAA7CvB,EAAY,KAAE0B,EAAe,KACpC,GAIIzB,EAAAA,EAAAA,MAHFC,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACaC,EAAM,EAAnBC,UAAaD,OAmBf,OACE,8BACIoB,GAuCA,SAAC,EAAY,CAACxB,aAAcA,KAtC5B,gBAAKY,UAAU,4BAA2B,UACxC,kBAAMN,SAAUH,GApBG,SAAChB,GAC1B,IAAIoB,EAAU,CACZC,QAASrB,EAAKwC,MACdC,UAAW,GAGbP,EAAmBd,GAChBrB,MAAK,SAAC2C,GACLJ,GAAoB,GACpBC,EAAgBvC,EAAKwC,MACvB,IACCvC,OAAM,SAAC0C,GACNC,QAAQC,IAAIF,EACd,GACJ,IAMyD,WAC/C,SAAC,IAAW,CACVxC,KAAK,QACLwB,KAAK,QACLmB,QAAQ,WACRpB,YAAY,4BACZD,UAAU,qBACVV,SAAUA,EACVE,OAAQA,KAEV,kBAAOQ,UAAU,wBAAuB,SAAC,2EAIzC,iBAAKA,UAAU,qBAAoB,WACjC,SAAC,KAAY,CACXG,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,YAC5CL,UAAU,YACVtB,KAAK,SAAQ,SACd,cAGD,SAAC,KAAY,CACXyB,MAAO,CACLE,MAAO,UACPC,aAAc,MACdC,UAAW,oCAEbP,UAAU,YACVQ,QAAS,kBAAMT,EAAQuB,KAAK,cAAc,EAAC,SAC5C,mCAWf,G","sources":["action/AuthAct.js","component/Auth/PostRegister/index.jsx","component/Auth/Register/index.jsx"],"sourcesContent":["import { authApi } from \"../service/apiVariables\";\r\n\r\nexport const registationApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.registationApi,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const loginApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.loginApi,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          localStorage.setItem(\"authToken\", data);\r\n          resolve(data);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const verifyOTPApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.verifyOTP,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n          Toast({ type: \"error\", message: data.message });\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n","import React, { useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport { CustomButton } from \"component/common\";\r\nimport { CustomInput } from \"component/common/NormalInput\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { history } from \"service/helpers\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { verifyOTPApi } from \"action/AuthAct\";\r\n\r\nfunction PostRegisterComponentMain({ verifyOTPApiCall, currentEmail }) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const verifyOTP = (data) => {\r\n    let payload = {\r\n      emailId: currentEmail,\r\n      otp: data.otp,\r\n      password: data.password,\r\n    };\r\n    verifyOTPApiCall(payload).then(() => {\r\n      history.push(\"/auth/login\");\r\n    });\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(verifyOTP)}>\r\n      <div className=\"post-register-container\">\r\n        <div className=\"otp-resend-container d-flex justify-content-between my-4\">\r\n          <label className=\"label-otp-sent\"> OTP sent to Mobile</label>\r\n          <label className=\"label-resend pe-1\">Resend? </label>\r\n        </div>\r\n        <CustomInput\r\n          type=\"number\"\r\n          placeholder=\"Enter OTP\"\r\n          name=\"otp\"\r\n          className=\"input-otp my-3\"\r\n          register={register}\r\n          errors={errors}\r\n        />\r\n        <CustomInput\r\n          type=\"password\"\r\n          placeholder=\"Set Password\"\r\n          className=\"input-password my-3\"\r\n          name=\"password\"\r\n          register={register}\r\n          errors={errors}\r\n        />\r\n        <div className=\"d-flex flex-column\">\r\n          <CustomButton\r\n            style={{ backgroundColor: \"#A26220\", color: \" #FFFFFF\" }}\r\n            className=\"py-2 mb-3\"\r\n          >\r\n            Verify OTP\r\n          </CustomButton>\r\n          <CustomButton\r\n            style={{\r\n              color: \"#2A71F9\",\r\n              borderRadius: \"5px\",\r\n              boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.15)\",\r\n            }}\r\n            className=\"py-2 mt-3\"\r\n            onClick={() => history.push(\"/auth/login\")}\r\n          >\r\n            Existing User? Log in\r\n          </CustomButton>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    ownProps: ownProps,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      verifyOTPApiCall: verifyOTPApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst PostRegister = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PostRegisterComponentMain);\r\n\r\nexport default PostRegister;\r\n","import React, { useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport { CustomButton } from \"component/common\";\r\nimport { CustomInput } from \"component/common/NormalInput\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { registationApi, verifyOTPApi } from \"action/AuthAct\";\r\nimport { conditionalLoad } from \"service/helperFunctions\";\r\nimport PostRegister from \"../PostRegister\";\r\n\r\nconst RegisterComponentMain = ({ registationApiCall }) => {\r\n  const history = useHistory();\r\n  const [showPostRegister, setShowPostRegister] = useState();\r\n  const [currentEmail, setCurrentEmail] = useState(\"\");\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const handlePostRegister = (data) => {\r\n    let payload = {\r\n      emailId: data.email,\r\n      loginType: 3,\r\n    };\r\n\r\n    registationApiCall(payload)\r\n      .then((res) => {\r\n        setShowPostRegister(true);\r\n        setCurrentEmail(data.email);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!showPostRegister ? (\r\n        <div className=\"d-flex register-container\">\r\n          <form onSubmit={handleSubmit(handlePostRegister)}>\r\n            <CustomInput\r\n              type=\"email\"\r\n              name=\"email\"\r\n              variant=\"standard\"\r\n              placeholder=\"Enter Email/Mobile number\"\r\n              className=\"input-mobile-email\"\r\n              register={register}\r\n              errors={errors}\r\n            />\r\n            <label className=\"label-privacy-policy \">\r\n              By continuing, you agree to Paperwall Terms of use and Privacy\r\n              policy\r\n            </label>\r\n            <div className=\"d-flex flex-column\">\r\n              <CustomButton\r\n                style={{ backgroundColor: \"#A26220\", color: \" #FFFFFF\" }}\r\n                className=\"py-2 mb-3\"\r\n                type=\"submit\"\r\n              >\r\n                Continue\r\n              </CustomButton>\r\n              <CustomButton\r\n                style={{\r\n                  color: \"#2A71F9\",\r\n                  borderRadius: \"5px\",\r\n                  boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.15)\",\r\n                }}\r\n                className=\"py-2 mt-3\"\r\n                onClick={() => history.push(\"/auth/login\")}\r\n              >\r\n                Existing User? Log in\r\n              </CustomButton>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <PostRegister currentEmail={currentEmail} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    ownProps: ownProps,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      registationApiCall: registationApi,\r\n      verifyOTPApiCall: verifyOTPApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst Register = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RegisterComponentMain);\r\n\r\nexport default Register;\r\n"],"names":["registationApi","body","dispatch","getState","apiCall","Toast","Promise","resolve","reject","authApi","then","data","catch","message","type","loginApi","localStorage","setItem","verifyOTPApi","connect","state","ownProps","bindActionCreators","verifyOTPApiCall","currentEmail","useForm","register","handleSubmit","errors","formState","onSubmit","payload","emailId","otp","password","history","className","placeholder","name","style","backgroundColor","color","borderRadius","boxShadow","onClick","registationApiCall","useHistory","useState","showPostRegister","setShowPostRegister","setCurrentEmail","email","loginType","res","err","console","log","variant","push"],"sourceRoot":""}