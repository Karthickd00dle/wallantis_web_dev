{"version":3,"file":"static/js/1774.0fc31064.chunk.js","mappings":"qSASA,MAAMA,EAAOC,EAAAA,YAAiB,CAACC,EAAOC,KAElCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAiBF,IAAKA,EAAIG,SACtCJ,EAAMI,aAKPC,EAAiBA,KACrB,MAAMC,GAAOC,EAAAA,EAAAA,UACPC,GAAWD,EAAAA,EAAAA,WACVE,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,GAUzCC,GAASC,EAAAA,EAAAA,cACZC,IACC,MAAMC,EAAoBD,EAAEE,KAGxBD,IAAsBN,IAXxBD,EAASS,SACXT,EAASS,QAAQC,OAYfR,EAAeK,GACjB,GAEF,CAACN,IAYH,OATAU,EAAAA,EAAAA,YAAU,IAED,KACDX,EAASS,SACXT,EAASS,QAAQG,OACnB,GAED,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAlB,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOD,IAAKO,EAAUe,IAAKC,KAC3BtB,EAAAA,EAAAA,KAACuB,EAAAA,EAAY,CACXC,WAAW,EACXd,OAAQA,EACRX,IAAKK,EACLqB,MAAO,IACPC,OAAQ,IACRC,OAAQC,IAAiB,IAAhB,OAAEC,GAAQD,EACjBE,QAAQC,IAAIF,EAAOG,OAAO,EAC1B9B,SAED+B,EAAAA,GAAmBC,KAAIC,IAAA,IAAC,GAAEC,EAAE,QAAEC,EAAO,MAAEC,GAAOH,EAAA,OAC7CnC,EAAAA,EAAAA,KAACJ,EAAI,CAEH2C,OAAQF,EACRG,aAAeC,GAAMX,QAAQC,IAAIU,EAAG,SAASvC,UAE7CF,EAAAA,EAAAA,KAAA,OACE0B,OAAO,OACPD,MAAM,OACNJ,IAAKiB,EACLI,IAAG,OAAAC,OAASN,MARTD,EAUA,QAGV,EAIMQ,EAAaC,IAAmC,IAAlC,OAAEC,EAAM,iBAAEC,GAAkBF,EACrD,OACE7C,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACgD,EAAAA,EAAM,CAAC/C,UAAU,mBAAmBgD,KAAMH,EAAO5C,UAChDiB,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,gCAA+BC,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,KAACkD,EAAAA,GAAY,CACXC,WAAWnD,EAAAA,EAAAA,KAACoD,EAAAA,EAAyB,IACrCC,QAAQ,YACRpD,UAAU,sBACVqD,QAASA,IAAMP,GAAiB,GAAO7C,UAEvCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,uCAAsCC,SAAC,yBAK5DiB,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,wBAAuBC,SAAA,EACpCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAC,UAC9BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,eAETF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCC,UACjDF,EAAAA,EAAAA,KAACG,EAAc,YAIjB,E,cCrGV,MAAMoD,EAAiB3B,IAAkD,IAA/Cd,MAAM,MAAE0C,EAAK,KAAE1C,GAAM,iBAAEiC,GAAkBnB,EACjE,OACET,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,iBAAgBC,SAAA,EAC7BiB,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,SAAAE,SAAQsD,KACRxD,EAAAA,EAAAA,KAAA,QAAMsD,QAASA,IAAMP,GAAiB,GAAM7C,SAAC,iBAE/CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAC5CY,EAAKoB,KAAI,CAACI,EAAOmB,KAChBtC,EAAAA,EAAAA,MAAA,OAAiBlB,UAAU,2BAA0BC,SAAA,EACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,UAC7CiB,EAAAA,EAAAA,MAAA,OACElB,UAAU,0DACVqD,QAASA,IAAMP,GAAiB,GAAM7C,SAAA,EAEtCF,EAAAA,EAAAA,KAAC0D,EAAAA,EAAkB,KACnB1D,EAAAA,EAAAA,KAAA,SAAOC,UAAU,2CAA0CC,SAAC,yBAMhEF,EAAAA,EAAAA,KAAA,OACEqB,IAAKiB,EACLI,IAAI,YACJzC,UAAU,uBACVyB,OAAO,QACPD,MAAM,YAlBAgC,SAuBV,EAIK,SAASE,IACtB,MAAOC,EAAeb,IAAoBtC,EAAAA,EAAAA,WAAS,GAEnD,OACEU,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAlB,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAc,CAACC,gBAAgB,iBAAgB5D,UAC9CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,uCAKbF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SACjC6D,EAAAA,GAAkB7B,KAAKpB,IACtBd,EAAAA,EAAAA,KAACuD,EAAc,CAACzC,KAAMA,EAAMiC,iBAAkBA,SAIlD/C,EAAAA,EAAAA,KAAC4C,EAAU,CAACE,OAAQc,EAAeb,iBAAkBA,MAG3D,C","sources":["component/Catalogue/ECatalogue.js","component/Catalogue/index.jsx"],"sourcesContent":["import React, { useRef, useCallback, useState, useEffect } from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport HTMLFlipBook from \"react-pageflip\";\r\nimport \"./style.scss\";\r\nimport { CustomButton } from \"component/common\";\r\nimport { KeyboardArrowLeftOutlined } from \"@mui/icons-material\";\r\nimport { eCatalogueProducts } from \"config\";\r\nimport pageTurnSound from \"assets/audio/page-flip.mp3\"; // Import the sound file\r\n\r\nconst Page = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div className=\"page-container\" ref={ref}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst ECatalogueBook = () => {\r\n  const book = useRef();\r\n  const audioRef = useRef();\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  // Function to play the page turn sound\r\n  const playPageTurnSound = () => {\r\n    if (audioRef.current) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  // Callback when a page is turned\r\n  const onFlip = useCallback(\r\n    (e) => {\r\n      const currentPageNumber = e.data;\r\n\r\n      // Only play the sound if the page has actually turned\r\n      if (currentPageNumber !== currentPage) {\r\n        playPageTurnSound();\r\n        setCurrentPage(currentPageNumber);\r\n      }\r\n    },\r\n    [currentPage]\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Pause the audio when the component unmounts\r\n    return () => {\r\n      if (audioRef.current) {\r\n        audioRef.current.pause();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <audio ref={audioRef} src={pageTurnSound} />\r\n      <HTMLFlipBook\r\n        showCover={true}\r\n        onFlip={onFlip}\r\n        ref={book}\r\n        width={625}\r\n        height={500}\r\n        onInit={({ object }) => {\r\n          console.log(object.events);\r\n        }}\r\n      >\r\n        {eCatalogueProducts.map(({ id, page_no, image }) => (\r\n          <Page\r\n            key={id}\r\n            number={page_no}\r\n            getPageCount={(c) => console.log(c, \"count\")}\r\n          >\r\n            <img\r\n              height=\"100%\"\r\n              width=\"100%\"\r\n              src={image}\r\n              alt={`img-${page_no}`}\r\n            />\r\n          </Page>\r\n        ))}\r\n      </HTMLFlipBook>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const ECatalogue = ({ isOpen, setOpenCatalogue }) => {\r\n  return (\r\n    <div>\r\n      <Dialog className=\"dialog-container\" open={isOpen}>\r\n        <div className=\"d-flex align-items-center row\">\r\n          <div className=\"col-5\">\r\n            <CustomButton\r\n              startIcon={<KeyboardArrowLeftOutlined />}\r\n              variant=\"contained\"\r\n              className=\"back-to-website p-3\"\r\n              onClick={() => setOpenCatalogue(false)}\r\n            >\r\n              <label className=\"back-to-website-label cursor-pointer\">\r\n                Back to Website\r\n              </label>\r\n            </CustomButton>\r\n          </div>\r\n          <div className=\"col-6 label-container\">\r\n            <label className=\"label-wall\">Wall</label>\r\n            <label>antics</label>\r\n          </div>\r\n          <div className=\"d-flex justify-content-center pt-5\">\r\n            <ECatalogueBook />\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { history } from \"service/helpers\";\r\nimport \"./style.scss\";\r\nimport { NormalNavigate } from \"component/common\";\r\nimport { ECatalogue } from \"./ECatalogue\";\r\nimport { useState } from \"react\";\r\nimport { VisibilityOutlined } from \"@mui/icons-material\";\r\nimport { eCatalogueBanners } from \"config\";\r\n\r\nconst ECatalogueCard = ({ data: { title, data }, setOpenCatalogue }) => {\r\n  return (\r\n    <div className=\"catalogue-main\">\r\n      <div className=\"catalogue-wallpaper pb-4\">\r\n        <label>{title}</label>\r\n        <span onClick={() => setOpenCatalogue(true)}>VIEW ALL</span>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between\">\r\n        {data.map((image, index) => (\r\n          <div key={index} className=\"catalogue-card-container\">\r\n            <div className=\"view-catalogue-label-container\">\r\n              <div\r\n                className=\"view-catalogue-label-inner-container p-2 cursor-pointer\"\r\n                onClick={() => setOpenCatalogue(true)}\r\n              >\r\n                <VisibilityOutlined />\r\n                <label className=\"ps-1 view-catalogue-label cursor-pointer\">\r\n                  View Catalogue\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <img\r\n              src={image}\r\n              alt=\"wallpaper\"\r\n              className=\"view-catalogue-image\"\r\n              height=\"289px\"\r\n              width=\"267px\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function Catalogue() {\r\n  const [openCatalogue, setOpenCatalogue] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <NormalNavigate navigationStyle=\"catalogue-head\">\r\n          <div className=\"main-menu\">\r\n            <label>Browse from our E-Catalouge</label>\r\n          </div>\r\n        </NormalNavigate>\r\n      </div>\r\n\r\n      <div className=\"catalogue-container\">\r\n        {eCatalogueBanners.map((data) => (\r\n          <ECatalogueCard data={data} setOpenCatalogue={setOpenCatalogue} />\r\n        ))}\r\n      </div>\r\n\r\n      <ECatalogue isOpen={openCatalogue} setOpenCatalogue={setOpenCatalogue} />\r\n    </>\r\n  );\r\n}\r\n"],"names":["Page","React","props","ref","_jsx","className","children","ECatalogueBook","book","useRef","audioRef","currentPage","setCurrentPage","useState","onFlip","useCallback","e","currentPageNumber","data","current","play","useEffect","pause","_jsxs","_Fragment","src","pageTurnSound","HTMLFlipBook","showCover","width","height","onInit","_ref","object","console","log","events","eCatalogueProducts","map","_ref2","id","page_no","image","number","getPageCount","c","alt","concat","ECatalogue","_ref3","isOpen","setOpenCatalogue","Dialog","open","CustomButton","startIcon","KeyboardArrowLeftOutlined","variant","onClick","ECatalogueCard","title","index","VisibilityOutlined","Catalogue","openCatalogue","NormalNavigate","navigationStyle","eCatalogueBanners"],"sourceRoot":""}