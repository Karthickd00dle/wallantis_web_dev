{"version":3,"file":"static/js/3982.9fe0795c.chunk.js","mappings":"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","sources":["action/AuthAct.js","component/Auth/PostRegister/index.jsx","component/Auth/Register/index.jsx"],"sourcesContent":["import { authApi } from \"../service/apiVariables\";\r\n\r\nexport const registationApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.registationApi,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const loginApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.loginApi,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          sessionStorage.setItem(\"authToken\", data);\r\n          resolve(data);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const verifyOTPApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.verifyOTP,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n          Toast({ type: \"success\", message: data.message });\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const resendOTPApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.resendOTP,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n          Toast({ type: \"success\", message: data.message });\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const resendOTPVerifyApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.resendOTPVerify,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n          Toast({ type: \"success\", message: data.message });\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n","import React, { useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport { CustomButton } from \"component/common\";\r\nimport { CustomInput } from \"component/common/NormalInput\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { history } from \"service/helpers\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { verifyOTPApi } from \"action/AuthAct\";\r\n\r\nfunction PostRegisterComponentMain({ verifyOTPApiCall, ownProps }) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const { currentEmail } = ownProps;\r\n  const verifyOTP = (data) => {\r\n    let payload = {\r\n      emailId: currentEmail,\r\n      otp: data.otp,\r\n      password: data.password,\r\n    };\r\n    verifyOTPApiCall(payload).then(() => {\r\n      history.push(\"/auth/login\");\r\n    });\r\n  };\r\n\r\n  console.log(currentEmail, \"oww\");\r\n  return (\r\n    <form onSubmit={handleSubmit(verifyOTP)}>\r\n      <div className=\"post-register-container\">\r\n        <CustomInput\r\n          type=\"email\"\r\n          name=\"email\"\r\n          variant=\"standard\"\r\n          placeholder=\"Enter Email/Mobile number\"\r\n          className=\"input-mobile-email\"\r\n          register={register}\r\n          errors={errors}\r\n          defaultValue={currentEmail}\r\n        />\r\n        <div className=\"otp-resend-container d-flex justify-content-between my-4\">\r\n          <label className=\"label-otp-sent\"> OTP sent to Mobile</label>\r\n          <label className=\"label-resend pe-1\">Resend? </label>\r\n        </div>\r\n        <CustomInput\r\n          type=\"number\"\r\n          placeholder=\"Enter OTP\"\r\n          name=\"otp\"\r\n          className=\"input-otp my-3\"\r\n          register={register}\r\n          errors={errors}\r\n        />\r\n        <CustomInput\r\n          type=\"password\"\r\n          placeholder=\"Set Password\"\r\n          className=\"input-password my-3\"\r\n          name=\"password\"\r\n          register={register}\r\n          errors={errors}\r\n        />\r\n        <div className=\"d-flex flex-column\">\r\n          <CustomButton\r\n            style={{ backgroundColor: \"#A26220\", color: \" #FFFFFF\" }}\r\n            className=\"py-2 mb-3\"\r\n          >\r\n            Verify OTP\r\n          </CustomButton>\r\n          <CustomButton\r\n            style={{\r\n              color: \"#2A71F9\",\r\n              borderRadius: \"5px\",\r\n              boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.15)\",\r\n            }}\r\n            className=\"py-2 mt-3\"\r\n            onClick={() => history.push(\"/auth/login\")}\r\n          >\r\n            Existing User? Log in\r\n          </CustomButton>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    ownProps: ownProps,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      verifyOTPApiCall: verifyOTPApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst PostRegister = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PostRegisterComponentMain);\r\n\r\nexport default PostRegister;\r\n","import React, { useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport { CustomButton } from \"component/common\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { CustomInput } from \"component/common/NormalInput\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginApi, registationApi, verifyOTPApi } from \"action/AuthAct\";\r\nimport PostRegister from \"../PostRegister\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\n\r\nconst RegisterComponentMain = ({ loginApiCall, registationApiCall }) => {\r\n  const history = useHistory();\r\n  const [showPostRegister, setShowPostRegister] = useState();\r\n  const [currentEmail, setCurrentEmail] = useState(\"\");\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const handlePostRegister = (data) => {\r\n    let payload = {\r\n      emailId: data.email,\r\n      loginType: 3,\r\n    };\r\n\r\n    registationApiCall(payload)\r\n      .then((res) => {\r\n        setShowPostRegister(true);\r\n        setCurrentEmail(data.email);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const googleSignUp = (OAuthRes) => {\r\n    const decoded = jwt_decode(OAuthRes.credential);\r\n    const name = decoded.given_name.split(\" \");\r\n    let payload = {\r\n      firstName: name[0],\r\n      lastName: name[1],\r\n      emailId: decoded.email,\r\n      image: decoded.picture,\r\n      roleType: \"home_owner\",\r\n      socialId: decoded.sub,\r\n      loginType: 2,\r\n    };\r\n\r\n    registationApiCall(payload)\r\n      .then(() =>\r\n        loginApiCall({\r\n          username: decoded.sub,\r\n          loginType: 2,\r\n        }).then(({ response }) => {\r\n          let token = response.access_token;\r\n          sessionStorage.setItem(\"authToken\", token);\r\n          history.push(\"/home/\");\r\n        })\r\n      )\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!showPostRegister ? (\r\n        <div className=\"d-flex register-container\">\r\n          <form onSubmit={handleSubmit(handlePostRegister)}>\r\n            <CustomInput\r\n              type=\"email\"\r\n              name=\"email\"\r\n              variant=\"standard\"\r\n              placeholder=\"Enter Email/Mobile number\"\r\n              className=\"input-mobile-email\"\r\n              register={register}\r\n              errors={errors}\r\n            />\r\n            <label className=\"label-privacy-policy \">\r\n              By continuing, you agree to Paperwall Terms of use and Privacy\r\n              policy\r\n            </label>\r\n            <div className=\"d-flex flex-column\">\r\n              <CustomButton\r\n                style={{ backgroundColor: \"#A26220\", color: \" #FFFFFF\" }}\r\n                className=\"py-2 mb-3\"\r\n                type=\"submit\"\r\n              >\r\n                Continue\r\n              </CustomButton>\r\n              <div className=\"my-2 \">\r\n                <GoogleLogin\r\n                  text=\"signup_with\"\r\n                  onSuccess={(res) => {\r\n                    googleSignUp(res);\r\n                  }}\r\n                  onError={() => {\r\n                    console.log(\"Login Failed\");\r\n                  }}\r\n                />\r\n              </div>\r\n              <CustomButton\r\n                style={{\r\n                  color: \"#2A71F9\",\r\n                  borderRadius: \"5px\",\r\n                  boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.15)\",\r\n                }}\r\n                className=\"py-2 mt-3\"\r\n                onClick={() => history.push(\"/auth/login\")}\r\n              >\r\n                Existing User? Log in\r\n              </CustomButton>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <PostRegister currentEmail={currentEmail} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    ownProps: ownProps,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      registationApiCall: registationApi,\r\n      verifyOTPApiCall: verifyOTPApi,\r\n      loginApiCall: loginApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst Register = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RegisterComponentMain);\r\n\r\nexport default Register;\r\n"],"names":["registationApi","body","dispatch","getState","_ref","apiCall","Toast","Promise","resolve","reject","authApi","then","data","catch","_ref2","message","type","loginApi","_ref3","sessionStorage","setItem","_ref4","verifyOTPApi","_ref5","verifyOTP","_ref6","resendOTPApi","_ref7","resendOTP","_ref8","connect","mapStateToProps","state","ownProps","bindActionCreators","verifyOTPApiCall","register","handleSubmit","formState","errors","useForm","currentEmail","console","log","_jsx","onSubmit","payload","emailId","otp","password","history","push","children","_jsxs","className","CustomInput","name","variant","placeholder","defaultValue","CustomButton","style","backgroundColor","color","borderRadius","boxShadow","onClick","registationApiCall","loginApiCall","useHistory","showPostRegister","setShowPostRegister","useState","setCurrentEmail","_Fragment","PostRegister","email","loginType","res","err","GoogleLogin","text","onSuccess","OAuthRes","decoded","jwt_decode","credential","given_name","split","firstName","lastName","image","picture","roleType","socialId","sub","username","response","token","access_token","googleSignUp","onError"],"sourceRoot":""}