{"version":3,"file":"static/js/3110.fe74d6d5.chunk.js","mappings":"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","sources":["action/ContactAct.js","assets/images/Chatmessage1.jsx","component/Contactus/index.jsx"],"sourcesContent":["import { contactUsAPI } from \"../service/apiVariables\";\r\n\r\nexport const createContact =\r\n  () =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...contactUsAPI.createContact,\r\n      }).then((data) => {\r\n        resolve(data);\r\n      });\r\n    });\r\n  };\r\n","import * as React from \"react\";\r\n\r\nconst Chatmessage1 = (props) => (\r\n  <svg width={151} height={151} fill=\"none\" {...props}>\r\n    <g filter=\"url(#a)\">\r\n      <g filter=\"url(#b)\">\r\n        <circle cx={75.5} cy={71.5} r={50.5} fill=\"#2A71F9\" />\r\n      </g>\r\n      <path\r\n        d=\"M75.904 46.744c-13.857 0-25.138 9.867-25.138 21.996 0 12.129 11.28 21.995 25.138 21.995a28.279 28.279 0 0 0 7.667-1.068l8.688 5.53a1.57 1.57 0 0 0 2.42-1.32V83.304a20.425 20.425 0 0 0 6.284-14.564c.079-12.13-11.202-21.996-25.06-21.996ZM88.473 68.74a1.57 1.57 0 0 1-1.571 1.57H64.906a1.57 1.57 0 1 1 0-3.141h21.996a1.57 1.57 0 0 1 1.57 1.57Zm-5.106 7.855a1.571 1.571 0 0 1-1.571 1.571H70.012a1.571 1.571 0 0 1 0-3.142h11.784a1.571 1.571 0 0 1 1.57 1.571Zm-19.592-15.71a1.57 1.57 0 0 1 1.571-1.572h21.116a1.571 1.571 0 0 1 0 3.142H65.346a1.571 1.571 0 0 1-1.571-1.57Z\"\r\n        fill=\"#fff\"\r\n      />\r\n    </g>\r\n    <defs>\r\n      <filter\r\n        id=\"a\"\r\n        x={0}\r\n        y={0}\r\n        width={151}\r\n        height={151}\r\n        filterUnits=\"userSpaceOnUse\"\r\n        colorInterpolationFilters=\"sRGB\"\r\n      >\r\n        <feFlood floodOpacity={0} result=\"BackgroundImageFix\" />\r\n        <feColorMatrix\r\n          in=\"SourceAlpha\"\r\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n          result=\"hardAlpha\"\r\n        />\r\n        <feOffset dy={4} />\r\n        <feGaussianBlur stdDeviation={12.5} />\r\n        <feComposite in2=\"hardAlpha\" operator=\"out\" />\r\n        <feColorMatrix values=\"0 0 0 0 0.901961 0 0 0 0 0.756863 0 0 0 0 0.337255 0 0 0 0.32 0\" />\r\n        <feBlend\r\n          in2=\"BackgroundImageFix\"\r\n          result=\"effect1_dropShadow_1668_42183\"\r\n        />\r\n        <feBlend\r\n          in=\"SourceGraphic\"\r\n          in2=\"effect1_dropShadow_1668_42183\"\r\n          result=\"shape\"\r\n        />\r\n      </filter>\r\n      <filter\r\n        id=\"b\"\r\n        x={19.05}\r\n        y={15.75}\r\n        width={112.9}\r\n        height={112.9}\r\n        filterUnits=\"userSpaceOnUse\"\r\n        colorInterpolationFilters=\"sRGB\"\r\n      >\r\n        <feFlood floodOpacity={0} result=\"BackgroundImageFix\" />\r\n        <feColorMatrix\r\n          in=\"SourceAlpha\"\r\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n          result=\"hardAlpha\"\r\n        />\r\n        <feOffset dy={0.7} />\r\n        <feGaussianBlur stdDeviation={2.975} />\r\n        <feComposite in2=\"hardAlpha\" operator=\"out\" />\r\n        <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.17 0\" />\r\n        <feBlend\r\n          in2=\"BackgroundImageFix\"\r\n          result=\"effect1_dropShadow_1668_42183\"\r\n        />\r\n        <feBlend\r\n          in=\"SourceGraphic\"\r\n          in2=\"effect1_dropShadow_1668_42183\"\r\n          result=\"shape\"\r\n        />\r\n      </filter>\r\n    </defs>\r\n  </svg>\r\n);\r\n\r\nexport default Chatmessage1;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { NormalNavigate } from \"component/common\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Toast } from \"service/toast\";\r\nimport { createContact } from \"action/ContactAct\";\r\nimport Chatmessage1 from \"assets/images/Chatmessage1\";\r\n\r\nexport function ContactusFC({ createContactAPI }) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    let payload = {\r\n      firstName: data.name,\r\n      lastName: data.lastname,\r\n      emailId: data.email,\r\n      phoneNumber: data.mobile,\r\n      country: data.country,\r\n      state: data.state,\r\n      city: data.city,\r\n      pinCode: data.pincode,\r\n      companyName: data.company,\r\n      message: data.message,\r\n    };\r\n    createContactAPI(payload).then(() => {\r\n      Toast({ type: \"error\", message: \"Form Submitted\" });\r\n    });\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"contact-us\">\r\n        <div>\r\n          <NormalNavigate navigationStyle=\"contactus-head\">\r\n            <div className=\"mainmenu\">\r\n              <label>Contact Us</label>\r\n            </div>\r\n          </NormalNavigate>\r\n        </div>\r\n\r\n        <div className=\"contact-us-main\">\r\n          <div className=\"contacthead\">Weâ€™d love to hear from you</div>\r\n          <div className=\"d-flex contactcards\">\r\n            <div className=\"address\">\r\n              <span>Address</span>\r\n              <p>\r\n                115/A, Pycraft Garden Road, Nungambakkam, Chennai - 600 034,\r\n                Tamil Nadu.\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"contactcall\">\r\n              <span>Call On</span>\r\n              <p>For any queries call us on</p>\r\n              <small>+91 5684 64865</small>\r\n              <br />\r\n              <small>+91 65486 32135</small>\r\n            </div>\r\n\r\n            <div className=\"contactemail\">\r\n              <span>Email Us</span>\r\n              <p>For any queries write to us on</p>\r\n              <small>Support@gmail.com</small>\r\n            </div>\r\n            <Chatmessage1 className=\"contactmessage\" />\r\n          </div>\r\n\r\n          <div className=\"getdirections\">GET DIRECTIONS</div>\r\n          <div className=\"needhelp\">Need help in choosing products</div>\r\n          <div className=\"contact-names\">\r\n            <div className=\"field\">\r\n              <span>First Name* </span>\r\n              <input\r\n                {...register(\"name\", { required: true })}\r\n                type=\"text\"\r\n                placeholder=\"Enter your First Name\"\r\n                name=\"name\"\r\n              />\r\n              <div className=\"error-message\">\r\n                {errors[\"name\"]?.type && (\r\n                  <span className=\"error-text\">Name is required</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <span>Last Name*</span>\r\n              <input\r\n                {...register(\"lastname\", { required: true })}\r\n                type=\"text\"\r\n                placeholder=\"Enter your Last Name\"\r\n                name=\"lastname\"\r\n              />\r\n              <div className=\"error-message\">\r\n                {errors[\"lastname\"]?.type && (\r\n                  <span className=\"error-text\">Last Name is required</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <span>Email*</span>\r\n              <input\r\n                {...register(\"email\", { required: true })}\r\n                type=\"email\"\r\n                placeholder=\"Enter your Email\"\r\n                name=\"email\"\r\n              />\r\n              <div className=\"error-message\">\r\n                {errors[\"email\"]?.type && (\r\n                  <span className=\"error-text\">Email is required</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <span>Mobile Number* </span>\r\n              <input\r\n                type=\"text\"\r\n                {...register(\"mobile\", { required: true })}\r\n                placeholder=\"Enter your Mobile\"\r\n                name=\"mobile\"\r\n              />\r\n              <div className=\"error-message\">\r\n                {errors[\"mobile\"]?.type && (\r\n                  <span className=\"error-text\">Mobile is required</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <span>Country* </span>\r\n              <input\r\n                type=\"text\"\r\n                {...register(\"country\", { required: true })}\r\n                placeholder=\"Enter your Country\"\r\n                name=\"country\"\r\n              />\r\n              <div className=\"error-message\">\r\n                {errors[\"country\"]?.type && (\r\n                  <span className=\"error-text\">Country is required</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <span>State* </span>\r\n              <input\r\n                type=\"text\"\r\n                {...register(\"state\", { required: true })}\r\n                placeholder=\"Enter your State\"\r\n                name=\"state\"\r\n              />\r\n              <div className=\"error-message\">\r\n                {errors[\"state\"]?.type && (\r\n                  <span className=\"error-text\">State is required</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <span>City* </span>\r\n              <input\r\n                type=\"text\"\r\n                {...register(\"city\", { required: true })}\r\n                placeholder=\"Enter your City\"\r\n                name=\"city\"\r\n              />\r\n              <div className=\"error-message\">\r\n                {errors[\"city\"]?.type && (\r\n                  <span className=\"error-text\">City is required</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <span>Pincode* </span>\r\n              <input\r\n                type=\"text\"\r\n                {...register(\"pincode\", { required: true })}\r\n                placeholder=\"Enter your Pincode\"\r\n                name=\"pincode\"\r\n              />\r\n              <div className=\"error-message\">\r\n                {errors[\"pincode\"]?.type && (\r\n                  <span className=\"error-text\">Pincode is required</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <span>Company Name (optional) </span>\r\n              <input\r\n                type=\"text\"\r\n                {...register(\"company\")}\r\n                placeholder=\"Enter your Company Name\"\r\n                name=\"company\"\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <span>Message </span>\r\n              <input\r\n                {...register(\"message\")}\r\n                type=\"text\"\r\n                placeholder=\"Enter Message\"\r\n                name=\"message\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"contact-Enquire\">Enquire Now </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      createContactAPI: createContact,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst Contactus = connect(null, mapDispatchToProps)(ContactusFC);\r\nexport default Contactus;\r\n"],"names":["createContact","dispatch","getState","apiCall","Toast","Promise","resolve","reject","contactUsAPI","then","data","props","width","height","fill","filter","cx","cy","r","d","id","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","values","dy","stdDeviation","in2","operator","ContactusFC","createContactAPI","useForm","register","handleSubmit","errors","formState","onSubmit","payload","firstName","name","lastName","lastname","emailId","email","phoneNumber","mobile","country","state","city","pinCode","pincode","companyName","company","message","type","className","navigationStyle","required","placeholder","connect","bindActionCreators"],"sourceRoot":""}