{"version":3,"file":"static/js/6047.e544ca94.chunk.js","mappings":"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","sources":["action/AuthAct.js","component/Auth/Login/index.jsx"],"sourcesContent":["import { authApi } from \"../service/apiVariables\";\r\n\r\nexport const registationApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.registationApi,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const loginApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.loginApi,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          localStorage.setItem(\"authToken\", data);\r\n          resolve(data);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const verifyOTPApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.verifyOTP,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n          Toast({ type: \"success\", message: data.message });\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const resendOTPApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.resendOTP,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n          Toast({ type: \"success\", message: data.message });\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const resendOTPVerifyApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...authApi.resendOTPVerify,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n          Toast({ type: \"success\", message: data.message });\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginApi } from \"action/AuthAct\";\r\nimport { CustomButton } from \"component/common\";\r\nimport { CustomInput } from \"component/common/NormalInput\";\r\nimport { InputAdornment } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { ternaryCondition } from \"service/helperFunctions\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction LoginComponentMain({ loginApiCall, ownProps }) {\r\n  const location = useLocation().pathname.split(\"/\").slice(-1)[0];\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const history = useHistory();\r\n\r\n  const [currentEmail, setCurrentEmail] = useState();\r\n\r\n  function postLogin(isGoogle, response) {\r\n    if (isGoogle) {\r\n      sessionStorage.setItem(\"authToken\", response?.access_token);\r\n    } else {\r\n      localStorage.setItem(\"authToken\", response?.access_token);\r\n    }\r\n    ternaryCondition(\r\n      location === \"payment-page\"\r\n        ? ownProps.setActiveStep(1)\r\n        : history.push(\"/home/\")\r\n    );\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    loginApiCall({\r\n      username: data.mailId,\r\n      password: data.password,\r\n      loginType: 3,\r\n    }).then(({ response }) => postLogin(false, response));\r\n  };\r\n\r\n  const googleSignIn = (OAuthRes) => {\r\n    const decoded = jwt_decode(OAuthRes.credential);\r\n    loginApiCall({\r\n      username: decoded.sub,\r\n      loginType: 2,\r\n    }).then(({ response }) => postLogin(true, response));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className={`login-entries `}>\r\n        <div className=\"d-flex flex-column\">\r\n          <CustomInput\r\n            placeholder=\"Enter Email/Mobile number\"\r\n            variant=\"standard\"\r\n            name=\"mailId\"\r\n            className=\"email-mobile-input-field mt-4\"\r\n            register={register}\r\n            errors={errors}\r\n            onChange={(e) => setCurrentEmail(e.target.value)}\r\n          />\r\n          <CustomInput\r\n            placeholder=\"Enter Password\"\r\n            variant=\"standard\"\r\n            className=\"password-input-field mt-4\"\r\n            type=\"password\"\r\n            min={8}\r\n            max={20}\r\n            name=\"password\"\r\n            register={register}\r\n            errors={errors}\r\n            endAdornment={\r\n              ownProps?.postlogin && (\r\n                <InputAdornment position=\"end\">\r\n                  <label\r\n                    onClick={() => {\r\n                      history.push(\"/auth/forgotpassword\", 1);\r\n                    }}\r\n                    className=\"forget-text-inputfield cursor-pointer\"\r\n                  >\r\n                    Forget Password?\r\n                  </label>\r\n                </InputAdornment>\r\n              )\r\n            }\r\n          />\r\n\r\n          {!ownProps?.postlogin && (\r\n            <div className=\"d-flex justify-content-end\">\r\n              <label\r\n                onClick={() => {\r\n                  history.push(\"/auth/forgot-password\", currentEmail);\r\n                }}\r\n                className=\"forget-text-inputfield cursor-pointer pt-3\"\r\n              >\r\n                Forgot Password?\r\n              </label>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"login-terms\">\r\n          <label>\r\n            By continuing, you agree to Paperwall <a href=\"\">Terms of use</a>{\" \"}\r\n            and <a href=\"\">Privacy policy</a>\r\n          </label>\r\n        </div>\r\n        <CustomButton\r\n          style={{ backgroundColor: \"#A26220\", color: \"#FFFFFF\" }}\r\n          className=\"login-button\"\r\n          type=\"submit\"\r\n        >\r\n          Login\r\n        </CustomButton>\r\n        <div className=\"mt-4\">\r\n          <GoogleLogin\r\n            onSuccess={(res) => {\r\n              googleSignIn(res);\r\n            }}\r\n            onError={() => {\r\n              console.log(\"Login Failed\");\r\n            }}\r\n          />\r\n        </div>\r\n        {ownProps?.postlogin && (\r\n          <div className=\"login-register-post\">\r\n            Don’t have an account\r\n            <a\r\n              className=\"ps-2 cursor-pointer\"\r\n              onClick={() => {\r\n                history.push(\"/auth/register\");\r\n              }}\r\n            >\r\n              Create a account\r\n            </a>\r\n          </div>\r\n        )}\r\n        {!ownProps?.postlogin && (\r\n          <div className=\"login-register\">\r\n            <label className=\"dont-have-account-text\">\r\n              Don’t have an account?\r\n            </label>\r\n            <label\r\n              className=\"register-now-text ps-2 cursor-pointer\"\r\n              onClick={() => {\r\n                history.push(\"/auth/register\");\r\n              }}\r\n            >\r\n              Register Now\r\n            </label>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    ownProps: ownProps,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      loginApiCall: loginApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst Login = connect(mapStateToProps, mapDispatchToProps)(LoginComponentMain);\r\n\r\nexport default Login;\r\n"],"names":["registationApi","body","dispatch","getState","_ref","apiCall","Toast","Promise","resolve","reject","authApi","then","data","catch","_ref2","message","type","loginApi","_ref3","localStorage","setItem","_ref4","verifyOTPApi","_ref5","verifyOTP","_ref6","resendOTPApi","_ref7","resendOTP","_ref8","connect","mapStateToProps","state","ownProps","bindActionCreators","loginApiCall","location","useLocation","pathname","split","slice","register","handleSubmit","formState","errors","useForm","history","useHistory","currentEmail","setCurrentEmail","useState","postLogin","isGoogle","response","sessionStorage","access_token","ternaryCondition","setActiveStep","push","_jsx","onSubmit","username","mailId","password","loginType","children","_jsxs","className","CustomInput","placeholder","variant","name","onChange","e","target","value","min","max","endAdornment","postlogin","InputAdornment","position","onClick","href","CustomButton","style","backgroundColor","color","GoogleLogin","onSuccess","res","OAuthRes","decoded","jwt_decode","credential","sub","googleSignIn","onError","console","log"],"sourceRoot":""}