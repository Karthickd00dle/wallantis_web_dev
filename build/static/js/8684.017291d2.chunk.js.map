{"version":3,"file":"static/js/8684.017291d2.chunk.js","mappings":"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","sources":["action/ContactAct.js","component/Contactus/index.jsx"],"sourcesContent":["import { contactUsAPI } from \"../service/apiVariables\";\n\nexport const createContact =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...contactUsAPI.createContact,\n        body,\n      }).then((data) => {\n        resolve(data);\n      });\n    });\n  };\n","import React from \"react\";\nimport \"./style.scss\";\nimport { CustomButton, NormalNavigate } from \"component/common\";\nimport { useForm } from \"react-hook-form\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Toast } from \"service/toast\";\nimport { createContact } from \"action/ContactAct\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst ContactUsSchema = yup.object().shape({\n  firstname: yup\n    .string()\n    .required(\"First Name is required\")\n    .min(2, \"First Name must be atleast 2 characters\")\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\n  lastname: yup\n    .string()\n    .required(\"Last Name is required\")\n    .min(1, \"Last Name must be atleast 1 character\")\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\n\n  email: yup\n    .string()\n    .required(\"Email is required\")\n    .email(\"Please enter valid Email\"),\n\n  mobilenumber: yup\n    .string()\n    .required(\"Mobile Number is required\")\n    .min(10, \"Mobile Number must be atleast 10 digits\")\n    .max(16, \"Mobile Number must be less than 16 digits\"),\n\n  country: yup\n    .string()\n    .required(\"Country is required\")\n    .max(20, \"Country must be less than 20 characters\")\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\n\n  state: yup\n    .string()\n    .required(\"State is required\")\n    .max(20, \"State must be less than 20 characters\")\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\n\n  city: yup\n    .string()\n    .required(\"City is required\")\n    .max(10)\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\n\n  pincode: yup\n    .number()\n    .typeError(\"Pincode is required\")\n    .required(\"Pincode is required\")\n    .test(\"len\", \"Pincode must be 6 digits\", (val) => {\n      if (val) return val.toString().length === 6;\n    }),\n\n  company: yup.string().transform((originalValue, originalObject) => {\n    // Apply validation only if the 'message' field is not empty\n    if (originalObject.message && originalObject.message.length > 0) {\n      return yup\n        .string()\n        .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \")\n        .validate(originalValue);\n    }\n    return originalValue;\n  }),\n\n  message: yup\n    .string()\n    .max(240, \"Maximum characters allowed is 240\")\n    .transform((originalValue, originalObject) => {\n      // Apply validation only if the 'company' field is not empty\n      if (originalObject.company && originalObject.company.length > 0) {\n        return yup\n          .string()\n          .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \")\n          .validate(originalValue);\n      }\n      return originalValue;\n    }),\n});\n\nexport function ContactusFC({ createContactAPI }) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(ContactUsSchema) });\n\n  const onSubmit = (data) => {\n    let payload = {\n      firstName: data.firstname,\n      lastName: data.lastname,\n      emailId: data.email,\n      phoneNumber: parseInt(data.mobilenumber),\n      country: data.country,\n      state: data.state,\n      city: data.city,\n      pinCode: data.pincode,\n      companyName: data.company || null, // Use null or an empty string as a default value\n      message: data.message || null, // Use null or an empty string as a default value\n    };\n    createContactAPI(payload).then(() => {\n      Toast({ type: \"success\", message: \"Form Submitted\" });\n    });\n  };\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"contact-us-container\">\n        <div>\n          <NormalNavigate navigationStyle=\"contact-us-head\">\n            <div className=\"contact-us-inner-container\">\n              <label className=\"contact-us-label\">Contact Us</label>\n            </div>\n          </NormalNavigate>\n        </div>\n\n        <div className=\"contact-us-main p-5\">\n          <label className=\"contact-head\">We’d love to hear from you</label>\n          <div className=\"contact-card-container p-5\">\n            <div className=\"contact-cards\">\n              <div className=\"contact-address\">\n                <label className=\"text-center pb-4 contact-title w-100\">\n                  Address\n                </label>\n                <p className=\"contact-subject text-center px-3\">\n                  115/A, Pycraft Garden Road, Nungambakkam, Chennai - 600 034,\n                  Tamil Nadu.\n                </p>\n              </div>\n              <div className=\"contact-call pt-3\">\n                <label className=\"text-center pb-4 contact-title w-100\">\n                  Call On\n                </label>\n                <div>\n                  <label className=\"pb-2 contact-subject\">\n                    For any queries call us on\n                  </label>\n                  <div className=\"d-flex flex-column\">\n                    <a\n                      href=\"tel:+91 5684 64865\"\n                      className=\"pb-1 text-decoration-none\"\n                    >\n                      +91 5684 64865\n                    </a>\n\n                    <a\n                      href=\"tel:+91 65486 32135\"\n                      className=\"pt-1 text-decoration-none\"\n                    >\n                      +91 65486 32135\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div className=\"contact-email\">\n                <label className=\"text-center pb-4 contact-title w-100\">\n                  Email Us\n                </label>\n                <p className=\"contact-subject\">\n                  For any queries write to us on\n                </p>\n                <a\n                  href=\"mailto:support@gmail.com\"\n                  className=\" text-decoration-none\"\n                >\n                  Support@gmail.com\n                </a>\n              </div>\n            </div>\n          </div>\n\n          <label className=\"get-directions-label pt-2 pb-5\">\n            GET DIRECTIONS\n          </label>\n          <label className=\"need-help-label pt-5\">\n            Need help in choosing products\n          </label>\n          <div className=\"d-flex justify-content-center pt-3\">\n            <div className=\"contact-info-container\">\n              <div className=\"field\">\n                <label>\n                  First Name<span>*</span>\n                </label>\n                <input\n                  {...register(\"firstname\")}\n                  type=\"text\"\n                  placeholder=\"Enter your First Name\"\n                  name=\"firstname\"\n                />\n                {errors.firstname && (\n                  <span className=\"error-text\">{errors.firstname.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  Last Name <span>*</span>\n                </label>\n                <input\n                  {...register(\"lastname\")}\n                  type=\"text\"\n                  placeholder=\"Enter your Last Name\"\n                  name=\"lastname\"\n                />\n                {errors.lastname && (\n                  <span className=\"error-text\">{errors.lastname.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  Email<span>*</span>\n                </label>\n                <input\n                  {...register(\"email\")}\n                  type=\"email\"\n                  placeholder=\"Enter your Email\"\n                  name=\"email\"\n                />\n                {errors.email && (\n                  <span className=\"error-text\">{errors.email.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  Mobile Number<span>*</span>\n                </label>\n                <input\n                  type=\"number\"\n                  {...register(\"mobilenumber\")}\n                  placeholder=\"Enter your Mobile\"\n                  name=\"mobilenumber\"\n                />\n                {errors.mobilenumber && (\n                  <span className=\"error-text\">\n                    {errors.mobilenumber.message}\n                  </span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  Country<span>*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  {...register(\"country\")}\n                  placeholder=\"Enter your Country\"\n                  name=\"country\"\n                />\n                {errors.country && (\n                  <span className=\"error-text\">{errors.country.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  State<span>*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  {...register(\"state\")}\n                  placeholder=\"Enter your State\"\n                  name=\"state\"\n                />\n                {errors.state && (\n                  <span className=\"error-text\">{errors.state.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  City<span>*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  {...register(\"city\")}\n                  placeholder=\"Enter your City\"\n                  name=\"city\"\n                />\n                {errors.city && (\n                  <span className=\"error-text\">{errors.city.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  Pincode<span>*</span>\n                </label>\n                <input\n                  type=\"number\"\n                  {...register(\"pincode\")}\n                  placeholder=\"Enter your Pincode\"\n                  name=\"pincode\"\n                />\n                {errors.pincode && (\n                  <span className=\"error-text\">{errors.pincode.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>Company Name (optional) </label>\n                <input\n                  className=\"field-company\"\n                  type=\"text\"\n                  {...register(\"company\")}\n                  placeholder=\"Enter your Company Name\"\n                  name=\"company\"\n                />\n              </div>\n              <div className=\"field\">\n                <label>Message </label>\n                <textarea\n                  className=\"field-message\"\n                  {...register(\"message\")}\n                  type=\"text\"\n                  placeholder=\"Enter Message\"\n                  name=\"message\"\n                />\n                {errors.message && (\n                  <span className=\"error-text\">{errors.message.message}</span>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"d-flex justify-content-center pt-5\">\n            <CustomButton className=\"enquire-now-button\">\n              Enquire Now\n            </CustomButton>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      createContactAPI: createContact,\n    },\n    dispatch\n  );\n};\n\nconst Contactus = connect(null, mapDispatchToProps)(ContactusFC);\nexport default Contactus;\n"],"names":["createContact","body","dispatch","getState","_ref","apiCall","Toast","Promise","resolve","reject","contactUsAPI","then","data","ContactUsSchema","yup","shape","firstname","required","min","matches","lastname","email","mobilenumber","max","country","state","city","pincode","typeError","test","val","toString","length","company","transform","originalValue","originalObject","message","validate","ContactusFC","createContactAPI","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","_jsx","onSubmit","payload","firstName","lastName","emailId","phoneNumber","parseInt","pinCode","companyName","type","children","_jsxs","className","NormalNavigate","navigationStyle","href","placeholder","name","CustomButton","connect","bindActionCreators"],"sourceRoot":""}