{"version":3,"file":"static/js/1108.10dcc9d9.chunk.js","mappings":"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","sources":["action/AuthAct.js","hooks/useTimer.js","component/Auth/ForgotPassword/index.jsx"],"sourcesContent":["import { authApi } from \"../service/apiVariables\";\n\nexport const registationApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.registationApi,\n        body,\n      })\n        .then((data) => {\n          resolve(data);\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n\nexport const loginApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.loginApi,\n        body,\n      })\n        .then(({ response }) => {\n          sessionStorage.setItem(\"authToken\", response.access_token);\n          resolve(response);\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n\nexport const verifyOTPApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.verifyOTP,\n        body,\n      })\n        .then((data) => {\n          resolve(data);\n          Toast({ type: \"success\", message: data.message });\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n\nexport const resendOTPApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.resendOTP,\n        body,\n      })\n        .then((data) => {\n          resolve(data);\n          Toast({ type: \"success\", message: data.message });\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n\nexport const resendOTPVerifyApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.resendOTPVerify,\n        body,\n      })\n        .then((data) => {\n          resolve(data);\n          Toast({ type: \"success\", message: data.message });\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n","import { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst getDefaultTime = (start, end, direction) => {\n  const suppliedProps = typeof (start && end) !== undefined;\n  if (suppliedProps && start >= end) {\n    return [start, end];\n  } else if (suppliedProps && start < end) {\n    return [start, start];\n  }\n  return [start || 60, end || 0];\n};\n\nconst handleTime = (time, start, end, multiplier) => {\n  multiplier =\n    end + ((start - end) % multiplier) === time\n      ? (start - end) % multiplier\n      : multiplier;\n  return time - multiplier;\n};\n\nconst toMMSS = (secs) => {\n  const sec_num = parseInt(secs, 10);\n  const minutes = Math.floor(sec_num / 60) % 60;\n  const seconds = sec_num % 60;\n\n  return [minutes, seconds].map((v) => v.toString().padStart(2, \"0\")).join(\":\");\n};\n\nconst useTimer = ({\n  startTime,\n  endTime,\n  multiplier = 1,\n  timeOut = 1000,\n} = {}) => {\n  const [start, end] = getDefaultTime(startTime, endTime);\n  const [time, setTime] = useState(start);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (time > end) {\n        setTime((prevTime) => {\n          const updatedTime = prevTime - 1;\n          return updatedTime < end ? end : updatedTime;\n        });\n      }\n    }, timeOut);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [time, end, timeOut]);\n\n  const formattedTime = toMMSS(time);\n\n  return [formattedTime, setTime];\n};\n\nuseTimer.propTypes = {\n  startTime: PropTypes.number,\n  endTime: PropTypes.number,\n  multiplier: PropTypes.number,\n  timeOut: PropTypes.number,\n};\n\nuseTimer.defaultProps = {\n  startTime: PropTypes.number,\n  endTime: PropTypes.number,\n  multiplier: 1,\n  timeOut: 1000,\n};\n\nexport { useTimer };\n","import React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport { CustomInput } from \"component/common/NormalInput\";\nimport { useForm } from \"react-hook-form\";\nimport { CustomButton } from \"component/common\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { resendOTPApi, verifyOTPApi } from \"action/AuthAct\";\nimport { useLocation } from \"react-router-dom\";\nimport { useTimer } from \"hooks/useTimer\";\nimport { Toast } from \"service/toast\";\nimport { history } from \"service/helpers\";\n\nfunction ForgotPasswordFC({ verifyOTPApiCall, resendOTPApi }) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  let location = useLocation();\n\n  const [changeMob, setChangeMob] = useState(\"disabled\");\n  const [username, setUsername] = useState();\n  const [resendTime, setResendTime] = useTimer({\n    multiplier: 1,\n    startTime: 60,\n  });\n  const handleChangeMob = () => {\n    setChangeMob(!changeMob);\n  };\n\n  const resendOTPApiCall = () => {\n    setResendTime(60);\n    let body = { emailId: username ? username : location.state };\n    resendOTPApi(body);\n  };\n\n  const verifyOTPAPICall = (data) => {\n    let body = {\n      emailId: data.emailId,\n      otp: data.otp,\n      forgotPassword: data.password,\n    };\n    verifyOTPApiCall(body).then(() => {\n      history.push(\"/home/login\");\n    });\n  };\n\n  useEffect(() => {\n    if (location.state != \"\") {\n      resendOTPApiCall(location.state);\n    }\n  }, []);\n\n  return (\n    <form onSubmit={handleSubmit(verifyOTPAPICall)}>\n      <div className=\"forgot-password-container\">\n        <CustomInput\n          variant=\"standard\"\n          className=\"input-phonenumber mb-3\"\n          disabled={changeMob}\n          name=\"mailId\"\n          onChange={(e) => setUsername(e.target.value)}\n          register={register}\n          errors={errors}\n          defaultValue={location.state}\n          placeholder=\"Enter Your Mobile Number\"\n          endAdornment={\n            <label\n              onClick={handleChangeMob}\n              className=\"label-change cursor-pointer\"\n            >\n              Change ?\n            </label>\n          }\n        />\n\n        <div className=\"otp-resend-container d-flex justify-content-between my-4\">\n          {resendTime !== \"00:00\" && <label>{resendTime}</label>}\n          <label\n            className={`label-resend pe-1 cursor-pointer ${\n              resendTime !== \"00:00\" ? \"resend-hidden\" : \"\"\n            }`}\n            onClick={() => resendOTPApiCall()}\n            disabled={resendTime !== \"00:00\"}\n          >\n            Resend?\n          </label>\n        </div>\n        <CustomInput\n          type=\"number\"\n          placeholder=\"Enter OTP\"\n          name=\"otp\"\n          className=\"input-otp my-3\"\n          register={register}\n          errors={errors}\n        />\n        <CustomInput\n          type=\"password\"\n          placeholder=\"Set Password\"\n          className=\"input-password my-3\"\n          name=\"password\"\n          register={register}\n          errors={errors}\n        />\n        <CustomButton\n          style={{ backgroundColor: \"#A26220\", color: \"#FFFFFF\" }}\n          className=\"mt-5 py-2\"\n        >\n          Login\n        </CustomButton>\n      </div>\n    </form>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ownProps: ownProps,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      verifyOTPApiCall: verifyOTPApi,\n      resendOTPApi: resendOTPApi,\n    },\n    dispatch\n  );\n};\n\nconst Login = connect(mapStateToProps, mapDispatchToProps)(ForgotPasswordFC);\n\nexport default Login;\n"],"names":["registationApi","body","dispatch","getState","_ref","apiCall","Toast","Promise","resolve","reject","authApi","then","data","catch","_ref2","message","type","loginApi","_ref3","_ref4","response","sessionStorage","setItem","access_token","_ref5","verifyOTPApi","_ref6","verifyOTP","_ref7","resendOTPApi","_ref8","resendOTP","_ref9","useTimer","startTime","endTime","multiplier","timeOut","arguments","length","undefined","start","end","getDefaultTime","direction","suppliedProps","time","setTime","useState","useEffect","interval","setInterval","prevTime","updatedTime","clearInterval","secs","sec_num","parseInt","Math","floor","map","v","toString","padStart","join","toMMSS","propTypes","PropTypes","defaultProps","connect","mapStateToProps","state","ownProps","bindActionCreators","verifyOTPApiCall","register","handleSubmit","formState","errors","useForm","location","useLocation","changeMob","setChangeMob","username","setUsername","resendTime","setResendTime","resendOTPApiCall","emailId","_jsx","onSubmit","otp","forgotPassword","password","history","push","children","_jsxs","className","CustomInput","variant","disabled","name","onChange","e","target","value","defaultValue","placeholder","endAdornment","onClick","handleChangeMob","CustomButton","style","backgroundColor","color"],"sourceRoot":""}