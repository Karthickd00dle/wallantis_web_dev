{"version":3,"file":"static/js/2841.a6f0efcc.chunk.js","mappings":"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","sources":["assets/svg/Profile/index.js","component/common/CustomCheckBox/index.js","component/Profile/AddNewAddress/index.jsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nexport const DeleteItemIcon = (props) => (\r\n  <svg width={14} height={18} fill=\"none\" {...props}>\r\n    <path\r\n      d=\"M1 16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4H1v12ZM14 1h-3.5l-1-1h-5l-1 1H0v2h14V1Z\"\r\n      fill=\"#F14C54\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const CheckboxChecked = (props) => (\r\n  <svg width={24} height={24} fill=\"none\" {...props}>\r\n    <rect width={24} height={24} rx={2} fill=\"#2A71F9\" />\r\n    <path\r\n      d=\"m6.578 12.203 3.281 3.281 6.563-7.03\"\r\n      stroke=\"#fff\"\r\n      strokeWidth={1.5}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const RadioUnchecked = (props) => (\r\n  <svg width={24} height={24} fill=\"none\" {...props}>\r\n    <circle cx={12} cy={12} r={11.5} stroke=\"#ABABAB\" />\r\n  </svg>\r\n);\r\n\r\nexport const RadioChecked = (props) => (\r\n  <svg width={24} height={24} fill=\"none\" {...props}>\r\n    <circle cx={12} cy={12} r={7} fill=\"#2A71F9\" />\r\n    <circle cx={12} cy={12} r={11.5} stroke=\"#2A71F9\" />\r\n  </svg>\r\n);\r\n\r\nexport const LocationUnchecked = (props) => (\r\n  <svg width={24} height={24} fill=\"none\" {...props}>\r\n    <circle cx={12} cy={12} r={11.5} stroke=\"#19AA60\" />\r\n  </svg>\r\n);\r\n\r\nexport const LocationChecked = (props) => (\r\n  <svg width={24} height={24} fill=\"none\" {...props}>\r\n    <circle cx={12} cy={12} r={7} fill=\"#19AA60\" />\r\n    <circle cx={12} cy={12} r={11.5} stroke=\"#19AA60\" />\r\n  </svg>\r\n);\r\n","import * as React from \"react\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nexport const CustomCheckBox = React.forwardRef(\r\n  (\r\n    { name, value, className, onChange, checked, icon, checkedIcon, color },\r\n    ref\r\n  ) => (\r\n    <Checkbox\r\n      name={name}\r\n      value={value}\r\n      ref={ref}\r\n      checked={checked}\r\n      onChange={onChange}\r\n      className={className}\r\n      color={color}\r\n      checkedIcon={checkedIcon}\r\n      icon={icon}\r\n    />\r\n  )\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CustomButton, CustomSelect } from \"component/common\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  CheckboxChecked,\r\n  RadioChecked,\r\n  RadioUnchecked,\r\n} from \"assets/svg/Profile\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\r\nimport \"./style.scss\";\r\nimport { CustomCheckBox } from \"component/common/CustomCheckBox\";\r\nimport { CustomTextField } from \"component/common/NormalInput\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { createAddress, getAddress, updateAddress } from \"action/ProfileAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { ternaryCondition } from \"service/helperFunctions\";\r\nimport { Toast } from \"service/toast\";\r\nimport { StateList } from \"config\";\r\nimport { history } from \"service/helpers\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nconst AddressSchema = yup.object().shape({\r\n  fullName: yup\r\n    .string()\r\n    .min(2, \"Name must be atleast 2 characters\")\r\n    .required(\"Name is required\"),\r\n  mobileNumber: yup\r\n    .string()\r\n    .min(10, \"Mobile Number must be atleast 10 digits\")\r\n    .max(16, \"Mobile Number must be less than 16 digits\")\r\n    .required(\"Mobile Number is required\"),\r\n  pincode: yup.number().required(\"Pincode is required\"),\r\n  flatNo: yup.string().max(18).required(\"Flat No/House No is required\"),\r\n  area: yup.string().max(28).required(\"Area is required\"),\r\n  landmark: yup.string().max(16).required(\"Landmark is required\"),\r\n  city: yup.string().max(10).required(\"City is required\"),\r\n  state: yup.string().required(\"State is required\"),\r\n  selectAddressType: yup.string().required(\"Address Type is required\"),\r\n  isDefaultAddress: yup.boolean(),\r\n});\r\n\r\nconst AddNewAddressFC = ({\r\n  getAddressAPICall,\r\n  createAddressAPI,\r\n  updateAddressAPI,\r\n}) => {\r\n  let location = useLocation();\r\n  const { id } = useParams();\r\n\r\n  const { state } = useLocation();\r\n\r\n  const locationLabel = location?.pathname\r\n    .split(\"/\")\r\n    .slice(-2)[0]\r\n    .replace(/-/g, \" \");\r\n\r\n  const [loader, setLoader] = useState(true);\r\n  const [addressData, setAddressData] = useState();\r\n\r\n  const getAddress = () => {\r\n    let query = {\r\n      url_id: id,\r\n    };\r\n    getAddressAPICall({ ...query })\r\n      .then((res) => {\r\n        setAddressData(res?.response);\r\n      })\r\n      .then(() => {\r\n        setLoader(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  console.log(addressData);\r\n\r\n  const createAddress = (data) => {\r\n    createAddressAPI(data)\r\n      .then((res) => {\r\n        setAddressData(res.response);\r\n        Toast({ type: \"success\", message: res.message });\r\n        history.push(\"/profile/profile-page\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const updateAddress = (data) => {\r\n    let query = {\r\n      url_id: id,\r\n    };\r\n    updateAddressAPI({ ...query }, data)\r\n      .then((res) => {\r\n        Toast({ type: \"success\", message: res.response });\r\n        history.push(\"/profile/profile-page\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getAddress();\r\n    }\r\n  }, []);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(AddressSchema),\r\n    defaultValues: {\r\n      fullName: state.fullName,\r\n      mobileNumber: state.mobileNumber,\r\n      pincode: state.pincode,\r\n      flatNo: state.flatNo,\r\n      area: state.area,\r\n      landmark: state.landmark,\r\n      city: state.city,\r\n      state: state.state,\r\n      country: state.country,\r\n      selectAddressType: state.selectAddressType,\r\n      isDefaultAddress: state.isDefaultAddress,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"new-address-form-container\">\r\n      {ternaryCondition(\r\n        loader,\r\n        <div>Loading...</div>,\r\n        <form>\r\n          <div className=\"address-form\">\r\n            <label className=\"add-new-address-label\">\r\n              {ternaryCondition(id, locationLabel, \"Add New Address\")}\r\n            </label>\r\n\r\n            <div className=\"input-container mt-3\">\r\n              <input\r\n                name=\"location\"\r\n                value={addressData?.location}\r\n                className={\"text-input mt-3\"}\r\n                placeholder=\"Select from Map\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"pt-3 use-location-container\">\r\n              <label className=\"use-location-label\">Use Current Location</label>\r\n            </div>\r\n\r\n            <div className=\"input-container mt-4\">\r\n              <label className=\"input-label\">Full Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"fullName\"\r\n                className={\"text-input full-name mt-3\"}\r\n                placeholder=\"Name\"\r\n                {...register(\"fullName\", { name: \"fullName\" })}\r\n              />\r\n\r\n              {errors.fullName && (\r\n                <span className=\"error-text\">{errors.fullName.message}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"input-container mt-4\">\r\n              <label className=\"input-label\">Mobile Number</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"mobileNumber\"\r\n                max=\"10\"\r\n                className={\"text-input mt-3\"}\r\n                placeholder=\"Mobile Number\"\r\n                {...register(\"mobileNumber\")}\r\n              />\r\n\r\n              {errors.mobileNumber && (\r\n                <span className=\"error-text\">\r\n                  {errors.mobileNumber.message}\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"input-container mt-4\">\r\n              <label className=\"input-label\">Pincode</label>\r\n              <input\r\n                name=\"pincode\"\r\n                type=\"number\"\r\n                {...register(\"pincode\")}\r\n                className={\"text-input mt-3\"}\r\n                placeholder=\"Pincode\"\r\n              />\r\n              {errors.pincode && (\r\n                <span className=\"error-text\">{errors.pincode.message}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"input-container mt-4\">\r\n              <label className=\"input-label\">\r\n                Flat No/House No/Building/Apartment\r\n              </label>\r\n              <input\r\n                name=\"flatNo\"\r\n                {...register(\"flatNo\")}\r\n                className={\"text-input mt-3\"}\r\n                placeholder=\"Flat No/House No/Building/Apartment\"\r\n              />\r\n\r\n              {errors.flatNo && (\r\n                <span className=\"error-text\">{errors.flatNo.message}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"input-container mt-4\">\r\n              <label className=\"input-label\">Area/State/Street/Village</label>\r\n              <input\r\n                name=\"area\"\r\n                {...register(\"area\")}\r\n                className={\"text-input mt-3\"}\r\n                placeholder=\"Area/State/Street/Village\"\r\n              />\r\n\r\n              {errors.area && (\r\n                <span className=\"error-text\">{errors.area.message}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"input-container mt-4\">\r\n              <label className=\"input-label\">Landmark</label>\r\n              <input\r\n                name=\"landmark\"\r\n                {...register(\"landmark\")}\r\n                className={\"text-input mt-3\"}\r\n                placeholder=\"Landmark\"\r\n              />\r\n\r\n              {errors.landmark && (\r\n                <span className=\"error-text\">{errors.landmark.message}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"input-container mt-4\">\r\n              <label className=\"input-label\">Town/City</label>\r\n              <input\r\n                name=\"city\"\r\n                {...register(\"city\")}\r\n                className={\"text-input mt-3\"}\r\n                placeholder=\"Town/City\"\r\n              />\r\n\r\n              {errors.city && (\r\n                <span className=\"error-text\">{errors.city.message}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n              <div className=\"input-container mt-4\">\r\n                <label className=\"input-label\">State</label>\r\n                <CustomSelect\r\n                  name=\"state\"\r\n                  {...register(\"state\")}\r\n                  placeholder=\"State\"\r\n                  inputStyle=\"mt-3 select-input\"\r\n                  menuItemList={StateList}\r\n                />\r\n\r\n                {errors.state && (\r\n                  <span className=\"error-text\">{errors.state.message}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"input-container ms-5 mt-4\">\r\n                <label className=\"input-label\">Country</label>\r\n                <CustomSelect\r\n                  name=\"country\"\r\n                  {...register(\"country\")}\r\n                  placeholder=\"Country\"\r\n                  inputStyle=\"mt-3 select-input\"\r\n                  menuItemList={[{ label: \"India\", value: \"india\" }]}\r\n                />\r\n\r\n                {errors.country && (\r\n                  <span className=\"error-text\">{errors.country.message}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"input-container w-50 mt-4\">\r\n              <label className=\"input-label\">Select Address Type</label>\r\n              <div className=\"pt-3\">\r\n                <RadioGroup\r\n                  name=\"selectAddressType\"\r\n                  {...register(\"selectAddressType\")}\r\n                  aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                  row\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"home\"\r\n                    control={\r\n                      <Radio\r\n                        disableRipple\r\n                        color=\"default\"\r\n                        checkedIcon={<RadioChecked />}\r\n                        icon={<RadioUnchecked />}\r\n                      />\r\n                    }\r\n                    label=\"Home\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"office\"\r\n                    className=\"ps-5 ms-5\"\r\n                    control={\r\n                      <Radio\r\n                        disableRipple\r\n                        color=\"default\"\r\n                        checkedIcon={<RadioChecked />}\r\n                        icon={<RadioUnchecked />}\r\n                      />\r\n                    }\r\n                    label=\"Office\"\r\n                  />\r\n                </RadioGroup>\r\n\r\n                {errors.selectAddressType && (\r\n                  <span className=\"error-text\">\r\n                    {errors.selectAddressType.message}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"checkbox-container mt-4\">\r\n              <CustomCheckBox\r\n                type=\"checkbox\"\r\n                name=\"isDefaultAddress\"\r\n                {...register(\"isDefaultAddress\")}\r\n                icon={<div className=\"checkbox-outer\" />}\r\n                checkedIcon={<CheckboxChecked />}\r\n              />\r\n              <label className=\"input-label\">\r\n                Make this my default address\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"mt-5 mb-4\">\r\n              {ternaryCondition(\r\n                id,\r\n                <CustomButton\r\n                  type=\"submit\"\r\n                  onClick={handleSubmit(updateAddress)}\r\n                  className=\"add-address-button\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Save Address\r\n                </CustomButton>,\r\n                <CustomButton\r\n                  type=\"submit\"\r\n                  onClick={handleSubmit(createAddress)}\r\n                  className=\"add-address-button\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Add Address\r\n                </CustomButton>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getAddressAPICall: getAddress,\r\n      createAddressAPI: createAddress,\r\n      updateAddressAPI: updateAddress,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst AddNewAddress = connect(null, mapDispatchToProps)(AddNewAddressFC);\r\nexport default AddNewAddress;\r\n"],"names":["DeleteItemIcon","props","_jsx","width","height","fill","children","d","CheckboxChecked","_jsxs","rx","stroke","strokeWidth","strokeLinecap","strokeLinejoin","RadioUnchecked","cx","cy","r","RadioChecked","CustomCheckBox","React","_ref","ref","name","value","className","onChange","checked","icon","checkedIcon","color","Checkbox","AddressSchema","yup","shape","fullName","min","required","mobileNumber","max","pincode","flatNo","area","landmark","city","state","selectAddressType","isDefaultAddress","connect","dispatch","bindActionCreators","getAddressAPICall","getAddress","createAddressAPI","createAddress","updateAddressAPI","updateAddress","location","useLocation","id","useParams","locationLabel","pathname","split","slice","replace","loader","setLoader","useState","addressData","setAddressData","console","log","useEffect","url_id","then","res","response","catch","err","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","defaultValues","country","ternaryCondition","placeholder","type","message","CustomSelect","inputStyle","menuItemList","StateList","label","RadioGroup","row","FormControlLabel","control","Radio","disableRipple","CustomButton","onClick","data","Toast","history","variant"],"sourceRoot":""}