{"version":3,"file":"static/js/3878.939d15f6.chunk.js","mappings":"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","sources":["action/ContactAct.js","component/Contactus/index.jsx"],"sourcesContent":["import { contactUsAPI } from \"../service/apiVariables\";\r\n\r\nexport const createContact =\r\n  () =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...contactUsAPI.createContact,\r\n      }).then((data) => {\r\n        resolve(data);\r\n      });\r\n    });\r\n  };\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { CustomButton, NormalNavigate } from \"component/common\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Toast } from \"service/toast\";\r\nimport { createContact } from \"action/ContactAct\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nconst ContactUsSchema = yup.object().shape({\r\n  firstname: yup\r\n    .string()\r\n    .required(\"First Name is required\")\r\n    .min(2, \"First Name must be atleast 2 characters\")\r\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\r\n  lastname: yup\r\n    .string()\r\n    .required(\"Last Name is required\")\r\n    .min(2, \"Last Name must be atleast 2 characters\")\r\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\r\n\r\n  email: yup\r\n    .string()\r\n    .required(\"Email is required\")\r\n    .email(\"Please enter valid Email\"),\r\n\r\n  mobilenumber: yup\r\n    .string()\r\n    .required(\"Mobile Number is required\")\r\n    .min(10, \"Mobile Number must be atleast 10 digits\")\r\n    .max(16, \"Mobile Number must be less than 16 digits\"),\r\n\r\n  country: yup\r\n    .string()\r\n    .required(\"Country is required\")\r\n    .max(20, \"Country must be less than 20 characters\")\r\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\r\n\r\n  state: yup\r\n    .string()\r\n    .required(\"State is required\")\r\n    .max(20, \"State must be less than 20 characters\")\r\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\r\n\r\n  city: yup\r\n    .string()\r\n    .required(\"City is required\")\r\n    .max(10)\r\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\r\n\r\n  pincode: yup\r\n    .number()\r\n    .typeError(\"Pincode is required\")\r\n    .required(\"Pincode is required\")\r\n    .test(\"len\", \"Pincode must be 6 digits\", (val) => {\r\n      if (val) return val.toString().length === 6;\r\n    }),\r\n\r\n  company: yup\r\n    .string()\r\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \"),\r\n\r\n  message: yup.string().max(240, \"Maximum characters allowed is 240\"),\r\n});\r\n\r\nexport function ContactusFC({ createContactAPI }) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ resolver: yupResolver(ContactUsSchema) });\r\n\r\n  const onSubmit = (data) => {\r\n    let payload = {\r\n      firstName: data.firstname,\r\n      lastName: data.lastname,\r\n      emailId: data.email,\r\n      phoneNumber: data.mobilenumber,\r\n      country: data.country,\r\n      state: data.state,\r\n      city: data.city,\r\n      pinCode: data.pincode,\r\n      companyName: data.company,\r\n      message: data.message,\r\n    };\r\n    createContactAPI(payload).then(() => {\r\n      Toast({ type: \"success\", message: \"Form Submitted\" });\r\n    });\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"contact-us-container\">\r\n        <div>\r\n          <NormalNavigate navigationStyle=\"contact-us-head\">\r\n            <div className=\"contact-us-inner-container\">\r\n              <label className=\"contact-us-label\">Contact Us</label>\r\n            </div>\r\n          </NormalNavigate>\r\n        </div>\r\n\r\n        <div className=\"contact-us-main p-5\">\r\n          <label className=\"contact-head\">Weâ€™d love to hear from you</label>\r\n          <div className=\"contact-card-container p-5\">\r\n            <div className=\"contact-cards\">\r\n              <div className=\"contact-address\">\r\n                <label className=\"text-center pb-4 contact-title w-100\">\r\n                  Address\r\n                </label>\r\n                <p className=\"contact-subject text-center px-3\">\r\n                  115/A, Pycraft Garden Road, Nungambakkam, Chennai - 600 034,\r\n                  Tamil Nadu.\r\n                </p>\r\n              </div>\r\n              <div className=\"contact-call pt-3\">\r\n                <label className=\"text-center pb-4 contact-title w-100\">\r\n                  Call On\r\n                </label>\r\n                <div>\r\n                  <label className=\"pb-2 contact-subject\">\r\n                    For any queries call us on\r\n                  </label>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <a\r\n                      href=\"tel:+91 5684 64865\"\r\n                      className=\"pb-1 text-decoration-none\"\r\n                    >\r\n                      +91 5684 64865\r\n                    </a>\r\n\r\n                    <a\r\n                      href=\"tel:+91 65486 32135\"\r\n                      className=\"pt-1 text-decoration-none\"\r\n                    >\r\n                      +91 65486 32135\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"contact-email\">\r\n                <label className=\"text-center pb-4 contact-title w-100\">\r\n                  Email Us\r\n                </label>\r\n                <p className=\"contact-subject\">\r\n                  For any queries write to us on\r\n                </p>\r\n                <a\r\n                  href=\"mailto:support@gmail.com\"\r\n                  className=\" text-decoration-none\"\r\n                >\r\n                  Support@gmail.com\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <label className=\"get-directions-label pt-2 pb-5\">\r\n            GET DIRECTIONS\r\n          </label>\r\n          <label className=\"need-help-label pt-5\">\r\n            Need help in choosing products\r\n          </label>\r\n          <div className=\"d-flex justify-content-center pt-3\">\r\n            <div className=\"contact-info-container\">\r\n              <div className=\"field\">\r\n                <label>\r\n                  First Name<span>*</span>\r\n                </label>\r\n                <input\r\n                  {...register(\"firstname\")}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your First Name\"\r\n                  name=\"firstname\"\r\n                />\r\n                {errors.firstname && (\r\n                  <span className=\"error-text\">{errors.firstname.message}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>\r\n                  Last Name <span>*</span>\r\n                </label>\r\n                <input\r\n                  {...register(\"lastname\")}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  name=\"lastname\"\r\n                />\r\n                {errors.lastname && (\r\n                  <span className=\"error-text\">{errors.lastname.message}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>\r\n                  Email<span>*</span>\r\n                </label>\r\n                <input\r\n                  {...register(\"email\")}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  name=\"email\"\r\n                />\r\n                {errors.email && (\r\n                  <span className=\"error-text\">{errors.email.message}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>\r\n                  Mobile Number<span>*</span>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  {...register(\"mobilenumber\")}\r\n                  placeholder=\"Enter your Mobile\"\r\n                  name=\"mobilenumber\"\r\n                />\r\n                {errors.mobilenumber && (\r\n                  <span className=\"error-text\">\r\n                    {errors.mobilenumber.message}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>\r\n                  Country<span>*</span>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  {...register(\"country\")}\r\n                  placeholder=\"Enter your Country\"\r\n                  name=\"country\"\r\n                />\r\n                {errors.country && (\r\n                  <span className=\"error-text\">{errors.country.message}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>\r\n                  State<span>*</span>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  {...register(\"state\")}\r\n                  placeholder=\"Enter your State\"\r\n                  name=\"state\"\r\n                />\r\n                {errors.state && (\r\n                  <span className=\"error-text\">{errors.state.message}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>\r\n                  City<span>*</span>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  {...register(\"city\")}\r\n                  placeholder=\"Enter your City\"\r\n                  name=\"city\"\r\n                />\r\n                {errors.city && (\r\n                  <span className=\"error-text\">{errors.city.message}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>\r\n                  Pincode<span>*</span>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  {...register(\"pincode\")}\r\n                  placeholder=\"Enter your Pincode\"\r\n                  name=\"pincode\"\r\n                />\r\n                {errors.pincode && (\r\n                  <span className=\"error-text\">{errors.pincode.message}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Company Name (optional) </label>\r\n                <input\r\n                  className=\"field-company\"\r\n                  type=\"text\"\r\n                  {...register(\"company\")}\r\n                  placeholder=\"Enter your Company Name\"\r\n                  name=\"company\"\r\n                />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Message </label>\r\n                <textarea\r\n                  className=\"field-message\"\r\n                  {...register(\"message\")}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Message\"\r\n                  name=\"message\"\r\n                />\r\n                {errors.message && (\r\n                  <span className=\"error-text\">{errors.message.message}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-center pt-5\">\r\n            <CustomButton className=\"enquire-now-button\">\r\n              Enquire Now\r\n            </CustomButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      createContactAPI: createContact,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst Contactus = connect(null, mapDispatchToProps)(ContactusFC);\r\nexport default Contactus;\r\n"],"names":["createContact","dispatch","getState","_ref","apiCall","Toast","Promise","resolve","reject","contactUsAPI","then","data","ContactUsSchema","yup","shape","firstname","required","min","matches","lastname","email","mobilenumber","max","country","state","city","pincode","typeError","test","val","toString","length","company","message","ContactusFC","createContactAPI","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","_jsx","onSubmit","payload","firstName","lastName","emailId","phoneNumber","pinCode","companyName","type","children","_jsxs","className","NormalNavigate","navigationStyle","href","placeholder","name","CustomButton","connect","bindActionCreators"],"sourceRoot":""}