{"version":3,"file":"static/js/7596.4b6193e8.chunk.js","mappings":"qKAEO,MAAMA,EACVC,GACD,CAACC,EAAUC,EAAQC,KAA0B,IAAxB,QAAEC,EAAO,MAAEC,GAAOF,EACrC,OAAO,IAAIG,SAAQ,CAACC,EAASC,KAC3BJ,EAAQ,IACHK,EAAAA,GAAQV,eACXC,SAECU,MAAMC,IACLJ,EAAQI,EAAK,IAEdC,OAAMC,IAAkB,IAAjB,QAAEC,GAASD,EACjBL,EAAOH,EAAM,CAAEU,KAAM,QAASD,YAAW,GACzC,GACJ,EAGOE,EACVhB,GACD,CAACC,EAAUC,EAAQe,KAA0B,IAAxB,QAAEb,EAAO,MAAEC,GAAOY,EACrC,OAAO,IAAIX,SAAQ,CAACC,EAASC,KAC3BJ,EAAQ,IACHK,EAAAA,GAAQO,SACXhB,SAECU,MAAKQ,IAAmB,IAAlB,SAAEC,GAAUD,EACjBE,eAAeC,QAAQ,YAAaF,EAASG,cAC7Cf,EAAQY,EAAS,IAElBP,OAAMW,IAAkB,IAAjB,QAAET,GAASS,EACjBf,EAAOH,EAAM,CAAEU,KAAM,QAASD,YAAW,GACzC,GACJ,EAGOU,EACVxB,GACD,CAACC,EAAUC,EAAQuB,KAA0B,IAAxB,QAAErB,EAAO,MAAEC,GAAOoB,EACrC,OAAO,IAAInB,SAAQ,CAACC,EAASC,KAC3BJ,EAAQ,IACHK,EAAAA,GAAQiB,UACX1B,SAECU,MAAMC,IACLJ,EAAQI,GACRN,EAAM,CAAEU,KAAM,UAAWD,QAASH,EAAKG,SAAU,IAElDF,OAAMe,IAAkB,IAAjB,QAAEb,GAASa,EACjBnB,EAAOH,EAAM,CAAEU,KAAM,QAASD,YAAW,GACzC,GACJ,EAGOc,EACV5B,GACD,CAACC,EAAUC,EAAQ2B,KAA0B,IAAxB,QAAEzB,EAAO,MAAEC,GAAOwB,EACrC,OAAO,IAAIvB,SAAQ,CAACC,EAASC,KAC3BJ,EAAQ,IACHK,EAAAA,GAAQqB,UACX9B,SAECU,MAAMC,IACLJ,EAAQI,GACRN,EAAM,CAAEU,KAAM,UAAWD,QAASH,EAAKG,SAAU,IAElDF,OAAMmB,IAAkB,IAAjB,QAAEjB,GAASiB,EACjBvB,EAAOH,EAAM,CAAEU,KAAM,QAASD,YAAW,GACzC,GACJ,C,6KCmBN,MAoBA,GALqBkB,EAAAA,EAAAA,KAfGC,CAACC,EAAOC,KACvB,CACLA,SAAUA,MAIclC,IACnBmC,EAAAA,EAAAA,IACL,CACEC,iBAAkBb,EAAAA,IAEpBvB,IAIiB+B,EA7FrB,SAAkC7B,GAAkC,IAAjC,iBAAEkC,EAAgB,SAAEF,GAAUhC,EAC/D,MAAM,SACJmC,EAAQ,aACRC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,OACE,aAAEC,GAAiBR,EAazB,OADAS,QAAQC,IAAIF,EAAc,QAExBG,EAAAA,EAAAA,KAAA,QAAMC,SAAUR,GAbC5B,IACjB,IAAIqC,EAAU,CACZC,QAASN,EACTO,IAAKvC,EAAKuC,IACVC,SAAUxC,EAAKwC,UAEjBd,EAAiBW,GAAStC,MAAK,KAC7B0C,EAAAA,EAAQC,KAAK,cAAc,GAC3B,IAKsCC,UACtCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCR,EAAAA,EAAAA,KAACW,EAAAA,GAAW,CACV1C,KAAK,QACL2C,KAAK,QACLC,QAAQ,WACRC,YAAY,4BACZJ,UAAU,qBACVlB,SAAUA,EACVG,OAAQA,EACRoB,aAAclB,KAEhBY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2DAA0DF,SAAA,EACvER,EAAAA,EAAAA,KAAA,SAAOU,UAAU,iBAAgBF,SAAC,yBAClCR,EAAAA,EAAAA,KAAA,SAAOU,UAAU,oBAAmBF,SAAC,iBAEvCR,EAAAA,EAAAA,KAACW,EAAAA,GAAW,CACV1C,KAAK,SACL6C,YAAY,YACZF,KAAK,MACLF,UAAU,iBACVlB,SAAUA,EACVG,OAAQA,KAEVK,EAAAA,EAAAA,KAACW,EAAAA,GAAW,CACV1C,KAAK,WACL6C,YAAY,eACZJ,UAAU,sBACVE,KAAK,WACLpB,SAAUA,EACVG,OAAQA,KAEVc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBF,SAAA,EACjCR,EAAAA,EAAAA,KAACgB,EAAAA,GAAY,CACXC,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,YAC5CT,UAAU,YAAWF,SACtB,gBAIDR,EAAAA,EAAAA,KAACgB,EAAAA,GAAY,CACXC,MAAO,CACLE,MAAO,UACPC,aAAc,MACdC,UAAW,oCAEbX,UAAU,YACVY,QAASA,IAAMhB,EAAAA,EAAQC,KAAK,eAAeC,SAC5C,iCAQX,I,eC1EA,MAsIA,GALiBtB,EAAAA,EAAAA,KAjBOC,CAACC,EAAOC,KACvB,CACLA,SAAUA,MAIclC,IACnBmC,EAAAA,EAAAA,IACL,CACEiC,mBAAoBtE,EAAAA,GACpBsC,iBAAkBb,EAAAA,GAClB8C,aAActD,EAAAA,IAEhBf,IAIa+B,EAjIa7B,IAA2C,IAA1C,aAAEmE,EAAY,mBAAED,GAAoBlE,EACjE,MAAMiD,GAAUmB,EAAAA,EAAAA,OACTC,EAAkBC,IAAuBC,EAAAA,EAAAA,aACzC/B,EAAcgC,IAAmBD,EAAAA,EAAAA,UAAS,KAC3C,SACJpC,EAAQ,aACRC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MA+CJ,OACEI,EAAAA,EAAAA,KAAA8B,EAAAA,SAAA,CAAAtB,SACIkB,GAiDA1B,EAAAA,EAAAA,KAAC+B,EAAY,CAAClC,aAAcA,KAhD5BG,EAAAA,EAAAA,KAAA,OAAKU,UAAU,4BAA2BF,UACxCC,EAAAA,EAAAA,MAAA,QAAMR,SAAUR,GAjDI5B,IAC1B,IAAIqC,EAAU,CACZC,QAAStC,EAAKmE,MACdC,UAAW,GAGbV,EAAmBrB,GAChBtC,MAAMsE,IACLP,GAAoB,GACpBE,EAAgBhE,EAAKmE,MAAM,IAE5BlE,OAAOqE,IACNrC,QAAQC,IAAIoC,EAAI,GAChB,IAoCmD3B,SAAA,EAC/CR,EAAAA,EAAAA,KAACW,EAAAA,GAAW,CACVC,KAAK,QACLC,QAAQ,WACRC,YAAY,4BACZJ,UAAU,qBACVlB,SAAUA,EACVG,OAAQA,KAEVK,EAAAA,EAAAA,KAAA,SAAOU,UAAU,wBAAuBF,SAAC,2EAIzCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBF,SAAA,EACjCR,EAAAA,EAAAA,KAACgB,EAAAA,GAAY,CACXC,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,YAC5CT,UAAU,YACVzC,KAAK,SAAQuC,SACd,cAGDR,EAAAA,EAAAA,KAAA,OAAKU,UAAU,QAAOF,UACpBR,EAAAA,EAAAA,KAACoC,EAAAA,GAAW,CACVC,KAAK,cACLC,UAAYJ,IAzDNK,KACpB,MAAMC,GAAUC,EAAAA,EAAAA,GAAWF,EAASG,YAC9B9B,EAAO4B,EAAQG,WAAWC,MAAM,KACtC,IAAI1C,EAAU,CACZ2C,UAAWjC,EAAK,GAChBkC,SAAUlC,EAAK,GACfT,QAASqC,EAAQR,MACjBe,MAAOP,EAAQQ,QACfC,SAAU,aACVC,SAAUV,EAAQW,IAClBlB,UAAW,GAGbV,EAAmBrB,GAChBtC,MAAK,IACJ4D,EAAa,CACX4B,SAAUZ,EAAQW,IAClBlB,UAAW,IACVrE,MAAKG,IAAmB,IAAlB,SAAEM,GAAUN,EACfsF,EAAQhF,EAASG,aACrBF,eAAeC,QAAQ,YAAa8E,GACpC/C,EAAQC,KAAK,SAAS,MAGzBzC,OAAOqE,IACNrC,QAAQC,IAAIoC,EAAI,GAChB,EAgCYmB,CAAapB,EAAI,EAEnBqB,QAASA,KACPzD,QAAQC,IAAI,eAAe,OAIjCC,EAAAA,EAAAA,KAACgB,EAAAA,GAAY,CACXC,MAAO,CACLE,MAAO,UACPC,aAAc,MACdC,UAAW,oCAEbX,UAAU,YACVY,QAASA,IAAMhB,EAAQC,KAAK,eAAeC,SAC5C,mCASR,G","sources":["action/AuthAct.js","component/Auth/PostRegister/index.jsx","component/Auth/Register/index.jsx"],"sourcesContent":["import { authApi } from \"../service/apiVariables\";\n\nexport const registationApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.registationApi,\n        body,\n      })\n        .then((data) => {\n          resolve(data);\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n\nexport const loginApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.loginApi,\n        body,\n      })\n        .then(({ response }) => {\n          sessionStorage.setItem(\"authToken\", response.access_token);\n          resolve(response);\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n\nexport const verifyOTPApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.verifyOTP,\n        body,\n      })\n        .then((data) => {\n          resolve(data);\n          Toast({ type: \"success\", message: data.message });\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n\nexport const resendOTPApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.resendOTP,\n        body,\n      })\n        .then((data) => {\n          resolve(data);\n          Toast({ type: \"success\", message: data.message });\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n\nexport const resendOTPVerifyApi =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...authApi.resendOTPVerify,\n        body,\n      })\n        .then((data) => {\n          resolve(data);\n          Toast({ type: \"success\", message: data.message });\n        })\n        .catch(({ message }) => {\n          reject(Toast({ type: \"error\", message }));\n        });\n    });\n  };\n","import React, { useState } from \"react\";\nimport \"./index.scss\";\nimport { CustomButton } from \"component/common\";\nimport { CustomInput } from \"component/common/NormalInput\";\nimport { useForm } from \"react-hook-form\";\n\nimport { history } from \"service/helpers\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { verifyOTPApi } from \"action/AuthAct\";\n\nfunction PostRegisterComponentMain({ verifyOTPApiCall, ownProps }) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const { currentEmail } = ownProps;\n  const verifyOTP = (data) => {\n    let payload = {\n      emailId: currentEmail,\n      otp: data.otp,\n      password: data.password,\n    };\n    verifyOTPApiCall(payload).then(() => {\n      history.push(\"/auth/login\");\n    });\n  };\n\n  console.log(currentEmail, \"oww\");\n  return (\n    <form onSubmit={handleSubmit(verifyOTP)}>\n      <div className=\"post-register-container\">\n        <CustomInput\n          type=\"email\"\n          name=\"email\"\n          variant=\"standard\"\n          placeholder=\"Enter Email/Mobile number\"\n          className=\"input-mobile-email\"\n          register={register}\n          errors={errors}\n          defaultValue={currentEmail}\n        />\n        <div className=\"otp-resend-container d-flex justify-content-between my-4\">\n          <label className=\"label-otp-sent\"> OTP sent to Mobile</label>\n          <label className=\"label-resend pe-1\">Resend? </label>\n        </div>\n        <CustomInput\n          type=\"number\"\n          placeholder=\"Enter OTP\"\n          name=\"otp\"\n          className=\"input-otp my-3\"\n          register={register}\n          errors={errors}\n        />\n        <CustomInput\n          type=\"password\"\n          placeholder=\"Set Password\"\n          className=\"input-password my-3\"\n          name=\"password\"\n          register={register}\n          errors={errors}\n        />\n        <div className=\"d-flex flex-column\">\n          <CustomButton\n            style={{ backgroundColor: \"#A26220\", color: \" #FFFFFF\" }}\n            className=\"py-2 mb-3\"\n          >\n            Verify OTP\n          </CustomButton>\n          \n          <CustomButton\n            style={{\n              color: \"#2A71F9\",\n              borderRadius: \"5px\",\n              boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.15)\",\n            }}\n            className=\"py-2 mt-3\"\n            onClick={() => history.push(\"/auth/login\")}\n          >\n            Existing User? Log in\n          </CustomButton>\n        </div>\n        \n      </div>\n    </form>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ownProps: ownProps,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      verifyOTPApiCall: verifyOTPApi,\n    },\n    dispatch\n  );\n};\n\nconst PostRegister = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostRegisterComponentMain);\n\nexport default PostRegister;\n","import React, { useState } from \"react\";\nimport \"./style.scss\";\nimport { CustomButton } from \"component/common\";\nimport jwt_decode from \"jwt-decode\";\nimport { CustomInput } from \"component/common/NormalInput\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { loginApi, registationApi, verifyOTPApi } from \"action/AuthAct\";\nimport PostRegister from \"../PostRegister\";\nimport { GoogleLogin } from \"@react-oauth/google\";\n\nconst RegisterComponentMain = ({ loginApiCall, registationApiCall }) => {\n  const history = useHistory();\n  const [showPostRegister, setShowPostRegister] = useState();\n  const [currentEmail, setCurrentEmail] = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const handlePostRegister = (data) => {\n    let payload = {\n      emailId: data.email,\n      loginType: 3,\n    };\n\n    registationApiCall(payload)\n      .then((res) => {\n        setShowPostRegister(true);\n        setCurrentEmail(data.email);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const googleSignUp = (OAuthRes) => {\n    const decoded = jwt_decode(OAuthRes.credential);\n    const name = decoded.given_name.split(\" \");\n    let payload = {\n      firstName: name[0],\n      lastName: name[1],\n      emailId: decoded.email,\n      image: decoded.picture,\n      roleType: \"home_owner\",\n      socialId: decoded.sub,\n      loginType: 2,\n    };\n\n    registationApiCall(payload)\n      .then(() =>\n        loginApiCall({\n          username: decoded.sub,\n          loginType: 2,\n        }).then(({ response }) => {\n          let token = response.access_token;\n          sessionStorage.setItem(\"authToken\", token);\n          history.push(\"/home/\");\n        })\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      {!showPostRegister ? (\n        <div className=\"d-flex register-container\">\n          <form onSubmit={handleSubmit(handlePostRegister)}>\n            <CustomInput\n              name=\"email\"\n              variant=\"standard\"\n              placeholder=\"Enter Email/Mobile number\"\n              className=\"input-mobile-email\"\n              register={register}\n              errors={errors}\n            />\n            <label className=\"label-privacy-policy \">\n              By continuing, you agree to Paperwall Terms of use and Privacy\n              policy\n            </label>\n            <div className=\"d-flex flex-column\">\n              <CustomButton\n                style={{ backgroundColor: \"#A26220\", color: \" #FFFFFF\" }}\n                className=\"py-2 mb-3\"\n                type=\"submit\"\n              >\n                Continue\n              </CustomButton>\n              <div className=\"my-2 \">\n                <GoogleLogin\n                  text=\"signup_with\"\n                  onSuccess={(res) => {\n                    googleSignUp(res);\n                  }}\n                  onError={() => {\n                    console.log(\"Login Failed\");\n                  }}\n                />\n              </div>\n              <CustomButton\n                style={{\n                  color: \"#2A71F9\",\n                  borderRadius: \"5px\",\n                  boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.15)\",\n                }}\n                className=\"py-2 mt-3\"\n                onClick={() => history.push(\"/auth/login\")}\n              >\n                Existing User? Log in\n              </CustomButton>\n            </div>\n          </form>\n        </div>\n      ) : (\n        <PostRegister currentEmail={currentEmail} />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ownProps: ownProps,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      registationApiCall: registationApi,\n      verifyOTPApiCall: verifyOTPApi,\n      loginApiCall: loginApi,\n    },\n    dispatch\n  );\n};\n\nconst Register = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RegisterComponentMain);\n\nexport default Register;\n"],"names":["registationApi","body","dispatch","getState","_ref","apiCall","Toast","Promise","resolve","reject","authApi","then","data","catch","_ref2","message","type","loginApi","_ref3","_ref4","response","sessionStorage","setItem","access_token","_ref5","verifyOTPApi","_ref6","verifyOTP","_ref7","resendOTPApi","_ref8","resendOTP","_ref9","connect","mapStateToProps","state","ownProps","bindActionCreators","verifyOTPApiCall","register","handleSubmit","formState","errors","useForm","currentEmail","console","log","_jsx","onSubmit","payload","emailId","otp","password","history","push","children","_jsxs","className","CustomInput","name","variant","placeholder","defaultValue","CustomButton","style","backgroundColor","color","borderRadius","boxShadow","onClick","registationApiCall","loginApiCall","useHistory","showPostRegister","setShowPostRegister","useState","setCurrentEmail","_Fragment","PostRegister","email","loginType","res","err","GoogleLogin","text","onSuccess","OAuthRes","decoded","jwt_decode","credential","given_name","split","firstName","lastName","image","picture","roleType","socialId","sub","username","token","googleSignUp","onError"],"sourceRoot":""}