{"version":3,"file":"static/js/3641.3f6d762c.chunk.js","mappings":"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","sources":["action/ContactAct.js","component/Dealership/index.jsx"],"sourcesContent":["import { contactUsAPI } from \"../service/apiVariables\";\n\nexport const createContact =\n  (body) =>\n  (dispatch, getState, { apiCall, Toast }) => {\n    return new Promise((resolve, reject) => {\n      apiCall({\n        ...contactUsAPI.createContact,\n        body,\n      }).then((data) => {\n        resolve(data);\n      });\n    });\n  };\n","import React from \"react\";\nimport \"./style.scss\";\nimport { CustomButton, NormalNavigate } from \"component/common\";\nimport { useForm } from \"react-hook-form\";\nimport Dealershipimg from \"assets/images/Dealership.png\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Toast } from \"service/toast\";\nimport { bindActionCreators } from \"redux\";\nimport { createContact } from \"action/ContactAct\";\nimport { connect } from \"react-redux\";\n\nconst ContactUsSchema = yup.object().shape({\n  firstname: yup\n    .string()\n    .min(2, \"First Name must be atleast 2 characters\")\n    .required(\"First Name is required\"),\n  lastname: yup\n    .string()\n    .min(1, \"Last Name must be atleast 1 character\")\n    .required(\"Last Name is required\"),\n  email: yup\n    .string()\n    .email(\"Please enter valid mail id\")\n    .required(\"Email is required\"),\n  mobilenumber: yup\n    .string()\n    .min(10, \"Mobile Number must be atleast 10 digits\")\n    .max(16, \"Mobile Number must be less than 16 digits\")\n    .required(\"Mobile Number is required\"),\n  country: yup.string().max(18).required(\"Country is required\"),\n  state: yup.string().required(\"State is required\"),\n  city: yup.string().max(10).required(\"City is required\"),\n  pincode: yup\n    .number(\"Pincode should be number type\")\n    .required(\"Pincode is required\"),\n\n  companyname: yup.string().transform((originalValue, originalObject) => {\n    // Apply validation only if the 'message' field is not empty\n    if (originalObject.message && originalObject.message.length > 0) {\n      return yup\n        .string()\n        .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \")\n        .validate(originalValue);\n    }\n    return originalValue;\n  }),\n  companyregno: yup.string().transform((originalValue, originalObject) => {\n    // Apply validation only if the 'message' field is not empty\n    if (originalObject.message && originalObject.message.length > 0) {\n      return yup\n        .string()\n        .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \")\n        .validate(originalValue);\n    }\n    return originalValue;\n  }),\n  message: yup\n    .string()\n    .max(240, \"Maximum characters allowed is 240\")\n    .transform((originalValue, originalObject) => {\n      // Apply validation only if the 'company' field is not empty\n      if (originalObject.company && originalObject.company.length > 0) {\n        return yup\n          .string()\n          .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed for this field \")\n          .validate(originalValue);\n      }\n      return originalValue;\n    }),\n});\n\nfunction DealershipFC({ createContactAPI }) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(ContactUsSchema) });\n  const onSubmit = (data) => {\n    let payload = {\n      firstName: data.firstname,\n      lastName: data.lastname,\n      emailId: data.email,\n      phoneNumber: parseInt(data.mobilenumber),\n      country: data.country,\n      state: data.state,\n      city: data.city,\n      pinCode: data.pincode,\n      companyName: data.companyname || null,\n      companyRegistrationNumber: parseInt(data.companyregno) || null, // Use null or an empty string as a default value\n      message: data.message || null, // Use null or an empty string as a default value\n    };\n    createContactAPI(payload).then(() => {\n      Toast({ type: \"success\", message: \"Form Submitted\" });\n    });\n  };\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div>\n        <div>\n          <NormalNavigate navigationStyle=\"dealership-head\">\n            <div className=\"mainmenuu\">Dealership</div>\n          </NormalNavigate>\n        </div>\n        <div>\n          <div className=\"dealershiphead\">Why Dealership?</div>\n          <div className=\"dcontentscollab\">\n            <div className=\"dealercontents\">\n              <img src={Dealershipimg} />\n            </div>\n            <div className=\"dealerinfo\">\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Et\n                tincidunt amet lorem ultrices iaculis amet, est, commodo purus.\n                Est pellentesque amet donec massa sit nisl auctor. Euismod massa\n                semper porta feugiat erat non velit bibendum eget. Nisi nullam\n                auctor velit euismod volutpat. Iaculis ac nam potenti id.\n                Rhoncus, scelerisque at dui id feugiat. Tortor, non scelerisque\n                auctor mattis euismod augue cum vestibulum. Tristique dictum eu\n                cras mauris nam et. Lorem ipsum dolor sit amet, consectetur\n                adipiscing elit. Et tincidunt amet lorem ultrices iaculis amet,\n                est, commodo purus. Est pellentesque amet donec massa sit nisl\n                auctor. Euismod massa semper porta feugiat erat non velit\n                bibendum eget. Nisi nullam auctor velit euismod volutpat.\n                Iaculis ac nam potenti id. Rhoncus, scelerisque at dui id\n                feugiat. Tortor, non scelerisque auctor mattis euismod augue cum\n                vestibulum. Tristique dictum eu cras mauris nam et. Lorem ipsum\n                dolor sit amet, consectetur adipiscing elit. Et tincidunt amet\n                lorem ultrices iaculis amet, est, commodo purus. Est\n                pellentesque amet donec massa sit nisl auctor. Euismod massa\n                semper porta feugiat erat non velit bibendum eget. Nisi nullam\n                auctor velit euismod volutpat. Iaculis ac nam potenti id.\n                Rhoncus, scelerisque at dui id feugiat. Tortor, non scelerisque\n                auctor mattis euismod augue cum vestibulum. Tristique dictum eu\n                cras mauris nam et. Lorem ipsum dolor sit amet,{\" \"}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"getintouch\">Get in touch with us</div>\n          <div className=\"d-flex justify-content-center pt-3\">\n            <div className=\"contact-info-container\">\n              <div className=\"field\">\n                <label>\n                  First Name<span>*</span>\n                </label>\n                <input\n                  {...register(\"firstname\")}\n                  type=\"text\"\n                  placeholder=\"Enter your First Name\"\n                  name=\"firstname\"\n                />\n                {errors.firstname && (\n                  <span className=\"error-text\">{errors.firstname.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  Last Name <span>*</span>\n                </label>\n                <input\n                  {...register(\"lastname\")}\n                  type=\"text\"\n                  placeholder=\"Enter your Last Name\"\n                  name=\"lastname\"\n                />\n                {errors.lastname && (\n                  <span className=\"error-text\">{errors.lastname.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  Email<span>*</span>\n                </label>\n                <input\n                  {...register(\"email\")}\n                  type=\"email\"\n                  placeholder=\"Enter your Email\"\n                  name=\"email\"\n                />\n                {errors.email && (\n                  <span className=\"error-text\">{errors.email.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  Mobile Number<span>*</span>\n                </label>\n                <input\n                  type=\"number\"\n                  {...register(\"mobilenumber\")}\n                  placeholder=\"Enter your Mobile\"\n                  name=\"mobilenumber\"\n                />\n                {errors.mobilenumber && (\n                  <span className=\"error-text\">\n                    {errors.mobilenumber.message}\n                  </span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  Country<span>*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  {...register(\"country\")}\n                  placeholder=\"Enter your Country\"\n                  name=\"country\"\n                />\n                {errors.country && (\n                  <span className=\"error-text\">{errors.country.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  State<span>*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  {...register(\"state\")}\n                  placeholder=\"Enter your State\"\n                  name=\"state\"\n                />\n                {errors.state && (\n                  <span className=\"error-text\">{errors.state.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  City<span>*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  {...register(\"city\")}\n                  placeholder=\"Enter your City\"\n                  name=\"city\"\n                />\n                {errors.city && (\n                  <span className=\"error-text\">{errors.city.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>\n                  Pincode<span>*</span>\n                </label>\n                <input\n                  type=\"number\"\n                  {...register(\"pincode\")}\n                  placeholder=\"Enter your Pincode\"\n                  name=\"pincode\"\n                />\n                {errors.pincode && (\n                  <span className=\"error-text\">{errors.pincode.message}</span>\n                )}\n              </div>\n              <div className=\"field\">\n                <label>Company Name</label>\n                <input\n                  type=\"text\"\n                  {...register(\"companyname\")}\n                  placeholder=\"Enter your Company Name\"\n                  name=\"company\"\n                />\n              </div>\n              <div className=\"field\">\n                <label>Company Registration Number</label>\n                <input\n                  type=\"text\"\n                  {...register(\"companyregno\")}\n                  placeholder=\"Enter your Company Registered Number\"\n                  name=\"company\"\n                />\n              </div>\n              <div className=\"field\">\n                <label>Message </label>\n                <textarea\n                  className=\"field-message\"\n                  {...register(\"message\")}\n                  type=\"text\"\n                  placeholder=\"Enter Message\"\n                  name=\"message\"\n                />\n                {errors.message && (\n                  <span className=\"error-text\">{errors.message.message}</span>\n                )}\n              </div>\n            </div>\n          </div>\n          <CustomButton variant=\"contained\" className=\"dealer-enquire\">\n            Enquire Now\n          </CustomButton>\n\n          <div className=\"dealercontacthead\">Contact Us</div>\n          <div className=\"d-flex justify-content-center dealercontactcards\">\n            <div className=\"dealeraddress\">\n              <span>Address</span>\n              <p>\n                115/A, Pycraft Garden Road, Nungambakkam, Chennai - 600 034,\n                Tamil Nadu.\n              </p>\n            </div>\n\n            <div className=\"dealercontactcall\">\n              <span>Call On</span>\n              <p>For any queries call us on</p>\n              <small>+91 5684 64865</small>\n              <br />\n              <small>+91 65486 32135</small>\n            </div>\n\n            <div className=\"dealercontactemail\">\n              <span>Email Us</span>\n              <p>For any queries write to us on</p>\n              <small>Support@gmail.com</small>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      createContactAPI: createContact,\n    },\n    dispatch\n  );\n};\n\nconst Dealership = connect(null, mapDispatchToProps)(DealershipFC);\nexport default Dealership;\n"],"names":["createContact","body","dispatch","getState","_ref","apiCall","Toast","Promise","resolve","reject","contactUsAPI","then","data","ContactUsSchema","yup","shape","firstname","min","required","lastname","email","mobilenumber","max","country","state","city","pincode","companyname","transform","originalValue","originalObject","message","length","matches","validate","companyregno","company","connect","bindActionCreators","createContactAPI","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","_jsx","onSubmit","payload","firstName","lastName","emailId","phoneNumber","parseInt","pinCode","companyName","companyRegistrationNumber","type","children","_jsxs","NormalNavigate","navigationStyle","className","src","Dealershipimg","placeholder","name","CustomButton","variant"],"sourceRoot":""}