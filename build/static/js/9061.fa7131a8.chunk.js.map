{"version":3,"file":"static/js/9061.fa7131a8.chunk.js","mappings":"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","sources":["action/CartAct.js","action/CommonAct.js","component/Home/subcomponents/CardThree/index.js","component/common/CustomPriceRangeSlider/index.js","component/ProductListing/ProductFilter.jsx","component/ProductListing/ProductHeader.jsx","component/ProductListing/ProductListCategory.jsx","component/ProductListing/ProductSorting.jsx"],"sourcesContent":["import { addQuery } from \"service/helperFunctions\";\r\nimport { cartApi } from \"../service/apiVariables\";\r\n\r\nexport const CreateCartApi =\r\n  (body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...cartApi.createCart,\r\n        body,\r\n      })\r\n        .then((data) => {\r\n          resolve(data);\r\n        })\r\n        .catch(({ message }) => {\r\n          reject(Toast({ type: \"error\", message }));\r\n        });\r\n    });\r\n  };\r\n\r\nexport const getCartListing =\r\n  () =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCall({\r\n        ...cartApi.cartList,\r\n      }).then((data) => {\r\n        resolve(data);\r\n      });\r\n    });\r\n  };\r\n\r\nexport const deleteCart =\r\n  (query) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      addQuery(query, cartApi.deleteCart);\r\n      apiCall({\r\n        ...cartApi.deleteCart,\r\n      }).then((data) => {\r\n        resolve(data);\r\n      });\r\n    });\r\n  };\r\n\r\nexport const updateCart =\r\n  (query, body) =>\r\n  (dispatch, getState, { apiCall, Toast }) => {\r\n    return new Promise((resolve, reject) => {\r\n      addQuery(query, cartApi.updateCart);\r\n      apiCall({\r\n        ...cartApi.updateCart,\r\n        body,\r\n      }).then((data) => {\r\n        resolve(data);\r\n      });\r\n    });\r\n  };\r\n","import { Toast } from \"service/toast\";\r\n\r\nexport const sortingFunction = (value, data) => {\r\n  switch (value) {\r\n    case 1:\r\n      return;\r\n    case 2:\r\n      return;\r\n    case 3:\r\n      return data.sort((a, b) => b.price - a.price).slice(0);\r\n    case 4:\r\n      return data.sort((a, b) => a.price - b.price).slice(0);\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport const addToCart = (data, newData) => {\r\n  if (newData.includes(data)) {\r\n    Toast({ type: \"warning\", message: \"Item already exists\" });\r\n  } else {\r\n    Toast({ type: \"success\", message: \"Item added to Cart\" });\r\n    return newData.push(data);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { ternaryCondition } from \"service/helperFunctions\";\r\nimport { Checkbox } from \"@mui/material\";\r\nimport {\r\n  Favorite,\r\n  ShoppingCart,\r\n  ShoppingCartOutlined,\r\n  FavoriteBorder,\r\n} from \"@mui/icons-material\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { CreateCartApi } from \"action/CartAct\";\r\nimport { connect } from \"react-redux\";\r\nimport { Toast } from \"service/toast\";\r\n\r\nfunction CardThreeFC({ onClickCard, prodData, isHome, createCartApiCall }) {\r\n  console.log(prodData, \"prod data\");\r\n  const { title, images, price } = prodData;\r\n  const [iconVisibility, seticonVisibility] = useState(false);\r\n  const [fav, setFav] = useState(false);\r\n  const [cart, setCart] = useState(false);\r\n\r\n  const handleFavorite = ({ target: { name, checked } }, prodData) => {\r\n    setFav(!fav);\r\n    if (checked) {\r\n      Toast({ type: \"success\", message: \"Item added to Wishlist\" });\r\n    } else {\r\n      Toast({ type: \"info\", message: \"Item removed from Wishlist\" });\r\n    }\r\n  };\r\n  const handleCart = ({ target: { name, checked } }, prodData) => {\r\n    setCart(!cart);\r\n    if (checked) {\r\n      let payload = {\r\n        productId: prodData.id.toString(),\r\n        quantity: 1,\r\n        color: prodData.color,\r\n      };\r\n      createCartApiCall(payload).then(() => {\r\n        Toast({\r\n          type: \"success\",\r\n          message: \"Item Added To Cart\",\r\n        });\r\n      });\r\n    } else {\r\n      Toast({ type: \"info\", message: \"Item removed from Cart\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card-three-container\"\r\n      onMouseEnter={() => {\r\n        seticonVisibility(true);\r\n      }}\r\n      onMouseLeave={() => {\r\n        seticonVisibility(false);\r\n      }}\r\n    >\r\n      <div className=\"card-three-image-section\">\r\n        {iconVisibility ? (\r\n          <div className=\"icon-container\">\r\n            <div className=\"icon-container-inner d-flex p-2\">\r\n              <div className=\"icon-1\">\r\n                <Checkbox\r\n                  name={title}\r\n                  checked={fav}\r\n                  onChange={(e) => handleFavorite(e, prodData)}\r\n                  icon={\r\n                    <FavoriteBorder\r\n                      sx={ternaryCondition(\r\n                        isHome,\r\n                        { color: \"#000000\" },\r\n                        { color: \"#2A71F9\" }\r\n                      )}\r\n                    />\r\n                  }\r\n                  checkedIcon={\r\n                    <Favorite\r\n                      sx={ternaryCondition(\r\n                        isHome,\r\n                        { color: \"#ed1b24\" },\r\n                        { color: \"#2A71F9\" }\r\n                      )}\r\n                    />\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"icon-2\">\r\n                <Checkbox\r\n                  name={title}\r\n                  checked={cart}\r\n                  onChange={(e) => handleCart(e, prodData)}\r\n                  icon={\r\n                    <ShoppingCartOutlined\r\n                      sx={ternaryCondition(\r\n                        isHome,\r\n                        { color: \"#000000\" },\r\n                        { color: \"#2A71F9\" }\r\n                      )}\r\n                    />\r\n                  }\r\n                  checkedIcon={\r\n                    <ShoppingCart\r\n                      sx={ternaryCondition(\r\n                        isHome,\r\n                        { color: \"#ed1b24\" },\r\n                        { color: \"#2A71F9\" }\r\n                      )}\r\n                    />\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <div\r\n          onClick={() => onClickCard(prodData)}\r\n          className=\"card-image-container\"\r\n        >\r\n          <img\r\n            className=\"card-image\"\r\n            src={`${ternaryCondition(\r\n              Array.isArray(images),\r\n              images[0],\r\n              images\r\n            )}`}\r\n            alt={title}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"card-three-title\">{title}</div>\r\n      <div className=\"card-three-price\">{`₹${price}/Roll`}</div>\r\n      <div className=\"card-three-info-txt\">Included Tax | Free Shipping</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      createCartApiCall: CreateCartApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst CardThree = connect(null, mapDispatchToProps)(CardThreeFC);\r\n\r\nexport default CardThree;\r\n","import * as React from \"react\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport \"./style.scss\";\r\n\r\nconst AirbnbSlider = styled(Slider)(({ theme }) => ({\r\n  color: \"#2A71F9\",\r\n  height: 90,\r\n\r\n  \"& .MuiSlider-thumb\": {\r\n    height: 27,\r\n    width: 3,\r\n    backgroundColor: \"currentColor\",\r\n    border: \"1px solid currentColor\",\r\n    borderRadius: 0,\r\n    boxShadow: \"none\",\r\n    \"&:active,:hover\": {\r\n      boxShadow: \"none\",\r\n    },\r\n\r\n    \"& .airbnb-bar\": {\r\n      height: 9,\r\n      width: 1,\r\n      backgroundColor: \"currentColor\",\r\n      marginLeft: 1,\r\n      marginRight: 1,\r\n      borderRadius: 0,\r\n    },\r\n  },\r\n  \"& .MuiSlider-valueLabel\": {\r\n    lineHeight: 1,\r\n    fontSize: 12,\r\n    padding: \"2px 6px 2px 6px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"auto\",\r\n    height: 25,\r\n    backgroundColor: \"#2A71F9\",\r\n  },\r\n  \"& .MuiSlider-track\": {\r\n    borderRadius: 0,\r\n    height: 10,\r\n  },\r\n  \"& .MuiSlider-rail\": {\r\n    color: theme.palette.mode === \"dark\" ? \"#bfbfbf\" : \"#d8d8d8\",\r\n    opacity: theme.palette.mode === \"dark\" ? undefined : 1,\r\n    height: 10,\r\n    borderRadius: 0,\r\n  },\r\n}));\r\n\r\nexport const CustomPriceRangeSlider = ({ pricevalue, onChange, maxValue }) => {\r\n  return (\r\n    <div className=\"slider-container px-3\">\r\n      <AirbnbSlider\r\n        value={pricevalue}\r\n        onChange={onChange}\r\n        max={maxValue}\r\n        valueLabelDisplay=\"auto\"\r\n        getAriaValueText={(value) => `₹ ${value}`}\r\n        valueLabelFormat={(value) => `₹ ${value}`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { CustomFilterAccordion } from \"component/common\";\r\nimport { Accordion, AccordionDetails, AccordionSummary } from \"@mui/material\";\r\nimport ExpandIcon from \"assets/icons/ExpandIcon\";\r\nimport { CustomPriceRangeSlider } from \"component/common/CustomPriceRangeSlider\";\r\nimport { getProductFilterApi } from \"action/ProductsAct\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst ProductListingGridFC = ({\r\n  setCheckedValues,\r\n  maximumPrice,\r\n  pricevalue,\r\n  setPriceValue,\r\n  getProductFilterApi,\r\n}) => {\r\n  const handlePriceFilter = (event, newValue) => {\r\n    setPriceValue(newValue);\r\n  };\r\n\r\n  const handleCheck = ({ target: { name, value, checked } }, title) => {\r\n    setCheckedValues((prevState) => {\r\n      const newState = { ...prevState };\r\n      if (checked) {\r\n        newState[title] = newState[title]\r\n          ? [...newState[title], value]\r\n          : [value];\r\n      } else {\r\n        newState[title] = newState[title].filter((item) => item !== value);\r\n      }\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  const [filterData, setFilterData] = useState([]);\r\n\r\n  const getProductFilterAPI = () => {\r\n    getProductFilterApi()\r\n      .then(({ response }) => {\r\n        setFilterData(response);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching filter data:\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => getProductFilterAPI(), []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"filter-container\">\r\n        {filterData.map(({ title, value }, index) => (\r\n          <CustomFilterAccordion\r\n            key={index}\r\n            title={title}\r\n            index={index}\r\n            value={value}\r\n            onChange={handleCheck}\r\n          />\r\n        ))}\r\n        <Accordion>\r\n          <AccordionSummary expandIcon={<ExpandIcon height={10} width={10} />}>\r\n            <label className=\"filter-title cursor-pointer\">Price</label>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <CustomPriceRangeSlider\r\n              maxValue={maximumPrice}\r\n              pricevalue={pricevalue}\r\n              onChange={handlePriceFilter}\r\n            />\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (_, ownProps) => {\r\n  return {\r\n    ownProps: ownProps,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getProductFilterApi: getProductFilterApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport const ProductListingGrid = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProductListingGridFC);\r\n","import { productBanner } from \"config\";\r\nimport \"./style.scss\";\r\n\r\nexport function ProductHeader({ bannerLabel }) {\r\n  const bannerImage = productBanner.filter((data) => data.type === bannerLabel);\r\n\r\n  return (\r\n    <div className=\"product-banner-container py-3\">\r\n      <div className=\"product-banner-label-container\">\r\n        <label className=\"product-banner-label\">{bannerLabel}</label>\r\n      </div>\r\n\r\n      <img\r\n        width=\"100%\"\r\n        height=\"505px\"\r\n        src={bannerImage[0]?.image}\r\n        alt=\"product-banner\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./style.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getFilteredProductApi } from \"action/ProductsAct\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { ProductHeader } from \"./ProductHeader\";\r\nimport CardThree from \"component/Home/subcomponents/CardThree\";\r\nimport { ProductListingGrid } from \"./ProductFilter\";\r\nimport { ProductSorting } from \"./ProductSorting\";\r\nimport { history } from \"service/helpers\";\r\n\r\nconst ProductListCategoryFC = ({ getFilteredProductListApi }) => {\r\n  let params = useParams();\r\n\r\n  let maxValue = \"10000\";\r\n  const [checkedValues, setCheckedValues] = useState({\r\n    subCategory: [],\r\n    roomId: [],\r\n    collectionId: [],\r\n    colorId: [],\r\n  });\r\n  const [pricevalue, setPriceValue] = useState([0, maxValue]);\r\n  const [productsData, setProductsData] = useState([]);\r\n  const [page, setPage] = useState({});\r\n  console.log(checkedValues, \"checkk\");\r\n  const getAllProductsAPI = () => {\r\n    const { subCategory, roomId, collectionId, colorId } = checkedValues;\r\n\r\n    let body = {\r\n      page: 1,\r\n      limit: 10,\r\n      categoryId: [params.categoryId],\r\n      start_price: \"1\",\r\n      end_price: \"10000\",\r\n      sort: \"\",\r\n    };\r\n\r\n    if (subCategory.length > 0) {\r\n      body.subCategoryId = subCategory;\r\n    }\r\n    if (roomId.length > 0) {\r\n      body.roomId = roomId;\r\n    }\r\n    if (collectionId.length > 0) {\r\n      body.collectionId = collectionId;\r\n    }\r\n    if (colorId.length > 0) {\r\n      body.color = colorId;\r\n    }\r\n\r\n    getFilteredProductListApi(body)\r\n      .then(({ response }) => {\r\n        setProductsData(response.data);\r\n        setPage(response.pageMeta);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching filter data:\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => getAllProductsAPI(), [params, checkedValues]);\r\n\r\n  const handleProductDetail = (prodData) => {\r\n    history.push(`/home/product-details/${prodData._id}`);\r\n  };\r\n  return (\r\n    <div className=\"product-listing-container\">\r\n      <ProductHeader bannerLabel=\"wallpaper\" />\r\n      <div className=\"d-flex mt-4\">\r\n        <ProductListingGrid\r\n          locationLabel={\"wallpaper\"}\r\n          maximumPrice={maxValue}\r\n          setCheckedValues={setCheckedValues}\r\n          pricevalue={pricevalue}\r\n          setPriceValue={setPriceValue}\r\n        />\r\n        <div className=\"d-flex flex-column w-100\">\r\n          <ProductSorting itemCount={page.total} itemLabel={\"wallpaper\"} />\r\n          <div className=\"card-container\">\r\n            <div className=\"row\">\r\n              {productsData.map((prodData) => (\r\n                <div className=\"card-container-main col-4\" key={prodData._id}>\r\n                  <CardThree\r\n                    prodData={prodData}\r\n                    onClickCard={(e) => handleProductDetail(e)}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getFilteredProductListApi: getFilteredProductApi,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst ProductListCategory = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ProductListCategoryFC);\r\n\r\nexport default ProductListCategory;\r\n","import { sortingFunction } from \"action/CommonAct\";\r\nimport { CustomSelect } from \"component/common\";\r\nimport { SortingMenuList } from \"config\";\r\n\r\nimport \"./style.scss\";\r\n\r\nexport const ProductSorting = ({ itemCount, itemLabel, itemData }) => {\r\n  const handleSorting = ({ target: { value } }) => {\r\n    let sortedData = sortingFunction(value, itemData);\r\n  };\r\n  return (\r\n    <div className=\"sorting-container \">\r\n      <div>\r\n        <label className=\"label-item-count\">{itemCount}</label>\r\n        <label className=\"ps-1 label-item-label\">{itemLabel}</label>\r\n      </div>\r\n      <div className=\"d-flex align-items-center\">\r\n        <label className=\"sort-by-text\">Sort by</label>\r\n        <CustomSelect\r\n          menuItemList={SortingMenuList}\r\n          inputStyle=\"sorting-menu-style\"\r\n          menuItemStyle=\"menu-item\"\r\n          name=\"sorting\"\r\n          onChange={(e) => handleSorting(e)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["CreateCartApi","body","dispatch","getState","_ref","apiCall","Toast","Promise","resolve","reject","cartApi","createCart","then","data","catch","_ref2","message","type","getCartListing","_ref3","cartList","deleteCart","query","_ref4","addQuery","updateCart","_ref5","sortingFunction","value","sort","a","b","price","slice","connect","bindActionCreators","createCartApiCall","onClickCard","prodData","isHome","console","log","title","images","iconVisibility","seticonVisibility","useState","fav","setFav","cart","setCart","_jsxs","className","onMouseEnter","onMouseLeave","children","_jsx","Checkbox","name","checked","onChange","e","handleFavorite","target","icon","FavoriteBorder","sx","ternaryCondition","color","checkedIcon","Favorite","handleCart","payload","productId","id","toString","quantity","ShoppingCartOutlined","ShoppingCart","onClick","src","concat","Array","isArray","alt","AirbnbSlider","styled","Slider","theme","height","width","backgroundColor","border","borderRadius","boxShadow","marginLeft","marginRight","lineHeight","fontSize","padding","display","alignItems","justifyContent","palette","mode","opacity","undefined","CustomPriceRangeSlider","pricevalue","maxValue","max","valueLabelDisplay","getAriaValueText","valueLabelFormat","ProductListingGrid","mapStateToProps","_","ownProps","getProductFilterApi","setCheckedValues","maximumPrice","setPriceValue","handleCheck","prevState","newState","filter","item","filterData","setFilterData","useEffect","response","error","_Fragment","map","index","CustomFilterAccordion","Accordion","AccordionSummary","expandIcon","ExpandIcon","AccordionDetails","handlePriceFilter","event","newValue","ProductHeader","_bannerImage$","bannerLabel","bannerImage","productBanner","image","getFilteredProductListApi","getFilteredProductApi","params","useParams","checkedValues","subCategory","roomId","collectionId","colorId","productsData","setProductsData","page","setPage","getAllProductsAPI","limit","categoryId","start_price","end_price","length","subCategoryId","pageMeta","locationLabel","ProductSorting","itemCount","total","itemLabel","CardThree","history","push","_id","handleProductDetail","itemData","CustomSelect","menuItemList","SortingMenuList","inputStyle","menuItemStyle","handleSorting"],"sourceRoot":""}