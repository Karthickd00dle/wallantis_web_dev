{"version":3,"file":"static/js/8963.7cd3f5f2.chunk.js","mappings":"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","sources":["assets/svg/visualizer/arrow-left.svg","component/RoomVisualizer/index.js"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 22,\n    viewBox: \"0 0 24 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.5 9.49993H4.71L10.155 2.95992C10.4096 2.6536 10.5321 2.25868 10.4955 1.86204C10.459 1.4654 10.2663 1.09953 9.96 0.844925C9.65368 0.590317 9.25875 0.467825 8.86211 0.504394C8.46548 0.540964 8.09961 0.7336 7.845 1.03993L0.345 10.0399C0.294541 10.1115 0.249419 10.1867 0.21 10.2649C0.21 10.3399 0.21 10.3849 0.105 10.4599C0.0370105 10.6319 0.00141168 10.815 0 10.9999C0.00141168 11.1849 0.0370105 11.3679 0.105 11.5399C0.105 11.6149 0.105 11.6599 0.21 11.7349C0.249419 11.8131 0.294541 11.8883 0.345 11.9599L7.845 20.9599C7.98603 21.1292 8.16264 21.2654 8.36227 21.3588C8.5619 21.4521 8.77963 21.5003 9 21.4999C9.35048 21.5006 9.69013 21.3785 9.96 21.1549C10.1119 21.029 10.2374 20.8743 10.3295 20.6998C10.4215 20.5253 10.4782 20.3343 10.4963 20.1379C10.5144 19.9414 10.4936 19.7433 10.435 19.5549C10.3765 19.3665 10.2813 19.1915 10.155 19.0399L4.71 12.4999H22.5C22.8978 12.4999 23.2794 12.3419 23.5607 12.0606C23.842 11.7793 24 11.3977 24 10.9999C24 10.6021 23.842 10.2206 23.5607 9.93927C23.2794 9.65796 22.8978 9.49993 22.5 9.49993Z\",\n    fill: \"black\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.9b7d0e28144f3f81c58a2510a662ec2d.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\nimport \"./index.scss\";\nimport uploadImage from \"assets/images/uploadImage.png\";\nimport brownWall from \"assets/images/visualizer/brown-wall.png\";\nimport dayDreamWall from \"assets/images/visualizer/daydream-wall.png\";\nimport diamondWall from \"assets/images/visualizer/diamond-wall.png\";\nimport greenWall from \"assets/images/visualizer/green-wall.png\";\nimport illusionWall from \"assets/images/visualizer/illusion-wall.png\";\nimport slickWeaveWall from \"assets/images/visualizer/slik-weave-wall.png\";\nimport arrowBack from \"assets/svg/visualizer/arrow-left.svg\";\n\nimport LivingRoom1 from \"assets/images/visualizer/rooms/living-room-sofa.png\";\nimport LivingRoom2 from \"assets/images/visualizer/rooms/living-room-sofa-2.png\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport default function RoomVisualizer() {\n  const history = useHistory();\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [activeTexture, setActiveTexture] = useState(null);\n  const TextureBackground = styled.div`\n    background: url(${(props) => props.url}) center/cover no-repeat;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: flex-end;\n  `;\n\n  useEffect(() => {\n    window.scroll(0, 0);\n  }, []);\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      setUploadedImage(reader.result);\n    };\n\n    reader.readAsDataURL(file);\n  };\n  const handleWallImageClick = (image) => {\n    setUploadedImage(image);\n  };\n  return (\n    <React.Fragment>\n      <div className=\"room-visualizer\">\n        {uploadedImage ? (\n          <div className=\"visualizer-module-container\">\n            <div className=\"visualizer-module-content d-flex align-items-end m-5\">\n              <TextureBackground url={activeTexture}>\n                <img\n                  src={uploadedImage}\n                  alt=\"UploadedWallImage\"\n                  className=\"wallpaper-image\"\n                />\n              </TextureBackground>\n            </div>\n            <div className=\"visulaizer-module-sidebar\">\n              <div className=\"v-m-siderbar-head\">\n                <img\n                  src={arrowBack}\n                  alt=\"arrowBack\"\n                  onClick={() => setUploadedImage(null)}\n                />\n                <p>Textues</p>\n              </div>\n              <div className=\"textures-container\">\n                <div\n                  className=\"texture-image-box\"\n                  onClick={() => setActiveTexture(diamondWall)}\n                >\n                  <img\n                    className=\"texture-img\"\n                    src={diamondWall}\n                    alt=\"diamondWall\"\n                  />\n                  <p>Diamond Wallpaper</p>\n                </div>\n                <div\n                  className=\"texture-image-box\"\n                  onClick={() => setActiveTexture(brownWall)}\n                >\n                  <img\n                    className=\"texture-img\"\n                    src={brownWall}\n                    alt=\"brownWall\"\n                  />\n                  <p>Brown Wallpaper</p>\n                </div>\n                <div\n                  className=\"texture-image-box\"\n                  onClick={() => setActiveTexture(dayDreamWall)}\n                >\n                  <img\n                    className=\"texture-img\"\n                    src={dayDreamWall}\n                    alt=\"dayDreamWall\"\n                  />\n                  <p>Daydreamer Wallpaper</p>\n                </div>\n                <div\n                  className=\"texture-image-box\"\n                  onClick={() => setActiveTexture(illusionWall)}\n                >\n                  <img\n                    className=\"texture-img\"\n                    src={illusionWall}\n                    alt=\"illusionWall\"\n                  />\n                  <p>Illusion Wallpaper</p>\n                </div>\n                <div\n                  className=\"texture-image-box\"\n                  onClick={() => setActiveTexture(slickWeaveWall)}\n                >\n                  <img\n                    className=\"texture-img\"\n                    src={slickWeaveWall}\n                    alt=\"slickWeaveWall\"\n                  />\n                  <p>Silk Weave Wallpaper</p>\n                </div>\n                <div\n                  className=\"texture-image-box\"\n                  onClick={() => setActiveTexture(greenWall)}\n                >\n                  <img\n                    className=\"texture-img\"\n                    src={greenWall}\n                    alt=\"greenWall\"\n                  />\n                  <p>Green Wallpaper</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <React.Fragment>\n            <h2>Select a Room Space to Visualise</h2>\n\n            <div className=\"upload-picture\">\n              <div className=\"upload-btn-wrapper\">\n                <img className=\"btn\" alt=\"uploadBtn\" src={uploadImage} />\n                <input type=\"file\" name=\"myfile\" onChange={handleImageUpload} />\n              </div>\n              <p>Drag & Drop Or Upload your Room Pic</p>\n              <p>Living Room, Kids Room, Dining Room, Bedroom,etc</p>\n            </div>\n\n            <div className=\"grid-main\">\n              <div className=\"wallpaper-child\">\n                <div\n                  className=\"wallpaper-image-container\"\n                  onClick={() => handleWallImageClick(LivingRoom1)}\n                >\n                  <img\n                    src={LivingRoom1}\n                    className=\"wallpaper-image\"\n                    alt=\"wallImage\"\n                  />\n                </div>\n                <p>Living Room</p>\n              </div>\n              <div className=\"wallpaper-child\">\n                <div\n                  className=\"wallpaper-image-container\"\n                  onClick={() => handleWallImageClick(LivingRoom2)}\n                >\n                  <img\n                    src={LivingRoom2}\n                    className=\"wallpaper-image\"\n                    alt=\"wallImage\"\n                  />\n                  <p>Hall Room</p>\n                </div>\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n"],"names":["RoomVisualizer","useHistory","uploadedImage","setUploadedImage","useState","activeTexture","setActiveTexture","TextureBackground","styled","div","props","url","useEffect","window","scroll","handleWallImageClick","image","_jsx","React","children","className","_jsxs","src","alt","arrowBack","onClick","diamondWall","brownWall","dayDreamWall","illusionWall","slickWeaveWall","greenWall","uploadImage","type","name","onChange","e","file","target","files","reader","FileReader","onload","result","readAsDataURL","LivingRoom1","LivingRoom2"],"sourceRoot":""}